var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/components/AboutComponent.html",[0,0.098,1,0.594]],["body/components/AboutComponent.html",[0,0.185,1,1.086,2,0.945,3,0.175,4,0.153,5,0.935,6,0.976,7,0.935,8,0.935,9,0.153,10,4.251,11,0.785,12,1.392,13,1.573,14,4.808,15,3.363,16,0.935,17,1.309,18,1.25,19,1.034,20,6.774,21,0.989,22,6.188,23,0.418,24,0.016,25,0.529,26,0.175,27,0.124,28,6.188,29,0.858,30,1.178,31,1.129,32,0.935,33,1.354,34,0.935,35,0.368,36,0.935,37,0.785,38,0.935,39,0.785,40,0.785,41,1.29,42,1.29,43,0.785,44,1.354,45,0.785,46,0.935,47,0.75,48,1.178,49,1.29,50,0.785,51,0.935,52,0.75,53,1.183,54,0.75,55,0.861,56,0.935,57,0.785,58,1.178,59,0.785,60,0.935,61,0.75,62,0.935,63,0.785,64,0.942,65,0.75,66,0.935,67,0.785,68,0.935,69,0.75,70,0.935,71,0.75,72,0.785,73,0.935,74,0.785,75,1.29,76,0.935,77,0.785,78,0.785,79,0.935,80,0.785,81,0.785,82,0.75,83,0.935,84,0.75,85,0.861,86,1.086,87,1.178,88,0.75,89,0.935,90,0.75,91,0.935,92,0.75,93,0.902,94,0.935,95,0.75,96,0.785,97,0.935,98,0.935,99,0.935,100,0.012,101,0.012]],["title/components/AppComponent.html",[0,0.098,37,0.622]],["body/components/AppComponent.html",[0,0.165,1,0.695,2,0.9,3,0.163,4,0.142,5,0.867,6,0.904,7,0.867,8,0.867,9,0.142,13,1.157,16,0.867,17,1.304,18,1.245,19,0.985,21,0.942,23,0.501,24,0.016,25,0.49,26,0.163,27,0.115,29,0.795,30,1.122,31,1.075,32,0.867,33,1.316,34,0.867,35,0.376,36,0.867,37,1.105,38,0.867,39,0.728,40,0.728,41,1.245,42,1.245,43,0.728,44,1.316,45,0.728,46,0.867,47,0.695,48,1.122,49,1.245,50,0.728,51,0.867,52,0.695,53,1.142,54,0.695,55,0.82,56,0.867,57,0.728,58,1.122,59,0.728,60,0.867,61,0.695,62,0.867,63,0.728,64,0.909,65,0.695,66,0.867,67,0.728,68,0.867,69,0.695,70,0.867,71,0.695,72,0.728,73,0.867,74,0.728,75,1.245,76,0.867,77,0.728,78,0.728,79,0.867,80,0.728,81,0.728,82,0.695,83,0.867,84,0.695,85,0.82,86,1.056,87,1.122,88,0.695,89,0.867,90,0.695,91,0.867,92,0.695,93,0.859,94,0.867,95,0.695,96,0.728,97,0.867,98,0.867,99,0.867,100,0.012,101,0.012,102,3.939,103,3.878,104,6.536,105,5.893,106,0.204,107,0.439,108,6.536,109,5.657,110,0.363,111,2.994,112,2.485,113,0.486,114,5.893,115,0.387,116,0.264,117,0.387,118,0.706,119,0.706,120,2.604,121,0.603,122,5.101,123,5.893,124,4.551,125,5.893,126,1.205,127,0.867,128,0.795,129,0.795,130,4.551,131,4.551,132,4.551,133,2.994,134,3.235,135,4.551,136,4.551,137,4.551,138,1.205,139,1.419,140,2.473,141,3.939,142,1.763,143,1.361,144,1.608,145,1.361,146,1.255,147,2.011,148,1.307,149,1.419,150,1.419]],["title/modules/AppModule.html",[151,2.765,152,2.765]],["body/modules/AppModule.html",[1,1.051,3,0.13,4,0.114,9,0.114,18,0.557,23,0.694,24,0.016,25,0.393,26,0.13,27,0.092,29,0.638,37,1.207,39,1.1,40,1.1,43,1.1,45,1.1,47,1.051,50,1.1,52,1.051,54,1.051,57,1.1,59,1.1,61,1.051,63,1.1,64,0.879,65,1.051,67,1.1,69,1.051,71,1.051,72,1.1,74,1.1,77,1.1,78,1.1,80,1.1,82,1.117,84,1.051,85,0.707,88,1.051,90,1.051,92,1.051,95,1.051,96,1.1,100,0.01,101,0.01,151,2.594,152,5.838,153,2.401,154,2.594,155,5.059,156,4.541,157,5.059,158,2.836,159,3.159,160,3.159,161,3.159,162,3.159,163,3.159,164,4.527,165,4.527,166,3.738,167,4.398,168,3.159,169,2.594,170,3.65,171,4.398,172,5.081,173,5.845,174,4.398,175,5.081,176,4.398,177,2.836,178,3.65,179,3.65,180,3.65,181,3.159,182,3.159,183,3.159,184,3.159,185,3.65,186,5.081,187,3.65,188,5.081,189,3.65,190,1.048,191,5.081,192,5.081,193,1.693,194,5.081,195,3.65,196,5.081,197,3.65,198,5.081,199,5.081,200,2.401,201,5.081,202,1.613,203,1.613,204,5.081,205,3.65,206,2.594,207,3.343,208,3.159,209,3.65,210,4.398,211,2.594,212,3.159,213,5.081,214,3.65,215,5.081,216,1.29,217,3.65,218,2.594,219,4.541,220,5.845,221,2.594,222,3.65,223,2.594,224,3.65,225,2.594,226,4.541,227,3.159,228,5.081,229,2.836,230,5.081,231,2.836,232,3.65,233,2.401,234,2.836,235,2.594,236,5.081,237,3.65,238,5.845,239,2.401,240,2.836,241,3.159,242,2.594,243,3.612,244,2.594,245,3.159,246,5.081,247,3.65,248,5.081,249,3.65,250,2.401,251,2.594,252,3.159,253,3.159,254,3.159,255,2.401,256,4.398,257,5.059,258,2.401,259,4.398,260,2.836,261,2.594,262,3.159,263,5.059,264,3.005,265,2.104,266,3.159,267,2.594,268,3.65,269,2.594,270,3.65,271,2.594,272,3.159,273,2.594,274,3.159,275,3.65,276,3.65,277,3.159,278,1.693]],["title/modules/AppRoutingModule.html",[151,2.765,164,2.56]],["body/modules/AppRoutingModule.html",[0,0.2,1,0.937,3,0.173,4,0.151,9,0.151,23,0.682,24,0.016,25,0.522,26,0.173,27,0.122,47,0.937,52,0.937,54,0.937,61,0.937,64,0.674,65,0.937,69,0.937,71,0.937,82,0.937,84,0.937,85,0.853,92,0.937,95,0.937,100,0.012,101,0.012,126,1.282,153,3.187,158,3.763,164,4.035,171,4.192,174,5.308,181,4.192,182,4.192,183,4.192,184,4.192,207,5.186,208,4.192,210,4.192,211,3.443,212,4.192,227,4.192,241,4.192,253,4.192,254,4.192,255,4.035,256,5.308,257,5.308,258,4.428,259,4.192,263,4.192,264,2.49,265,2.791,266,4.192,271,3.443,272,4.192,273,3.443,274,4.192,279,4.843,280,4.843,281,6.133,282,4.428,283,5.3,284,4.843,285,1.866,286,7.973,287,6.133,288,5.825,289,6.133,290,6.133,291,2.974,292,6.092,293,2.974,294,4.192,295,4.843,296,4.843,297,4.843,298,2.49,299,1.856,300,6.317,301,5.671,302,5.671,303,4.192,304,4.843]],["title/guards/AuthGuard.html",[207,2.56,305,2.56]],["body/guards/AuthGuard.html",[0,0.156,2,0.943,3,0.175,4,0.153,9,0.153,11,1.081,23,0.575,24,0.016,25,0.527,26,0.175,27,0.124,35,0.336,93,0.901,100,0.012,101,0.012,103,3.222,106,0.22,110,0.539,112,2.533,113,0.46,115,0.525,116,0.277,117,0.525,120,2.729,126,1.297,127,0.932,148,1.774,166,3.86,190,2.04,206,3.481,207,4.064,278,2.865,291,3.792,292,5.519,293,3.792,305,4.674,306,3.805,307,4.239,308,2.729,309,3.652,310,5.345,311,3.56,312,4.064,313,5.049,314,5.049,315,4.362,316,4.362,317,1.188,318,3.805,319,5.519,320,4.897,321,3.676,322,2.737,323,5.345,324,3.013,325,4.39,326,5.345,327,6.472,328,5.049,329,7.477,330,4.897,331,5.345,332,1.448,333,4.798,334,5.345,335,5.345,336,5.345,337,2.04,338,0.819,339,2.109,340,3.356,341,3.481,342,1.014,343,1.734,344,1.014,345,5.519,346,4.897,347,7.323,348,4.897,349,3.792,350,2.862,351,4.897,352,3.805,353,4.897]],["title/interceptors/AuthInterceptor.html",[165,2.56,354,3.023]],["body/interceptors/AuthInterceptor.html",[3,0.192,4,0.168,9,0.168,11,0.858,12,1.47,23,0.64,24,0.016,25,0.578,26,0.192,27,0.135,35,0.355,100,0.013,101,0.013,106,0.241,107,0.486,110,0.427,112,2.485,113,0.524,115,0.556,116,0.316,117,0.556,118,0.643,119,0.643,121,0.866,126,1.421,127,1.022,165,4.3,166,3.986,200,3.53,206,3.814,285,2.067,291,3.294,293,3.294,317,1.093,318,4.168,319,5.476,321,3.551,338,0.897,340,3.551,342,1.111,344,1.519,350,2.633,354,5.476,355,5.365,356,4.644,357,6.535,358,1.955,359,5.656,360,7.048,361,6.535,362,6.535,363,6.535,364,7.335,365,2.599,366,7.335,367,5.365,368,3.294,369,7.048,370,6.535,371,5.365,372,6.535,373,1.364,374,6.535,375,6.535,376,4.168,377,5.365,378,5.365,379,5.365,380,5.365,381,5.365]],["title/components/ConfirmationDialog.html",[0,0.098,39,0.622]],["body/components/ConfirmationDialog.html",[0,0.198,1,0.643,2,0.855,3,0.15,4,0.132,5,0.802,7,0.802,8,0.802,9,0.132,11,0.895,16,0.802,17,1.296,18,1.237,21,0.895,23,0.476,24,0.016,25,0.453,26,0.15,27,0.106,29,0.735,30,1.066,31,1.022,32,0.802,33,1.277,34,0.802,35,0.364,36,0.802,37,0.673,38,0.802,39,1.072,40,0.673,41,1.198,42,1.198,43,0.673,44,1.277,45,0.673,46,0.802,47,0.643,48,1.066,49,1.198,50,0.673,51,0.802,52,0.643,53,1.099,54,0.643,55,0.779,56,0.802,57,0.673,58,1.066,59,0.673,60,0.802,61,0.643,62,0.802,63,0.673,64,0.875,65,0.643,66,0.802,67,0.673,68,0.802,69,0.643,70,0.802,71,0.643,72,0.673,73,0.802,74,0.673,75,1.198,76,0.802,77,0.673,78,0.673,79,0.802,80,0.673,81,0.673,82,0.643,83,0.802,84,0.643,85,0.779,86,1.024,87,1.066,88,0.643,89,0.802,90,0.643,91,0.802,92,0.643,93,0.817,94,0.802,95,0.643,96,0.673,97,0.802,98,0.802,99,0.802,100,0.011,101,0.011,106,0.189,107,0.417,110,0.501,113,0.52,115,0.358,116,0.301,117,0.358,118,0.754,119,0.754,121,0.834,216,1.487,233,4.724,299,1.825,317,0.936,338,0.704,343,1.367,344,1.16,382,6.214,383,3.644,384,3.865,385,4.35,386,2.892,387,5.599,388,5.599,389,3.684,390,5.599,391,6.982,392,6.982,393,3.406,394,6.706,395,4.21,396,5.21,397,2.964,398,5.599,399,2.361,400,1.819,401,1.897,402,4.21,403,2.731,404,4.846,405,0.936,406,4.846,407,2.157,408,4.21,409,5.599,410,4.35,411,4.35,412,4.21,413,2.585,414,2.585,415,4.21,416,5.599,417,4.21,418,6.291,419,5.599,420,5.599,421,4.21]],["title/components/CreateQuizComponent.html",[0,0.098,40,0.622]],["body/components/CreateQuizComponent.html",[0,0.188,1,0.444,2,0.659,3,0.104,4,0.091,5,0.554,6,0.578,7,0.554,8,0.554,9,0.235,11,1.156,12,0.971,13,1.308,16,0.554,17,1.266,18,1.208,19,0.721,21,0.69,23,0.576,24,0.016,25,0.313,26,0.104,27,0.073,29,0.508,30,0.822,31,0.787,32,0.554,33,1.084,34,0.554,35,0.401,36,0.554,37,0.465,38,0.554,39,0.465,40,0.91,41,1.415,42,0.98,43,0.465,44,1.084,45,0.465,46,0.554,47,0.444,48,0.822,49,0.98,50,0.465,51,0.554,52,0.444,53,0.994,54,0.444,55,0.979,56,0.554,57,0.465,58,0.822,59,0.465,60,0.554,61,0.444,62,0.554,63,0.465,64,0.716,65,0.444,66,0.554,67,0.465,68,0.554,69,0.444,70,0.554,71,0.444,72,0.465,73,0.554,74,0.465,75,0.98,76,0.554,77,0.465,78,0.465,79,0.554,80,0.465,81,0.465,82,0.444,83,0.554,84,0.444,85,0.6,86,0.869,87,0.822,88,0.444,89,0.554,90,0.444,91,0.554,92,0.444,93,0.83,94,0.554,95,0.444,96,0.465,97,0.554,98,0.554,99,0.554,100,0.009,101,0.009,106,0.13,107,0.321,110,0.41,113,0.544,115,0.438,116,0.273,117,0.438,118,0.348,119,0.348,121,0.682,127,0.554,128,0.508,129,0.508,133,3.745,138,1.143,139,0.907,142,1.703,143,0.87,144,1.028,145,1.291,146,1.19,149,1.345,150,1.345,190,1.829,193,1.349,202,1.285,203,2.687,216,1.028,221,5.24,285,1.121,308,1.907,317,0.721,324,2.105,332,1.493,337,1.239,338,1.102,342,0.894,343,1.484,344,0.894,350,2.073,358,1.291,365,1.073,373,0.74,386,1.739,393,3.107,397,2.914,400,1.849,401,1.928,403,2.105,405,1.157,422,5.24,423,2.068,424,3.585,425,3.745,426,3.353,427,1.256,428,1.362,429,3.068,430,3.998,431,3.353,432,5.145,433,2.64,434,1.334,435,1.229,436,3.735,437,3.093,438,2.219,439,4.046,440,2.219,441,1.349,442,1.447,443,1.555,444,2.64,445,2.64,446,4.315,447,2.011,448,2.011,449,1.82,450,1.345,451,1.539,452,2.955,453,2.002,454,2.909,455,2.909,456,2.909,457,2.84,458,4.167,459,4.315,460,3.735,461,2.909,462,3.735,463,3.353,464,3.745,465,3.353,466,2.909,467,2.193,468,2.002,469,2.487,470,2.909,471,1.239,472,3.068,473,2.84,474,2.909,475,3.068,476,2.927,477,2.219,478,2.219,479,2.927,480,2.219,481,2.219,482,2.219,483,2.219,484,2.219,485,1.907,486,2.219,487,2.219,488,2.105,489,1.894,490,1.545,491,2.909,492,3.068,493,1.914,494,2.909,495,3.275,496,2.26,497,2.909,498,2.518,499,2.909,500,0.74,501,2.927,502,1.495,503,1.914,504,2.26,505,2.518,506,1.495,507,2.645,508,2.909,509,1.419,510,2.518,511,2.518,512,3.735,513,2.518,514,2.26,515,2.518,516,2.26,517,2.518,518,2.518,519,2.518,520,2.909,521,2.909,522,1.581,523,2.105,524,1.914,525,2.068,526,1.495,527,2.068,528,1.676,529,1.676,530,1.419,531,1.676,532,1.663,533,2.219,534,2.909,535,1.419,536,2.518,537,1.121,538,3.353,539,3.353,540,1.419,541,1.349,542,1.349,543,3.093,544,1.495,545,2.219,546,2.64,547,1.495,548,1.495,549,1.495,550,2.219,551,1.743,552,2.26,553,1.743,554,2.84,555,1.676,556,2.26,557,1.898,558,3.353,559,2.26,560,1.703,561,1.345,562,1.345,563,2.068,564,1.028,565,1.676,566,1.226,567,1.172,568,1.581,569,0.444,570,2.518]],["title/components/CreateSceneComponent.html",[0,0.098,43,0.622]],["body/components/CreateSceneComponent.html",[0,0.19,1,0.436,2,0.65,3,0.102,4,0.089,5,0.544,6,0.567,7,0.544,8,0.544,9,0.231,11,1.151,12,0.958,13,1.294,15,3.065,16,0.544,17,1.265,18,1.206,19,0.712,21,0.68,23,0.573,24,0.016,25,0.308,26,0.102,27,0.072,29,0.499,30,0.811,31,0.777,32,0.544,33,1.074,34,0.544,35,0.414,36,0.544,37,0.456,38,0.544,39,0.456,40,0.456,41,1.386,42,0.969,43,0.902,44,1.074,45,0.456,46,0.544,47,0.436,48,0.811,49,0.969,50,0.456,51,0.544,52,0.436,53,0.985,54,0.436,55,1.002,56,0.544,57,0.456,58,0.811,59,0.456,60,0.544,61,0.436,62,0.544,63,0.456,64,0.708,65,0.436,66,0.544,67,0.456,68,0.544,69,0.436,70,0.544,71,0.436,72,0.456,73,0.544,74,0.456,75,0.969,76,0.544,77,0.456,78,0.456,79,0.544,80,0.456,81,0.456,82,0.436,83,0.544,84,0.436,85,0.592,86,0.862,87,0.811,88,0.436,89,0.544,90,0.436,91,0.544,92,0.436,93,0.823,94,0.544,95,0.436,96,0.456,97,0.544,98,0.544,99,0.544,100,0.008,101,0.008,106,0.128,107,0.317,110,0.405,113,0.547,115,0.433,116,0.271,117,0.433,118,0.342,119,0.342,121,0.674,127,0.544,128,0.499,129,0.499,133,3.712,138,1.127,139,0.89,142,1.688,143,0.854,144,1.009,145,1.273,146,1.174,149,1.327,150,1.327,190,1.62,193,1.324,202,1.262,203,2.666,216,1.009,242,5.265,285,1.1,308,1.881,317,0.712,324,2.076,332,1.483,337,1.223,338,1.096,343,1.473,344,0.882,350,2.272,358,1.273,365,1.053,373,0.726,384,2.453,386,2.272,393,3.086,397,2.896,400,1.832,401,1.911,403,2.076,405,1.151,422,5.265,424,3.6,425,2.801,433,2.616,434,1.322,435,1.218,436,3.684,437,3.065,438,2.189,439,4.009,440,2.189,441,1.324,442,1.434,443,1.544,444,2.616,445,2.616,447,1.504,448,1.504,450,1.327,451,1.523,452,2.935,453,1.974,457,2.801,460,3.684,462,3.684,463,3.307,464,3.712,467,2.173,468,1.974,469,2.453,471,1.223,472,3.026,473,2.801,475,3.026,476,2.9,477,2.189,478,2.189,479,2.9,480,2.189,481,2.189,482,2.189,483,2.189,484,2.189,485,1.881,486,2.189,487,2.189,488,2.076,489,1.882,490,1.579,493,1.879,495,3.463,496,2.219,498,2.471,500,0.726,501,3.102,502,1.468,503,1.879,504,2.219,505,2.471,506,1.468,507,2.9,509,1.393,510,2.471,511,2.471,512,3.684,513,2.471,514,2.219,515,2.471,516,2.219,517,2.471,518,2.471,519,2.471,522,1.552,523,2.076,524,1.879,525,2.03,526,1.468,527,2.03,528,1.646,529,1.646,530,1.393,531,1.646,532,1.64,533,2.189,535,1.393,536,2.471,537,1.1,540,1.393,541,1.324,542,1.324,543,3.065,544,1.468,545,2.189,546,2.616,547,1.468,548,1.468,549,1.468,550,2.189,551,1.724,552,2.219,553,1.724,554,2.801,555,1.646,556,2.219,557,1.877,558,3.307,559,2.219,560,1.688,561,1.327,562,1.327,563,2.03,564,1.009,565,1.646,566,1.204,567,1.15,568,1.552,569,0.436,570,2.471,571,2.219,572,5.641,573,3.684,574,3.993,575,3.954,576,3.307,577,5.089,578,6.736,579,4.257,580,2.855,581,2.855,582,2.855,583,4.497,584,2.855,585,2.855,586,2.855,587,2.855,588,3.684,589,2.855,590,2.855,591,2.855,592,2.855,593,2.855,594,2.855,595,2.855,596,2.855,597,2.855,598,2.855,599,2.855,600,2.855,601,2.855]],["title/components/CreateTaskComponent.html",[0,0.098,45,0.622]],["body/components/CreateTaskComponent.html",[0,0.185,1,0.353,2,0.553,3,0.159,4,0.072,5,0.439,6,0.458,7,0.439,8,0.439,9,0.113,11,1.125,12,0.814,13,1.394,15,1.966,16,0.439,17,1.241,18,1.183,19,0.605,21,0.578,23,0.574,24,0.016,25,0.249,26,0.082,27,0.058,29,0.403,30,0.689,31,0.66,32,0.439,33,0.961,34,0.439,35,0.39,36,0.439,37,0.369,38,0.439,39,0.369,40,0.369,41,1.341,42,0.849,43,0.369,44,0.961,45,0.807,46,0.439,47,0.353,48,0.689,49,0.849,50,0.369,51,0.439,52,0.353,53,0.882,54,0.353,55,0.954,56,0.439,57,0.369,58,0.689,59,0.369,60,0.439,61,0.353,62,0.439,63,0.369,64,0.62,65,0.353,66,0.439,67,0.369,68,0.439,69,0.353,70,0.439,71,0.353,72,0.369,73,0.439,74,0.578,75,1.379,76,0.439,77,0.578,78,0.369,79,0.439,80,0.369,81,0.369,82,0.353,83,0.439,84,0.353,85,0.503,86,1.135,87,0.689,88,0.353,89,0.439,90,0.353,91,0.439,92,0.353,93,0.527,94,0.439,95,0.353,96,0.369,97,0.439,98,0.439,99,0.439,100,0.007,101,0.007,106,0.104,107,0.269,110,0.355,113,0.558,115,0.429,116,0.303,117,0.429,118,0.697,119,0.697,121,0.591,127,0.439,128,0.403,129,0.403,138,1.181,139,0.719,140,1.254,142,1.937,143,1.334,144,1.278,145,1.334,146,1.23,149,1.128,150,1.128,190,1.808,193,1.071,202,1.02,203,2.423,216,0.816,239,1.519,240,1.793,243,1.641,244,5.356,250,1.519,299,1.284,308,1.598,311,2.91,317,0.605,324,1.764,332,0.848,337,1.039,338,1.128,342,0.749,343,1.485,344,0.924,350,2.034,358,1.082,365,2.023,373,0.587,384,2.085,386,2.536,393,2.838,397,2.687,400,1.89,401,1.97,403,1.764,405,1.128,422,5.356,424,3.447,425,3.828,426,5.029,427,1.089,428,1.181,433,2.342,434,1.183,435,1.09,437,2.744,438,1.86,439,3.589,440,1.86,441,1.071,442,1.284,443,1.42,444,2.342,445,2.342,447,1.784,448,1.784,449,1.525,450,1.128,451,1.082,452,2.698,453,1.678,457,2.38,458,4.058,467,2.426,468,1.678,469,2.085,471,1.039,472,2.571,473,2.38,475,2.571,476,2.596,477,1.86,478,1.86,479,2.596,480,1.86,481,1.86,482,1.86,483,1.86,484,1.86,485,1.598,486,1.86,487,1.86,488,1.764,489,2.11,490,1.608,492,2.571,493,1.519,495,3.237,496,1.793,500,0.587,501,2.819,502,1.187,503,1.519,504,1.793,506,1.187,507,2.596,509,1.126,514,1.793,516,1.793,522,1.254,523,1.764,524,1.519,525,1.641,526,1.187,527,1.641,528,1.33,529,1.33,530,1.126,531,1.33,532,1.394,533,1.86,535,1.126,537,1.394,540,1.126,541,1.071,542,1.071,543,2.744,544,1.187,545,1.86,546,2.342,547,1.187,548,1.187,549,1.187,550,1.86,551,1.511,552,1.793,553,1.511,554,2.38,555,1.33,556,1.793,557,1.645,558,2.81,559,1.793,560,1.511,561,1.128,562,1.128,563,1.641,564,0.816,565,1.33,566,0.973,567,0.93,568,1.254,569,0.353,573,5.603,574,3.826,588,3.131,602,1.998,603,2.698,604,4.461,605,3.617,606,4.461,607,4.461,608,7.345,609,4.461,610,5.049,611,5.049,612,5.049,613,3.131,614,3.131,615,3.866,616,3.617,617,2.308,618,2.308,619,3.828,620,2.113,621,2.308,622,3.171,623,2.308,624,4.26,625,2.308,626,2.308,627,3.617,628,2.221,629,3.131,630,1.359,631,2.308,632,5.049,633,1.71,634,3.131,635,2.308,636,2.308,637,2.308,638,2.308,639,2.308,640,2.308,641,4.37,642,2.322,643,3.1,644,2.308,645,4.746,646,2.308,647,3.1,648,2.308,649,2.308,650,3.617,651,5.449,652,2.308,653,2.308,654,2.308,655,2.308,656,2.308,657,2.308,658,1.998,659,2.38,660,1.998,661,3.171,662,1.126,663,2.308,664,2.308,665,2.308,666,2.308,667,2.308,668,2.308,669,2.308,670,2.308,671,2.308,672,2.308,673,2.308,674,1.998,675,2.308,676,1.998,677,2.308,678,2.308,679,2.308,680,2.308,681,1.793,682,4.461,683,1.998,684,2.308,685,1.998,686,2.308,687,2.571,688,3.131,689,2.596,690,3.131,691,1.998,692,1.417,693,2.308,694,2.308,695,1.998,696,1.998,697,0.93,698,1.519,699,1.126,700,2.308,701,1.519]],["title/components/DashboardComponent.html",[0,0.098,47,0.594]],["body/components/DashboardComponent.html",[0,0.183,1,0.536,2,0.949,3,0.125,4,0.11,5,0.668,6,0.697,7,0.668,8,0.668,9,0.11,11,0.79,12,1.112,13,1.256,15,2.685,16,0.668,17,1.284,18,1.225,19,0.826,21,0.79,23,0.578,24,0.016,25,0.378,26,0.125,27,0.089,29,0.613,30,0.941,31,0.901,32,0.668,33,1.183,34,0.668,35,0.338,36,0.668,37,0.561,38,0.668,39,0.561,40,0.993,41,1.478,42,1.089,43,0.993,44,1.183,45,0.993,46,0.668,47,0.949,48,1.398,49,1.089,50,0.561,51,0.668,52,0.536,53,1.297,54,0.536,55,0.687,56,0.668,57,0.561,58,0.941,59,0.561,60,0.668,61,0.536,62,0.668,63,0.561,64,1.008,65,0.536,66,0.668,67,0.561,68,0.668,69,0.536,70,0.668,71,0.536,72,0.561,73,0.668,74,0.561,75,1.089,76,0.668,77,0.561,78,0.561,79,0.668,80,0.561,81,0.561,82,0.536,83,0.668,84,0.536,85,0.687,86,1.145,87,0.941,88,0.536,89,0.668,90,0.536,91,0.668,92,0.536,93,0.72,94,0.668,95,0.536,96,0.561,97,0.668,98,0.668,99,0.668,100,0.01,101,0.01,106,0.157,109,3.035,110,0.577,112,2.301,113,0.539,115,0.298,116,0.157,117,0.298,126,0.928,127,0.668,138,0.928,139,1.093,140,2.685,142,1.478,143,1.049,144,1.746,145,1.049,146,1.362,148,1.419,190,1.419,216,1.239,219,2.724,221,2.492,242,2.492,243,2.492,244,2.492,245,3.035,255,3.251,258,4.086,282,4.469,298,2.54,317,0.826,321,3.375,322,1.904,338,1.191,342,1.023,343,1.206,344,0.726,352,5.277,386,2.736,400,1.605,401,1.673,405,1.228,424,2.292,425,3.251,427,1.396,428,1.515,434,1.456,435,1.341,447,1.746,448,1.746,449,2.083,458,3.579,467,2.617,485,3.149,490,1.592,557,1.293,560,1.858,561,1.783,562,1.093,569,0.949,574,3.375,603,3.151,615,4.285,692,2.153,702,3.035,703,4.444,704,3.839,705,6.21,706,6.21,707,6.21,708,6.21,709,6.21,710,6.21,711,3.506,712,3.506,713,3.506,714,3.506,715,3.506,716,3.506,717,3.506,718,3.506,719,3.506,720,3.506,721,3.506,722,3.506,723,3.506,724,3.506,725,3.506,726,3.035,727,3.035,728,4.94,729,4.94,730,3.764,731,2.492,732,2.492,733,4.94,734,2.083,735,2.153,736,3.506,737,2.492,738,3.506,739,3.506,740,2.492,741,3.506,742,2.412,743,2.021,744,2.724,745,4.276,746,3.506,747,1.906,748,3.512,749,2.021]],["title/interfaces/FiringAttempt.html",[750,1.64,751,1.64]],["body/interfaces/FiringAttempt.html",[0,0.164,3,0.232,4,0.166,9,0.166,17,0.849,18,0.811,19,0.888,21,0.849,23,0.622,24,0.016,25,0.572,26,0.19,27,0.134,35,0.289,64,0.739,85,0.739,86,1.145,100,0.013,101,0.013,106,0.238,107,0.483,116,0.328,121,1.011,126,1.407,127,1.011,128,1.135,129,1.135,265,3.062,299,1.351,339,2.378,342,1.1,344,1.1,373,1.351,376,5.452,405,1.086,427,1.586,428,1.72,434,1.245,435,1.147,442,1.351,443,1.586,471,2.1,489,2.015,490,1.245,500,1.351,532,2.047,630,1.147,687,3.776,750,2.24,751,2.959,752,3.495,753,2.731,754,3.495,755,3.973,756,3.973,757,3.973,758,4.617,759,4.598,760,4.127,761,4.127,762,4.127,763,3.776,764,3.776,765,3.776,766,2.887,767,4.598,768,2.617,769,4.598,770,3.495,771,3.776,772,4.598,773,4.598,774,3.776,775,3.776,776,4.598,777,3.776]],["title/interfaces/FiringAttempt-1.html",[620,1.252,750,1.37,751,1.37]],["body/interfaces/FiringAttempt-1.html",[0,0.18,2,0.631,3,0.147,4,0.129,9,0.129,11,0.66,12,0.929,14,4.296,17,0.66,18,0.631,19,0.691,21,0.66,23,0.59,24,0.016,25,0.445,26,0.147,27,0.104,64,0.769,81,0.66,85,0.574,86,1.06,93,0.806,100,0.011,101,0.011,106,0.185,107,0.411,110,0.329,112,2.35,116,0.311,120,2.443,121,0.994,126,1.094,127,0.787,128,1.163,129,1.163,148,1.186,190,1.588,264,2.124,265,2.381,278,1.916,285,2.751,298,2.124,299,1.406,309,3.204,322,1.591,332,1.296,337,1.186,339,2.31,342,0.856,343,1.35,344,0.856,358,1.236,373,1.05,384,3.187,389,3.638,405,1.042,427,1.35,428,1.464,434,0.968,435,0.892,442,1.406,443,1.521,450,1.287,451,1.236,465,4.296,471,1.911,489,1.911,490,1.461,500,1.05,532,2.401,537,2.13,567,1.664,569,0.952,603,2.565,642,1.523,662,2.015,689,2.124,750,1.742,751,2.628,752,2.718,753,2.124,754,2.718,755,3.617,756,3.617,757,3.617,763,2.936,764,2.936,765,2.936,766,2.245,768,2.938,774,2.936,775,2.936,777,2.936,778,4.785,779,4.087,780,2.891,781,3.592,782,2.936,783,2.628,784,4.785,785,3.827,786,3.827,787,3.004,788,2.891,789,3.575,790,3.93,791,3.209,792,3.575,793,2.718,794,3.93,795,4.296,796,3.575,797,3.575,798,5.394,799,3.575,800,3.575,801,3.575,802,3.575,803,3.575,804,3.575,805,3.209,806,2.936,807,3.575,808,3.209,809,3.575,810,3.209,811,3.575,812,3.575,813,3.575,814,3.575,815,5.76,816,3.575,817,5.391,818,5.548,819,5.394,820,4.785,821,4.785,822,5.394,823,3.575,824,3.575,825,2.536,826,3.575,827,2.536,828,3.575,829,4.785,830,3.575,831,3.209,832,3.575,833,3.575,834,3.575,835,3.575]],["title/interfaces/FiringAttempt-2.html",[622,2.309,750,1.37,751,1.37]],["body/interfaces/FiringAttempt-2.html",[0,0.171,3,0.175,4,0.153,9,0.153,12,1.103,17,0.784,18,0.749,19,0.82,21,0.784,23,0.417,24,0.016,25,0.528,26,0.175,27,0.124,64,1.019,86,1.119,88,0.749,100,0.012,101,0.012,106,0.22,107,0.46,116,0.329,121,0.991,128,0.856,129,0.856,264,2.52,267,3.484,332,1.149,339,2.331,342,1.015,365,1.808,405,1.033,427,1.509,428,1.636,434,1.149,435,1.058,471,2.041,562,1.528,569,0.944,619,4.066,620,2.381,630,1.461,642,2.279,689,2.52,750,2.067,751,2.996,752,3.226,753,2.52,755,3.861,756,3.861,757,3.861,766,2.664,768,2.49,779,4.363,780,3.139,783,3.202,785,4.156,786,4.156,788,3.139,790,4.393,827,3.01,836,3.809,837,3.795,838,4.243,839,4.243,840,5.349,841,3.01,842,3.226,843,4.066,844,3.226,845,3.226,846,3.809,847,1.808,848,3.809,849,3.226,850,4.243,851,4.922,852,5.858,853,4.243,854,5.858,855,4.243,856,4.676,857,5.349,858,4.243]],["title/interfaces/FiringAttempt-3.html",[624,2.524,750,1.37,751,1.37]],["body/interfaces/FiringAttempt-3.html",[0,0.174,3,0.182,4,0.16,9,0.16,12,1.15,17,0.817,18,0.78,19,0.854,21,0.817,23,0.435,24,0.016,25,0.55,26,0.182,27,0.129,64,1.031,86,1.133,90,0.78,100,0.013,101,0.013,106,0.229,107,0.472,116,0.333,121,1.001,128,0.893,129,0.893,139,1.593,264,2.627,269,3.632,332,1.198,339,2.356,342,1.058,427,1.548,435,1.103,471,2.071,569,1.102,630,1.557,642,1.885,750,2.154,751,2.908,752,3.362,753,2.627,755,3.919,756,3.919,757,3.919,766,2.777,768,2.555,779,4.428,780,3.199,783,2.154,785,3.894,786,4.641,827,4.235,837,3.894,841,3.137,859,3.97,860,4.422,861,4.422,862,4.422,863,5.969,864,4.422,865,5.489,866,4.422,867,4.422,868,4.422,869,5.489,870,4.422,871,3.97,872,3.632,873,5.489,874,4.422,875,4.422,876,4.422,877,5.489,878,4.422,879,4.422]],["title/components/FooterComponent.html",[0,0.098,50,0.622]],["body/components/FooterComponent.html",[0,0.179,1,0.677,2,0.885,3,0.158,4,0.138,5,0.844,6,0.88,7,0.844,8,0.844,9,0.138,11,0.708,12,1.303,16,0.844,17,1.302,18,1.243,19,0.968,21,0.926,23,0.377,24,0.016,25,0.477,26,0.158,27,0.112,29,0.774,30,1.103,31,1.056,32,0.844,33,1.387,34,0.844,35,0.351,36,0.844,37,0.708,38,0.844,39,0.708,40,0.708,41,1.228,42,1.228,43,0.708,44,1.303,45,0.708,46,0.844,47,0.677,48,1.103,49,1.228,50,1.094,51,0.844,52,0.677,53,1.127,54,0.677,55,0.805,56,0.844,57,0.708,58,1.103,59,0.708,60,0.844,61,0.677,62,0.844,63,0.708,64,0.897,65,0.677,66,0.844,67,0.708,68,0.844,69,0.677,70,0.844,71,0.677,72,0.708,73,0.844,74,0.708,75,1.228,76,0.844,77,0.708,78,0.708,79,0.844,80,0.708,81,0.708,82,0.677,83,0.844,84,0.677,85,0.805,86,1.045,87,1.103,88,0.677,89,0.844,90,0.677,91,0.844,92,0.677,93,0.844,94,0.844,95,0.677,96,0.708,97,0.844,98,0.844,99,0.844,100,0.011,101,0.011,138,1.533,139,1.381,540,2.161,541,2.055,542,2.055,544,2.278,545,2.278,553,1.5,557,2.523,560,1.325,561,1.381,569,0.885,734,1.868,735,2.72,742,1.868,880,3.834,881,7.418,882,5.012,883,6.451,884,5.791,885,5.791,886,5.791,887,5.922,888,5.922,889,5.791,890,5.791,891,5.791,892,5.791,893,5.791,894,5.791,895,5.791,896,5.791,897,5.791,898,5.791,899,5.791,900,5.791,901,5.791,902,5.791,903,5.791,904,5.012,905,5.791,906,5.012,907,5.791,908,5.791,909,5.791,910,5.791,911,5.791,912,5.791,913,5.791,914,5.791,915,5.791,916,5.791,917,4.43,918,2.553,919,2.407,920,2.72,921,2.553,922,2.915]],["title/classes/Group.html",[27,0.098,55,0.541]],["body/classes/Group.html",[3,0.21,4,0.184,9,0.184,24,0.016,26,0.21,27,0.149,35,0.411,55,0.961,100,0.014,101,0.014,106,0.264,107,0.514,110,0.469,113,0.546,115,0.501,116,0.329,117,0.501,118,0.828,119,0.828,121,0.915,407,2.269,569,1.055,630,1.492,633,2.484,847,2.548,923,2.172,924,5.097,925,2.913,926,3.092,927,6.909,928,5.888,929,2.483]],["title/components/GroupSessionsComponent.html",[0,0.098,54,0.594]],["body/components/GroupSessionsComponent.html",[0,0.182,1,0.463,2,0.887,3,0.108,4,0.095,5,0.577,6,0.602,7,0.577,8,0.577,9,0.095,11,0.842,12,1,13,1.131,16,0.577,17,1.27,18,1.212,19,0.743,21,0.711,23,0.526,24,0.016,25,0.326,26,0.108,27,0.076,29,0.529,30,0.847,31,0.811,32,0.577,33,1.105,34,0.577,35,0.336,36,0.577,37,0.484,38,0.577,39,0.484,40,0.484,41,1.003,42,1.003,43,0.484,44,1.105,45,0.484,46,0.577,47,0.463,48,0.847,49,1.003,50,0.484,51,0.577,52,0.463,53,0.92,54,0.887,55,1.073,56,0.577,57,0.484,58,0.847,59,0.484,60,0.577,61,0.463,62,0.577,63,0.484,64,0.733,65,0.463,66,0.577,67,0.484,68,0.577,69,0.463,70,0.577,71,0.463,72,0.484,73,0.577,74,0.484,75,1.272,76,0.577,77,0.484,78,0.484,79,0.577,80,0.484,81,0.484,82,0.463,83,0.577,84,0.463,85,0.618,86,1.086,87,0.847,88,0.463,89,0.577,90,0.463,91,0.577,92,0.463,93,0.648,94,0.577,95,0.463,96,0.484,97,0.577,98,0.577,99,0.577,100,0.009,101,0.009,106,0.136,107,0.331,110,0.42,112,2.189,113,0.553,115,0.378,116,0.314,117,0.378,118,0.8,119,0.8,126,0.802,127,0.577,128,0.529,129,0.529,138,1.177,139,0.944,142,1.737,143,1.33,145,1.33,146,1.453,147,1.339,148,1.513,149,1.386,150,1.386,190,1.277,273,5.318,299,1.131,317,0.743,318,2.354,321,2.863,322,1.713,328,2.153,337,1.277,338,1.081,342,0.921,343,1.286,344,0.627,358,1.33,365,1.64,373,0.77,405,1.145,427,1.286,428,1.395,434,1.361,435,1.253,442,1.476,443,1.578,450,1.386,451,1.33,464,4.253,467,1.713,473,2.926,489,1.918,490,1.042,500,0.77,546,1.405,547,1.557,548,1.557,549,1.557,550,2.286,551,1.026,560,1.576,561,1.642,562,1.642,564,1.571,566,1.277,569,1.02,620,2.237,630,1.556,633,1.966,642,2.384,662,1.478,689,2.286,697,1.791,699,2.169,701,2.926,726,2.622,727,2.622,734,1.277,742,1.277,747,1.646,768,2.76,780,2.063,781,4.03,782,2.153,783,3.154,788,3.178,794,3.161,795,3.455,842,2.926,843,4.068,844,2.926,845,3.467,849,1.993,851,4.253,856,3.82,921,1.746,930,5.812,931,2.622,932,6.621,933,5.269,934,4.447,935,4.56,936,4.56,937,4.56,938,5.024,939,4.51,940,3.849,941,4.51,942,4.447,943,4.447,944,3.849,945,6.463,946,4.447,947,3.029,948,3.849,949,4.51,950,3.029,951,3.029,952,3.029,953,3.849,954,3.029,955,3.029,956,3.029,957,3.029,958,3.82,959,3.161,960,3.029,961,3.029,962,3.029,963,3.029,964,3.029,965,3.029,966,2.622,967,3.029,968,2.622,969,2.622,970,4.56,971,2.622,972,4.56,973,3.849,974,2.622,975,3.029,976,3.849,977,3.849,978,3.849,979,3.455,980,3.455,981,4.447,982,2.926,983,2.063,984,2.73,985,2.622,986,2.926,987,1.405,988,1.646,989,1.993]],["title/components/GroupSettingsComponent.html",[0,0.098,57,0.622]],["body/components/GroupSettingsComponent.html",[0,0.176,1,0.456,2,0.982,3,0.107,4,0.093,5,0.568,6,0.593,7,0.568,8,0.568,9,0.093,11,0.703,12,0.99,13,1.328,16,0.568,17,1.269,18,1.211,19,0.735,21,0.703,23,0.592,24,0.016,25,0.321,26,0.107,27,0.075,29,0.521,30,0.837,31,0.802,32,0.568,33,1.097,34,0.568,35,0.403,36,0.568,37,0.477,38,0.568,39,0.477,40,0.477,41,1.326,42,0.995,43,0.477,44,1.097,45,0.477,46,0.568,47,0.456,48,0.837,49,0.995,50,0.477,51,0.568,52,0.456,53,1.161,54,0.456,55,1.071,56,0.568,57,0.921,58,0.837,59,0.477,60,0.568,61,0.456,62,0.568,63,0.477,64,0.726,65,0.456,66,0.568,67,0.477,68,0.568,69,0.456,70,0.568,71,0.456,72,0.477,73,0.568,74,0.477,75,0.995,76,0.568,77,0.477,78,0.477,79,0.568,80,0.477,81,0.477,82,0.456,83,0.568,84,0.456,85,0.612,86,0.88,87,0.837,88,0.456,89,0.568,90,0.456,91,0.568,92,0.456,93,0.641,94,0.568,95,0.456,96,0.477,97,0.995,98,0.568,99,0.568,100,0.009,101,0.009,106,0.134,107,0.327,110,0.416,111,1.964,112,2.359,113,0.541,115,0.254,116,0.276,117,0.254,118,0.626,119,0.626,126,0.79,127,0.568,128,0.521,129,0.521,138,1.165,139,0.93,142,1.838,143,1.316,144,1.054,145,1.316,146,1.44,147,1.319,148,1.765,149,1.371,150,0.93,190,1.655,193,1.384,202,1.319,203,2.716,260,5.704,299,1.328,308,1.944,317,0.735,322,1.695,324,2.145,332,1.031,337,1.263,338,1.027,342,0.911,343,1.407,344,1.082,350,2.322,358,1.316,365,1.101,373,0.759,399,1.854,400,1.429,401,1.49,405,1.111,424,3.506,425,4.043,427,1.275,428,1.383,434,1.351,435,1.244,437,3.132,438,2.963,440,2.261,442,1.465,443,1.57,444,2.673,445,2.673,447,1.554,448,1.554,450,1.371,451,1.316,452,2.982,453,2.04,457,2.894,458,2.535,467,2.221,468,2.04,471,1.263,475,3.126,476,2.963,477,2.261,478,2.261,479,2.963,480,2.261,481,2.261,482,2.261,483,2.261,484,2.261,485,1.944,486,2.261,487,2.261,488,2.145,489,2.108,490,1.683,492,3.126,493,1.964,495,2.963,500,0.759,501,2.685,502,1.534,503,1.964,506,2.685,507,1.534,522,1.622,523,2.145,524,1.964,530,1.456,532,1.695,533,2.261,535,1.456,540,1.456,544,1.534,545,1.534,551,1.011,553,1.011,557,1.622,560,1.316,561,0.93,562,0.93,564,1.054,565,1.72,566,1.854,567,1.202,568,1.622,569,0.672,603,3.485,628,2.701,642,2.516,645,2.583,662,1.456,681,2.319,697,1.202,699,1.456,742,1.258,787,2.39,930,5.704,983,1.384,990,2.121,991,4.058,992,3.417,993,4.521,994,5.223,995,4.521,996,5.763,997,2.963,998,2.547,999,4.398,1000,3.126,1001,2.984,1002,2.984,1003,2.984,1004,2.984,1005,2.583,1006,3.539,1007,2.984,1008,2.984,1009,2.984,1010,2.583,1011,2.984,1012,2.984,1013,1.534,1014,3.01,1015,2.121,1016,2.121,1017,2.319,1018,2.583,1019,2.04,1020,2.583,1021,2.583,1022,2.583,1023,2.583,1024,2.319,1025,2.583,1026,2.984,1027,2.583,1028,2.984,1029,2.984,1030,2.984,1031,2.121,1032,2.583,1033,2.319,1034,3.126,1035,2.701,1036,3.126,1037,2.319,1038,3.792,1039,3.126,1040,2.121,1041,3.207,1042,2.121,1043,1.832]],["title/classes/GroupTasks.html",[27,0.098,1014,2.242]],["body/classes/GroupTasks.html",[3,0.201,4,0.176,9,0.176,23,0.573,24,0.016,26,0.201,27,0.142,35,0.405,55,1.06,86,0.862,100,0.013,101,0.013,106,0.253,107,0.501,110,0.449,113,0.555,115,0.48,116,0.335,117,0.48,118,0.863,119,0.863,121,0.747,128,0.985,129,0.985,407,2.173,569,0.862,603,3.341,630,1.218,633,2.439,847,2.484,923,2.081,925,2.84,926,3.037,929,2.379,1006,4.422,1014,3.882,1017,4.383,1044,6.233,1045,4.882,1046,5.83,1047,2.188,1048,6.736,1049,5.83,1050,5.641,1051,5.641,1052,4.882,1053,4.882,1054,5.641,1055,5.641]],["title/components/GroupsDashboardComponent.html",[0,0.098,52,0.594]],["body/components/GroupsDashboardComponent.html",[0,0.181,1,0.408,2,0.833,3,0.095,4,0.083,5,0.509,6,0.531,7,0.509,8,0.509,9,0.083,11,0.937,12,0.911,13,1.387,16,0.509,17,1.258,18,1.199,19,0.677,21,0.647,23,0.596,24,0.016,25,0.288,26,0.095,27,0.067,29,0.467,30,0.771,31,0.995,32,0.509,33,1.039,34,0.509,35,0.367,36,0.509,37,0.427,38,0.509,39,0.647,40,0.427,41,1.116,42,0.931,43,0.427,44,1.039,45,0.427,46,0.509,47,0.408,48,0.771,49,0.931,50,0.427,51,0.509,52,0.833,53,1.35,54,0.408,55,1.083,56,0.509,57,0.427,58,0.771,59,0.647,60,0.509,61,0.408,62,0.509,63,0.427,64,0.68,65,0.408,66,0.509,67,0.427,68,0.509,69,0.408,70,0.509,71,0.408,72,0.427,73,0.509,74,0.427,75,0.931,76,0.509,77,0.427,78,0.427,79,0.509,80,0.427,81,0.427,82,0.408,83,0.509,84,0.408,85,0.563,86,0.833,87,0.771,88,0.408,89,0.509,90,0.408,91,0.509,92,0.408,93,0.591,94,0.509,95,0.408,96,0.427,97,0.509,98,0.509,99,0.509,100,0.008,101,0.008,106,0.182,107,0.301,110,0.39,113,0.556,115,0.464,116,0.322,117,0.464,118,0.768,119,0.768,127,0.509,128,0.707,129,0.707,138,0.708,146,0.737,148,1.163,190,1.567,202,1.181,203,2.591,216,0.944,229,2.076,231,2.076,233,1.758,234,2.076,258,4.946,261,1.899,262,2.313,285,1.884,298,2.805,299,1.491,317,0.677,332,1.446,337,1.163,338,1.104,339,0.833,342,0.839,343,1.565,344,1.013,358,1.211,373,0.679,385,3.146,386,2.486,389,3.59,393,1.303,396,2.076,399,2.3,400,1.772,401,1.848,405,1.152,410,2.076,411,5.581,427,1.194,428,1.295,434,1.279,435,1.178,442,1.243,443,1.506,444,2.531,445,2.531,447,1.928,448,1.928,449,1.708,450,1.262,451,1.211,452,2.862,453,1.878,467,2.544,468,1.878,471,1.163,485,1.79,489,2.246,490,1.664,492,2.878,500,0.679,530,1.303,532,1.56,535,1.303,569,0.408,603,1.878,615,3.35,620,1.03,628,2.487,630,1.46,633,2.433,642,1.494,703,3.799,704,3.146,787,2.201,958,2.665,997,2.805,998,2.411,1013,1.374,1014,3.896,1015,1.899,1016,1.899,1031,1.899,1033,2.076,1037,2.076,1039,2.878,1056,5.343,1057,2.076,1058,3.505,1059,4.232,1060,4.89,1061,4.232,1062,4.89,1063,4.232,1064,4.89,1065,5.075,1066,4.89,1067,4.049,1068,3.505,1069,4.722,1070,4.722,1071,4.049,1072,4.722,1073,1.641,1074,4.722,1075,4.049,1076,4.049,1077,2.672,1078,2.672,1079,2.672,1080,4.722,1081,4.049,1082,2.665,1083,3.505,1084,2.672,1085,2.672,1086,5.075,1087,2.672,1088,4.049,1089,2.672,1090,4.06,1091,2.672,1092,3.505,1093,4.535,1094,2.672,1095,2.672,1096,4.232,1097,2.313,1098,2.672,1099,2.313,1100,3.505,1101,2.313,1102,2.672,1103,4.232,1104,1.374,1105,3.505,1106,2.672,1107,1.899,1108,2.313,1109,2.672,1110,2.672,1111,4.232,1112,2.313,1113,2.672,1114,3.505,1115,3.505,1116,2.672,1117,2.672,1118,2.672,1119,4.049,1120,2.672,1121,2.672,1122,2.672,1123,2.313,1124,2.313,1125,2.672,1126,2.672,1127,2.672,1128,2.672,1129,2.672,1130,2.672,1131,2.672,1132,2.672,1133,2.313,1134,2.313,1135,2.313,1136,2.313,1137,2.672,1138,2.672,1139,2.672,1140,2.313,1141,2.313,1142,2.313,1143,3.505,1144,3.505,1145,2.201,1146,4.049,1147,3.505,1148,1.54]],["title/components/GroupsModificationComponent.html",[0,0.098,59,0.622]],["body/components/GroupsModificationComponent.html",[0,0.186,1,0.409,2,0.943,3,0.096,4,0.084,5,0.51,6,0.532,7,0.51,8,0.51,9,0.084,11,0.783,12,0.913,13,1.245,16,0.51,17,1.258,18,1.2,19,0.678,21,0.648,23,0.604,24,0.016,25,0.288,26,0.096,27,0.068,29,0.468,30,0.772,31,0.74,32,0.51,33,1.04,34,0.51,35,0.404,36,0.51,37,0.428,38,0.51,39,0.428,40,0.428,41,0.932,42,0.932,43,0.428,44,1.04,45,0.428,46,0.51,47,0.409,48,0.772,49,0.932,50,0.428,51,0.51,52,0.409,53,1.241,54,0.409,55,1.068,56,0.51,57,0.428,58,0.772,59,0.873,60,0.51,61,0.409,62,0.51,63,0.428,64,0.681,65,0.409,66,0.51,67,0.428,68,0.51,69,0.409,70,0.51,71,0.409,72,0.428,73,0.51,74,0.428,75,0.932,76,0.51,77,0.428,78,0.428,79,0.51,80,0.428,81,0.428,82,0.409,83,0.51,84,0.409,85,0.564,86,0.834,87,0.772,88,0.409,89,0.51,90,0.409,91,0.51,92,0.409,93,0.592,94,0.51,95,0.409,96,0.428,97,0.932,98,0.51,99,0.51,100,0.008,101,0.008,106,0.12,107,0.302,110,0.213,112,2.336,113,0.549,115,0.416,116,0.303,117,0.416,118,0.654,119,0.654,121,0.778,126,0.709,127,0.51,128,0.709,129,0.468,134,1.904,138,1.074,139,0.835,142,1.756,143,1.214,144,0.946,145,1.214,146,1.35,147,1.183,148,1.686,149,1.264,150,0.835,190,1.897,193,1.242,200,1.762,202,1.183,203,2.593,216,0.946,261,5.282,299,1.846,301,3.152,302,3.152,308,1.793,317,0.678,322,1.563,324,1.979,332,1.28,337,1.165,338,1.072,342,0.84,343,1.566,344,1.329,350,2.2,358,1.214,365,0.988,373,0.681,386,1.634,393,1.306,397,2.835,399,2.475,400,1.774,401,1.85,403,1.979,405,1.131,413,1.644,414,1.644,424,3.397,427,1.195,428,1.297,433,2.534,434,1.28,435,1.179,437,2.968,438,2.086,440,2.086,441,1.242,442,1.389,443,1.508,444,2.534,445,2.534,447,1.93,448,1.93,449,1.71,450,1.264,451,1.214,452,2.864,453,1.882,463,3.152,467,2.104,468,2.271,469,2.338,471,1.165,476,2.808,477,2.086,478,2.086,479,2.808,480,2.086,481,2.086,482,2.086,483,2.086,484,2.086,485,1.793,486,2.086,487,2.086,488,1.979,489,2.064,490,1.549,493,1.762,495,2.808,500,0.681,501,1.377,502,1.377,503,1.762,506,2.517,507,1.377,509,1.979,522,1.455,523,2.388,526,1.377,528,1.543,529,1.543,530,1.306,531,1.543,532,1.563,533,2.086,535,1.306,537,1.032,540,1.306,544,1.377,545,1.377,551,0.907,553,0.907,557,1.496,560,1.214,561,0.835,562,0.835,564,0.946,565,1.543,566,1.71,567,1.079,568,1.455,569,0.62,603,3.447,628,2.491,630,0.578,633,0.907,642,1.496,662,1.306,697,1.079,699,1.306,742,1.129,787,2.968,983,1.242,993,4.238,995,4.238,997,2.808,998,2.414,1006,3.604,1010,2.318,1013,1.377,1014,4.039,1015,1.904,1016,1.904,1017,2.081,1018,2.318,1019,1.882,1020,2.318,1021,2.318,1022,2.318,1023,2.318,1025,2.318,1027,2.318,1033,2.081,1034,2.883,1035,2.491,1036,1.904,1038,3.594,1039,2.883,1040,1.904,1041,3.007,1042,1.904,1043,1.644,1047,1.591,1056,5.282,1082,3.594,1090,3.594,1104,1.377,1149,2.318,1150,4.896,1151,4.056,1152,3.804,1153,4.238,1154,3.511,1155,5.462,1156,4.056,1157,4.056,1158,2.678,1159,4.056,1160,3.511,1161,2.678,1162,2.678,1163,2.678,1164,2.883,1165,2.678,1166,2.678,1167,2.678,1168,2.678,1169,2.669,1170,2.678,1171,2.678,1172,3.511,1173,2.678,1174,2.678,1175,2.678,1176,2.678,1177,2.318,1178,3.152,1179,1.762,1180,2.678,1181,2.678,1182,2.678,1183,2.081,1184,2.081,1185,2.081,1186,2.678,1187,2.678,1188,3.152,1189,2.081,1190,2.081,1191,2.081,1192,2.678,1193,2.678,1194,2.678,1195,2.678,1196,2.678,1197,2.678,1198,2.669,1199,2.883,1200,2.678]],["title/components/GroupsPreviewComponent.html",[0,0.098,61,0.594]],["body/components/GroupsPreviewComponent.html",[0,0.191,1,0.599,2,0.815,3,0.14,4,0.122,5,0.746,6,0.779,7,0.746,8,0.746,9,0.122,11,0.853,12,1.201,16,0.746,17,1.293,18,1.234,19,0.892,21,0.853,23,0.554,24,0.016,25,0.422,26,0.14,27,0.099,29,0.685,30,1.016,31,0.974,32,0.746,33,1.24,34,0.746,35,0.37,36,0.746,37,0.627,38,0.746,39,0.627,40,0.627,41,1.155,42,1.155,43,0.627,44,1.24,45,0.627,46,0.746,47,0.599,48,1.016,49,1.155,50,0.627,51,0.746,52,0.599,53,1.385,54,0.599,55,1.033,56,0.746,57,0.627,58,1.016,59,0.627,60,0.746,61,0.995,62,0.746,63,0.627,64,0.844,65,0.599,66,0.746,67,0.627,68,0.746,69,0.599,70,0.746,71,0.599,72,0.627,73,0.746,74,0.627,75,1.298,76,0.746,77,0.627,78,0.627,79,0.746,80,0.627,81,1.187,82,0.599,83,0.746,84,0.599,85,0.742,86,0.995,87,1.016,88,0.599,89,0.746,90,0.599,91,0.746,92,0.599,93,1.095,94,0.746,95,0.599,96,0.627,97,0.746,98,0.746,99,0.746,100,0.011,101,0.011,106,0.176,107,0.397,110,0.312,112,2.206,113,0.535,115,0.454,116,0.292,117,0.454,118,0.47,119,0.47,126,1.038,127,0.746,128,0.685,129,0.685,271,5.204,298,2.744,299,1.543,303,4.619,311,3.076,317,0.892,328,2.786,332,1.527,336,4.619,338,1.089,342,1.105,343,0.957,365,1.968,405,1.089,424,2.475,427,1.481,428,1.607,434,1.527,435,1.406,439,3.793,630,1.31,633,2.206,642,1.968,770,3.511,788,2.475,936,4.619,938,5.638,948,4.619,949,5.061,1019,1.818,1056,5.204,1082,3.511,1111,3.392,1177,3.392,1201,3.392,1202,6.067,1203,5.336,1204,5.336,1205,2.786,1206,5.336,1207,5.336,1208,3.919,1209,5.336,1210,3.919,1211,3.919,1212,3.919,1213,4.619,1214,2.624,1215,3.919,1216,1.912,1217,1.818,1218,5.336,1219,3.045,1220,2.786,1221,3.919,1222,3.919,1223,3.919,1224,3.919,1225,3.919,1226,5.336]],["title/components/HistoryQuizComponent.html",[0,0.098,63,0.622]],["body/components/HistoryQuizComponent.html",[0,0.176,1,0.462,2,0.886,3,0.108,4,0.095,5,0.576,6,0.601,7,0.576,8,0.576,9,0.095,11,0.842,12,1,13,1.13,16,0.576,17,1.27,18,1.212,19,0.743,21,0.71,23,0.568,24,0.016,25,0.326,26,0.108,27,0.076,29,0.529,30,0.846,31,0.811,32,0.576,33,1.105,34,0.576,35,0.336,36,0.576,37,0.484,38,0.576,39,0.484,40,0.484,41,1.003,42,1.003,43,0.484,44,1.105,45,0.484,46,0.576,47,0.462,48,1.105,49,1.003,50,0.484,51,0.576,52,0.462,53,0.92,54,0.462,55,0.618,56,0.576,57,0.484,58,0.846,59,0.484,60,0.576,61,0.462,62,0.576,63,0.927,64,1.032,65,0.462,66,0.576,67,0.484,68,0.576,69,0.462,70,0.576,71,0.462,72,0.484,73,0.576,74,0.484,75,1.271,76,0.576,77,0.484,78,0.484,79,0.576,80,0.484,81,1.117,82,0.462,83,0.576,84,0.462,85,0.618,86,1.046,87,0.846,88,0.462,89,0.576,90,0.462,91,0.576,92,0.462,93,0.999,94,0.576,95,0.462,96,0.484,97,0.576,98,0.576,99,0.576,100,0.009,101,0.009,106,0.136,107,0.331,110,0.419,112,2.188,113,0.552,115,0.378,116,0.314,117,0.378,118,0.774,119,0.774,126,0.801,127,0.576,128,0.776,129,0.776,138,0.801,142,1.736,143,1.329,145,0.905,146,0.834,147,1.337,148,1.512,149,1.385,150,0.943,190,1.276,216,1.069,223,5.317,299,1.13,315,2.728,316,2.728,317,0.743,321,3.153,322,1.712,328,2.15,332,1.041,337,1.276,338,1.08,342,0.92,343,1.416,344,0.92,358,1.329,365,1.639,373,0.769,386,1.79,397,2.951,400,1.443,401,1.505,405,1.145,423,2.15,427,1.285,428,1.394,429,3.158,430,4.091,431,3.452,433,2.691,434,1.36,435,1.253,441,1.403,442,1.475,443,1.577,447,1.57,448,1.57,449,1.873,450,1.385,451,1.329,464,3.817,467,1.712,489,1.918,490,1.041,500,0.769,509,1.476,537,1.166,541,1.403,542,1.403,546,1.403,547,1.555,548,1.555,549,1.555,550,2.284,551,1.505,553,1.025,555,1.744,560,0.905,561,1.385,562,1.641,564,1.069,566,1.276,569,0.987,603,1.403,619,3.817,620,2.235,630,1.395,642,2.14,662,1.476,689,2.284,697,1.79,699,2.167,701,2.923,734,1.276,742,1.276,747,1.644,768,2.759,780,2.061,781,4.028,782,2.15,783,3.104,787,2.414,788,2.997,841,2.728,842,2.923,843,4.066,844,2.923,845,3.464,849,1.991,851,4.251,856,3.817,919,1.644,921,1.744,932,6.371,935,4.557,937,4.557,939,4.508,940,3.845,941,4.508,953,3.845,958,2.923,959,3.158,966,2.618,968,2.618,969,2.618,970,4.557,971,2.618,972,4.557,973,3.845,974,2.618,976,3.845,977,3.845,978,3.845,979,3.452,980,3.452,982,2.923,983,2.061,984,2.728,986,2.923,987,1.403,988,1.644,989,1.991,1214,2.337,1216,1.476,1217,1.403,1220,2.15,1227,6.474,1228,4.443,1229,4.443,1230,3.025,1231,3.025,1232,3.025,1233,3.025,1234,4.443,1235,3.025,1236,3.025,1237,3.025,1238,4.443,1239,3.025,1240,3.025,1241,3.025,1242,3.025,1243,3.025,1244,2.618,1245,3.025,1246,3.025,1247,2.618,1248,4.443,1249,4.443,1250,3.025]],["title/components/HomeComponent.html",[0,0.098,65,0.594]],["body/components/HomeComponent.html",[0,0.187,1,0.72,2,0.92,3,0.168,4,0.147,5,0.897,6,0.936,7,0.897,8,0.897,9,0.147,12,1.06,13,1.198,16,0.897,17,1.306,18,1.248,19,1.007,21,0.963,23,0.512,24,0.016,25,0.507,26,0.168,27,0.119,29,0.823,30,1.147,31,1.099,32,0.897,33,1.333,34,0.897,35,0.381,36,0.897,37,0.753,38,0.897,39,0.753,40,0.753,41,1.265,42,1.265,43,0.753,44,1.333,45,0.753,46,0.897,47,0.72,48,1.147,49,1.265,50,0.753,51,0.897,52,0.72,53,1.161,54,0.72,55,0.838,56,0.897,57,0.753,58,1.147,59,0.753,60,0.897,61,0.72,62,0.897,63,0.753,64,0.924,65,1.07,66,0.897,67,0.753,68,0.897,69,0.72,70,0.897,71,0.72,72,0.753,73,0.897,74,0.753,75,1.265,76,0.897,77,0.753,78,0.753,79,0.897,80,0.753,81,0.753,82,0.72,83,0.897,84,0.72,85,0.838,86,1.07,87,1.147,88,0.72,89,0.897,90,0.72,91,0.897,92,0.72,93,0.879,94,0.897,95,0.72,96,0.753,97,0.897,98,0.897,99,0.897,100,0.012,101,0.012,106,0.211,110,0.375,113,0.494,115,0.401,116,0.211,117,0.401,127,0.897,288,6.264,317,1.007,338,1.007,405,1.171,434,1.641,435,1.512,442,1.532,443,1.71,500,1.198,783,1.986,1073,2.893,1251,4.077,1252,6.644,1253,6.025,1254,4.711,1255,4.711,1256,4.711]],["title/components/JoinQuizComponent.html",[0,0.098,67,0.622]],["body/components/JoinQuizComponent.html",[0,0.154,1,0.607,2,0.823,3,0.142,4,0.124,5,0.757,6,0.789,7,0.757,8,0.757,9,0.124,13,1.554,16,0.757,17,1.294,18,1.235,19,0.901,21,0.861,23,0.52,24,0.016,25,0.428,26,0.142,27,0.1,29,0.694,30,1.026,31,0.983,32,0.757,33,1.344,34,0.757,35,0.372,36,0.757,37,0.635,38,0.757,39,0.635,40,0.635,41,1.164,42,1.164,43,0.635,44,1.248,45,0.635,46,0.757,47,0.607,48,1.026,49,1.164,50,0.635,51,0.757,52,0.607,53,1.068,54,0.607,55,0.749,56,0.757,57,0.635,58,1.026,59,0.635,60,0.757,61,0.607,62,0.757,63,0.635,64,1.072,65,0.607,66,0.757,67,1.047,68,1.399,69,0.607,70,0.757,71,0.607,72,0.635,73,0.757,74,0.635,75,1.164,76,0.757,77,0.635,78,0.635,79,0.757,80,0.635,81,0.635,82,0.607,83,0.757,84,0.607,85,0.749,86,1.001,87,1.026,88,0.607,89,0.757,90,0.607,91,0.757,92,0.607,93,0.786,94,0.757,95,0.607,96,0.635,97,0.757,98,0.757,99,0.757,100,0.011,101,0.011,106,0.178,110,0.317,113,0.401,115,0.338,116,0.178,117,0.338,127,0.757,138,1.052,142,1.96,143,1.189,145,1.612,146,1.485,147,1.756,148,1.141,149,1.679,150,1.239,216,1.404,218,4.344,317,0.901,338,0.664,397,2.895,405,0.664,423,2.825,429,5.68,430,4.748,431,4.185,433,3.039,441,1.843,509,1.939,537,1.531,541,2.835,542,2.499,546,1.843,547,2.043,548,2.043,549,2.043,550,2.77,551,1.346,553,1.825,557,2.416,560,1.96,561,2.042,562,1.679,564,1.903,566,1.676,697,1.601,699,1.939,734,1.676,747,2.16,918,3.105,919,2.16,983,1.843,986,3.545,987,1.843,988,2.16,989,2.615,1148,2.291,1257,5.289,1258,3.974,1259,3.974,1260,3.088,1261,3.974,1262,3.974,1263,3.44,1264,5.351,1265,5.037,1266,7.528,1267,7.528,1268,7.528,1269,7.528,1270,7.528,1271,7.528,1272,2.825,1273,2.825,1274,3.44,1275,2.615,1276,2.825,1277,3.44]],["title/components/LoginComponent.html",[0,0.098,69,0.594]],["body/components/LoginComponent.html",[0,0.168,1,0.387,2,0.923,3,0.091,4,0.079,5,0.483,6,0.504,7,0.483,8,0.483,9,0.079,11,0.849,12,0.875,13,1.537,16,0.483,17,1.252,18,1.194,19,0.651,21,0.622,23,0.566,24,0.016,25,0.273,26,0.091,27,0.064,29,0.443,30,0.741,31,0.71,32,0.483,33,1.198,34,0.483,35,0.329,36,0.483,37,0.405,38,0.483,39,0.405,40,0.405,41,0.902,42,0.902,43,0.405,44,1.011,45,0.405,46,0.483,47,0.387,48,0.741,49,0.902,50,0.405,51,0.483,52,0.387,53,0.827,54,0.387,55,0.841,56,0.483,57,0.405,58,0.741,59,0.405,60,0.483,61,0.387,62,0.483,63,0.405,64,0.658,65,0.387,66,0.483,67,0.405,68,0.483,69,0.811,70,0.483,71,0.387,72,0.405,73,0.483,74,0.405,75,0.902,76,0.483,77,0.405,78,0.405,79,0.483,80,0.405,81,1.038,82,0.387,83,0.483,84,0.387,85,0.541,86,0.811,87,0.741,88,0.387,89,0.483,90,0.387,91,0.483,92,0.387,93,0.947,94,0.483,95,0.387,96,0.405,97,0.483,98,0.483,99,0.483,100,0.008,101,0.008,106,0.114,107,0.29,110,0.377,112,2.048,113,0.522,115,0.403,116,0.271,117,0.403,118,0.466,119,0.466,121,0.86,126,0.671,127,0.483,128,0.443,129,0.443,138,1.667,139,0.79,142,1.883,143,1.416,144,1.673,145,1.164,146,1.58,148,1.525,149,1.213,150,1.213,166,2.886,190,1.952,193,1.176,202,1.121,203,2.531,206,1.803,291,4.362,293,2.389,294,2.195,299,1.6,308,2.347,309,2.73,317,0.888,319,4.126,321,2.886,322,1.499,323,3.368,324,2.59,325,2.766,332,1.245,333,3.023,337,1.118,338,1.011,343,1.537,344,1.1,349,1.557,350,2.139,352,3.023,358,1.164,365,0.935,368,1.557,373,0.645,393,3.422,399,1.641,400,1.264,401,1.318,405,1.086,424,3.331,434,1.245,435,1.147,438,2.001,440,2.001,442,1.204,443,1.476,444,2.463,445,2.463,447,1.375,448,1.375,450,1.213,451,1.164,452,2.804,453,1.805,467,2.046,468,1.805,469,2.243,471,1.118,472,3.775,473,3.494,476,2.73,477,2.001,478,2.001,479,2.73,480,2.001,481,2.001,482,2.001,483,2.001,484,2.001,485,1.72,486,2.001,487,2.001,488,1.898,489,2.04,490,1.522,495,2.73,500,0.645,501,2.434,502,1.304,506,2.434,507,2.001,523,2.31,524,2.56,525,2.766,526,1.304,527,1.803,528,1.462,529,1.462,530,1.237,531,2.243,532,1.499,533,2.001,540,1.237,541,3.013,542,2.657,546,2.804,551,2.048,553,1.94,554,3.115,555,3.484,557,2.649,560,1.943,561,1.655,562,1.476,564,1.673,566,1.641,567,1.022,569,1.107,692,1.557,730,1.669,731,1.803,732,1.803,734,1.069,735,3.712,737,1.803,740,3.366,742,2.738,743,2.729,744,1.97,747,1.378,748,3.775,749,1.462,783,1.641,825,2.907,837,1.557,918,2.729,919,2.115,920,2.907,921,1.462,922,2.56,944,4.098,958,2.56,983,1.176,987,1.805,988,2.573,997,2.73,998,2.347,1013,1.304,1019,2.92,1035,2.389,1043,1.557,1073,1.557,1198,3.494,1272,1.803,1275,3.115,1276,2.766,1278,2.195,1279,4.735,1280,3.891,1281,4.735,1282,4.735,1283,5.31,1284,3.891,1285,3.607,1286,4.382,1287,3.891,1288,2.536,1289,5.31,1290,5.31,1291,5.31,1292,2.536,1293,3.891,1294,6.045,1295,2.536,1296,2.536,1297,3.891,1298,2.536,1299,3.891,1300,2.536,1301,2.536,1302,2.536,1303,3.368,1304,1.803,1305,2.536,1306,2.195,1307,2.536,1308,2.766,1309,2.536,1310,1.669,1311,1.803,1312,2.195,1313,2.536,1314,1.803,1315,2.536,1316,2.536,1317,2.536,1318,2.195,1319,2.536,1320,2.536,1321,2.536,1322,2.536,1323,2.536,1324,2.536,1325,2.536,1326,2.195,1327,2.195,1328,2.536,1329,2.536,1330,2.536,1331,2.536,1332,2.536,1333,3.891,1334,3.891,1335,4.735,1336,3.891,1337,3.368,1338,2.536,1339,2.536,1340,2.536,1341,2.536,1342,2.536,1343,2.536,1344,3.023,1345,3.023,1346,2.536,1347,3.368,1348,1.803,1349,3.368,1350,3.679,1351,3.775,1352,3.679,1353,1.97,1354,2.195,1355,1.97,1356,2.195,1357,2.195,1358,2.195,1359,2.195,1360,3.368,1361,3.368,1362,3.368,1363,3.368,1364,2.195,1365,2.195,1366,2.195,1367,3.368,1368,2.195,1369,2.195,1370,1.803,1371,2.195,1372,2.195,1373,2.195,1374,2.195,1375,2.195,1376,1.803,1377,2.195,1378,2.195,1379,2.536]],["title/classes/LoginRequest.html",[27,0.098,1308,2.765]],["body/classes/LoginRequest.html",[3,0.21,4,0.184,9,0.184,24,0.016,26,0.21,27,0.148,35,0.32,100,0.014,101,0.014,106,0.264,107,0.514,110,0.469,113,0.545,115,0.5,116,0.329,117,0.5,121,1.063,923,2.169,1285,3.964,1286,5.188,1308,4.908,1380,6.545,1381,3.87,1382,6.904,1383,4.908,1384,4.181,1385,5.09,1386,5.09]],["title/components/Muzeum_habsbourgComponent.html",[0,0.098,71,0.594]],["body/components/Muzeum_habsbourgComponent.html",[0,0.173,1,0.605,2,0.821,3,0.141,4,0.124,5,0.754,6,0.786,7,0.754,8,0.754,9,0.124,16,0.754,17,1.294,18,1.235,19,0.898,21,0.859,23,0.662,24,0.016,25,0.426,26,0.141,27,0.1,29,0.691,30,1.023,31,0.98,32,0.754,33,1.245,34,0.754,35,0.355,36,0.754,37,0.633,38,0.754,39,0.633,40,0.633,41,1.161,42,1.161,43,0.633,44,1.245,45,0.633,46,0.754,47,0.605,48,1.023,49,1.161,50,0.633,51,0.754,52,0.605,53,1.065,54,0.605,55,0.747,56,0.754,57,0.633,58,1.023,59,0.633,60,0.754,61,0.605,62,0.754,63,0.633,64,0.848,65,0.605,66,0.754,67,0.633,68,0.754,69,0.605,70,0.754,71,0.999,72,0.633,73,0.754,74,0.633,75,1.161,76,0.754,77,0.633,78,0.633,79,0.754,80,0.633,81,0.633,82,0.605,83,0.754,84,0.605,85,0.747,86,0.999,87,1.023,88,0.605,89,0.754,90,0.605,91,0.754,92,0.605,93,0.783,94,0.754,95,0.605,96,0.633,97,0.754,98,0.754,99,0.754,100,0.011,101,0.011,106,0.178,107,0.4,110,0.315,113,0.537,115,0.337,116,0.316,117,0.337,118,0.644,119,0.644,121,0.712,126,1.048,127,0.754,128,1.26,129,1.26,285,1.525,299,1.006,317,0.898,338,0.662,344,1.355,368,2.43,373,1.006,405,0.662,442,1.551,443,1.597,489,1.964,490,1.429,500,1.006,538,3.075,539,4.174,574,3.92,630,1.16,662,2.62,758,4.649,770,3.535,771,2.813,1104,2.035,1107,2.813,1205,2.813,1265,4.499,1310,2.604,1387,3.426,1388,6.098,1389,5.372,1390,4.738,1391,4.746,1392,5.313,1393,5.661,1394,5.372,1395,3.958,1396,3.958,1397,5.278,1398,4.65,1399,3.958,1400,3.958,1401,3.958,1402,3.426,1403,3.426,1404,3.426,1405,3.426,1406,3.426,1407,3.426,1408,3.426,1409,3.426,1410,3.426,1411,4.013,1412,3.818,1413,3.818,1414,3.426,1415,5.278,1416,3.426,1417,4.65,1418,3.426,1419,3.426,1420,3.426,1421,3.426,1422,3.426,1423,3.426,1424,4.65,1425,3.426,1426,4.65,1427,4.65,1428,4.65,1429,3.075,1430,3.426,1431,3.426,1432,3.426,1433,3.075,1434,3.426]],["title/components/NavbarComponent.html",[0,0.098,72,0.622]],["body/components/NavbarComponent.html",[0,0.168,1,0.456,2,0.982,3,0.106,4,0.093,5,0.568,6,0.592,7,0.568,8,0.568,9,0.093,11,0.703,12,0.989,13,1.634,15,2.389,16,0.568,17,1.269,18,1.211,19,0.735,21,0.703,23,0.547,24,0.016,25,0.321,26,0.106,27,0.075,29,0.521,30,0.837,31,0.802,32,0.568,33,1.17,34,0.568,35,0.313,36,0.568,37,0.477,38,0.568,39,0.477,40,0.477,41,0.994,42,0.994,43,0.477,44,1.097,45,0.477,46,0.568,47,0.456,48,1.097,49,0.994,50,0.477,51,0.568,52,0.456,53,0.912,54,0.456,55,0.611,56,0.568,57,0.477,58,0.837,59,0.477,60,0.568,61,0.456,62,0.568,63,0.477,64,0.726,65,0.456,66,0.568,67,0.477,68,0.568,69,0.456,70,0.568,71,0.456,72,0.921,73,0.568,74,0.477,75,0.994,76,0.568,77,0.477,78,0.477,79,0.568,80,0.477,81,1.091,82,0.456,83,0.568,84,0.456,85,0.611,86,0.88,87,0.837,88,0.456,89,0.568,90,0.456,91,0.568,92,0.456,93,1.033,94,0.568,95,0.456,96,0.477,97,0.568,98,0.568,99,0.568,100,0.009,101,0.009,106,0.258,107,0.327,110,0.416,111,1.962,112,2.359,113,0.534,115,0.254,116,0.288,117,0.254,118,0.736,119,0.848,120,2.546,121,0.582,122,3.805,126,0.79,127,0.568,138,1.844,139,1.796,140,2.837,141,3.805,142,2.041,143,1.724,144,1.553,145,1.724,146,1.589,147,1.943,148,1.846,149,1.37,150,1.37,169,3.125,190,1.655,278,1.383,291,3.206,293,3.206,298,2.26,299,1.118,309,2.26,312,3.791,313,3.125,314,4.096,315,2.699,316,2.699,317,0.735,322,1.694,332,1.03,337,1.263,338,1.027,339,1.915,342,0.911,343,1.275,344,0.911,345,5.164,349,1.831,350,1.201,358,1.315,373,0.758,399,2.876,405,1.075,427,1.275,428,1.383,434,1.35,435,1.244,442,1.465,443,1.569,450,1.796,451,1.315,489,2.108,490,1.35,500,0.758,526,1.533,537,1.694,541,2.981,542,2.422,544,2.26,545,1.533,551,1.01,553,1.769,557,2.452,560,1.989,561,1.915,562,1.796,563,3.125,564,1.054,569,1.082,620,1.149,692,1.831,697,1.771,731,2.12,732,2.12,734,2.202,735,3.206,737,2.12,740,2.12,742,1.854,743,2.534,745,2.581,747,1.621,748,2.12,749,2.534,846,2.317,848,3.416,918,1.719,919,1.621,920,2.699,921,1.719,922,1.962,987,1.383,997,2.962,998,2.546,1000,3.125,1013,1.533,1041,3.947,1164,3.125,1214,1.771,1216,1.455,1217,1.383,1219,2.317,1275,3.436,1350,2.317,1351,3.711,1352,4.057,1353,2.317,1355,2.317,1376,3.711,1435,2.581,1436,6.143,1437,5.221,1438,4.396,1439,5.221,1440,5.221,1441,3.848,1442,5.221,1443,5.762,1444,6.427,1445,4.396,1446,2.982,1447,2.982,1448,4.396,1449,2.982,1450,2.982,1451,4.396,1452,4.396,1453,2.982,1454,4.396,1455,4.396,1456,3.805,1457,5.762,1458,2.982,1459,2.982,1460,2.982,1461,2.982,1462,2.581,1463,4.396,1464,4.396,1465,2.982,1466,4.396,1467,2.581,1468,2.982,1469,2.982,1470,2.982,1471,2.982,1472,2.982,1473,2.982,1474,5.762,1475,4.396,1476,2.317,1477,2.317,1478,2.581,1479,2.581,1480,2.982,1481,4.057,1482,4.519,1483,2.982,1484,2.982,1485,2.982,1486,4.396,1487,2.982,1488,4.396,1489,6.143,1490,2.982,1491,2.982,1492,2.982,1493,2.982,1494,2.982,1495,2.982,1496,2.982,1497,2.982,1498,2.982,1499,4.396,1500,2.982,1501,2.982,1502,2.982,1503,3.805,1504,3.805,1505,2.581,1506,2.982,1507,2.581]],["title/components/PreviewScenariosComponent.html",[0,0.098,74,0.622]],["body/components/PreviewScenariosComponent.html",[0,0.194,1,0.564,2,0.782,3,0.132,4,0.115,5,0.703,6,0.733,7,0.703,8,0.703,9,0.115,11,0.819,12,1.152,16,0.703,17,1.288,18,1.23,19,0.856,21,0.819,23,0.54,24,0.016,25,0.398,26,0.132,27,0.093,29,0.645,30,0.975,31,0.934,32,0.703,33,1.209,34,0.703,35,0.345,36,0.703,37,0.59,38,0.703,39,0.59,40,0.59,41,1.12,42,1.12,43,0.59,44,1.209,45,0.59,46,0.703,47,0.564,48,0.975,49,1.12,50,0.59,51,0.703,52,0.564,53,1.027,54,0.564,55,0.712,56,0.703,57,0.59,58,0.975,59,0.59,60,0.703,61,0.564,62,0.703,63,0.59,64,0.818,65,0.564,66,0.703,67,0.59,68,0.703,69,0.564,70,0.703,71,0.564,72,0.59,73,0.703,74,1.015,75,1.46,76,0.703,77,0.59,78,0.59,79,0.703,80,0.59,81,0.59,82,0.564,83,0.703,84,0.564,85,0.712,86,0.97,87,0.975,88,0.564,89,0.703,90,0.564,91,0.703,92,0.564,93,0.747,94,0.703,95,0.564,96,0.59,97,0.703,98,0.703,99,0.703,100,0.01,101,0.01,106,0.166,107,0.381,110,0.469,113,0.552,115,0.314,116,0.299,117,0.314,118,0.614,119,0.614,121,0.679,127,0.703,128,0.645,129,0.645,216,1.304,239,4.933,299,1.863,317,0.856,332,1.378,337,1.471,338,1.115,342,1.061,343,1.436,344,0.765,358,1.532,365,1.889,386,2.369,397,3.129,399,2.479,400,1.664,401,1.735,403,1.801,405,1.154,413,2.267,414,2.267,426,3.979,427,1.436,428,1.557,433,2.728,434,1.378,435,1.371,441,1.712,442,1.615,443,1.685,447,1.81,448,1.81,449,2.159,450,1.596,451,1.532,458,4.321,500,0.939,537,1.973,569,0.97,583,5.329,620,1.422,630,0.797,643,3.9,659,2.429,660,3.195,688,4.433,689,1.898,760,3.979,788,3.202,806,3.64,982,3.37,984,3.145,1047,1.91,1104,1.898,1169,3.37,1179,2.429,1508,5.329,1509,3.195,1510,5.88,1511,5.121,1512,5.88,1513,5.88,1514,6.351,1515,5.88,1516,5.121,1517,3.691,1518,3.691,1519,5.88,1520,3.691,1521,3.691,1522,4.433,1523,4.433,1524,4.433,1525,3.691,1526,5.121,1527,3.691,1528,3.691,1529,3.691,1530,3.691,1531,5.121,1532,5.88,1533,3.691,1534,3.691,1535,3.691,1536,5.121]],["title/components/PreviewSceneComponent.html",[0,0.098,77,0.622]],["body/components/PreviewSceneComponent.html",[0,0.197,1,0.607,2,0.823,3,0.142,4,0.124,5,0.757,6,0.789,7,0.757,8,0.757,9,0.124,11,0.861,12,1.212,16,0.757,17,1.294,18,1.235,19,0.901,21,0.861,23,0.557,24,0.016,25,0.428,26,0.142,27,0.1,29,0.694,30,1.026,31,0.983,32,0.757,33,1.248,34,0.757,35,0.356,36,0.757,37,0.635,38,0.757,39,0.635,40,0.635,41,1.164,42,1.164,43,0.635,44,1.248,45,0.635,46,0.757,47,0.607,48,1.026,49,1.164,50,0.635,51,0.757,52,0.607,53,1.068,54,0.607,55,0.749,56,0.757,57,0.635,58,1.026,59,0.635,60,0.757,61,0.607,62,0.757,63,0.635,64,0.85,65,0.607,66,0.757,67,0.635,68,0.757,69,0.607,70,0.757,71,0.607,72,0.635,73,0.757,74,0.635,75,1.475,76,0.757,77,1.047,78,0.635,79,0.757,80,0.635,81,0.635,82,0.607,83,0.757,84,0.607,85,0.749,86,1.001,87,1.026,88,0.607,89,0.757,90,0.607,91,0.757,92,0.607,93,0.786,94,0.757,95,0.607,96,0.635,97,0.757,98,0.757,99,0.757,100,0.011,101,0.011,106,0.178,107,0.401,110,0.487,113,0.525,115,0.338,116,0.274,117,0.338,127,0.757,128,0.694,129,0.694,216,1.404,250,4.751,299,1.893,317,0.901,332,1.536,337,1.547,338,1.022,342,1.116,343,1.492,344,0.823,358,1.612,386,2.639,397,3.191,399,2.577,400,1.75,401,1.825,403,2.628,405,1.145,413,2.44,414,2.44,427,1.492,428,1.618,433,3.039,434,1.536,435,1.415,441,1.843,442,1.666,443,1.724,447,1.903,448,1.903,449,2.271,450,1.679,451,1.612,500,1.01,509,1.939,537,2.076,571,3.088,574,4.187,575,4.748,576,4.185,583,3.829,647,4.023,658,3.44,659,2.615,690,4.662,806,3.829,1047,1.985,1104,2.043,1169,3.545,1179,2.615,1508,5.132,1522,4.662,1523,4.662,1537,5.387,1538,3.974,1539,3.974,1540,3.974,1541,3.974,1542,3.974,1543,3.974,1544,3.974,1545,5.387]],["title/components/PreviewTasksComponent.html",[0,0.098,78,0.622]],["body/components/PreviewTasksComponent.html",[0,0.18,1,0.352,2,0.77,3,0.082,4,0.072,5,0.438,6,0.457,7,0.438,8,0.438,9,0.072,11,0.929,12,0.812,13,1.392,16,0.438,17,1.24,18,1.182,19,0.603,21,0.577,23,0.563,24,0.016,25,0.248,26,0.082,27,0.058,29,0.402,30,0.687,31,0.658,32,0.438,33,1.106,34,0.438,35,0.367,36,0.438,37,0.368,38,0.438,39,0.368,40,0.368,41,0.848,42,0.848,43,0.368,44,0.96,45,0.368,46,0.438,47,0.352,48,0.687,49,0.848,50,0.368,51,0.438,52,0.352,53,0.778,54,0.352,55,0.502,56,0.438,57,0.368,58,0.687,59,0.368,60,0.438,61,0.352,62,0.438,63,0.368,64,0.619,65,0.352,66,0.438,67,0.368,68,0.438,69,0.352,70,0.438,71,0.352,72,0.368,73,0.438,74,0.806,75,1.398,76,0.438,77,0.806,78,0.806,79,0.438,80,0.368,81,1.034,82,0.352,83,0.438,84,0.352,85,0.502,86,1.18,87,0.687,88,0.352,89,0.438,90,0.352,91,0.438,92,0.352,93,0.965,94,0.438,95,0.352,96,0.368,97,0.438,98,0.438,99,0.438,100,0.007,101,0.007,106,0.246,107,0.269,110,0.355,112,1.968,113,0.556,115,0.517,116,0.325,117,0.517,118,0.775,119,0.775,120,1.017,121,0.726,126,0.609,127,0.438,128,0.631,129,0.631,138,0.956,140,1.251,142,2.018,143,1.508,144,1.573,145,1.08,146,0.995,147,1.017,148,1.279,149,1.893,150,0.717,190,1.037,216,0.813,239,1.514,240,1.788,243,1.636,250,1.514,251,5.331,299,1.282,311,2.906,312,3.317,315,2.216,316,2.216,317,0.603,321,2.74,322,1.391,332,1.607,337,1.037,338,1.128,342,0.748,343,1.647,344,0.922,358,1.08,365,1.331,368,1.413,373,0.585,386,2.031,397,2.684,400,1.638,401,1.708,403,1.761,405,1.128,406,3.124,427,1.087,428,1.179,433,2.338,434,1.182,435,1.088,441,1.068,442,1.282,443,1.418,447,1.781,448,1.781,449,2.126,450,1.125,451,1.08,458,2.08,464,3.823,467,1.942,471,0.661,489,2.109,490,1.474,500,0.585,509,2.172,537,0.887,541,2.065,542,1.674,543,1.961,546,1.068,547,1.183,548,1.183,549,1.183,550,1.856,551,0.78,553,1.222,557,1.859,560,1.738,561,1.893,562,1.811,564,1.573,566,0.97,569,0.887,574,1.961,603,3.357,613,3.124,614,3.124,615,3.862,619,3.317,620,1.942,628,2.216,629,3.124,630,1.626,633,2.13,634,3.124,642,1.859,659,1.514,662,1.761,683,1.992,685,1.992,689,1.856,691,1.992,692,1.413,695,1.992,696,1.992,697,0.927,698,4.138,699,2.172,701,2.375,734,1.522,747,1.961,768,1.794,780,1.068,783,2.931,788,2.917,793,3.317,825,2.216,831,2.804,841,2.216,842,2.375,843,3.603,844,2.375,845,2.93,849,2.375,851,4.138,856,3.317,918,2.08,919,1.251,939,3.917,941,3.917,958,2.375,959,2.565,982,2.375,983,2.065,984,2.216,986,2.375,987,1.068,988,1.251,989,1.514,1039,2.565,1148,1.326,1214,2.031,1216,1.123,1217,1.068,1220,1.636,1244,1.992,1263,1.992,1265,4.354,1272,1.636,1273,1.636,1274,1.992,1275,1.514,1276,1.636,1277,1.992,1310,1.514,1390,3.459,1508,5.331,1546,1.992,1547,3.609,1548,4.452,1549,3.609,1550,4.452,1551,4.452,1552,4.452,1553,4.452,1554,3.609,1555,3.609,1556,3.609,1557,3.609,1558,3.609,1559,3.609,1560,2.301,1561,4.363,1562,2.301,1563,3.609,1564,2.301,1565,5.041,1566,2.301,1567,2.301,1568,2.301,1569,3.609,1570,2.301,1571,3.609,1572,4.452,1573,2.301,1574,5.041,1575,2.301,1576,2.301,1577,3.609,1578,2.301,1579,4.318,1580,2.301,1581,2.301,1582,3.892,1583,3.124,1584,2.301,1585,2.301,1586,2.301,1587,2.301,1588,3.609,1589,3.124,1590,2.301,1591,3.124,1592,2.301,1593,2.301,1594,3.165,1595,3.609,1596,3.609,1597,3.609,1598,3.609,1599,3.609,1600,3.609,1601,3.609,1602,5.041,1603,3.609,1604,5.041,1605,2.301,1606,2.301,1607,3.609,1608,2.301,1609,2.301,1610,3.854,1611,3.609,1612,2.301,1613,2.301,1614,2.301,1615,1.992,1616,2.301,1617,1.992,1618,2.301,1619,2.301,1620,2.301,1621,3.609,1622,3.609,1623,3.124,1624,2.301,1625,2.301,1626,2.301]],["title/components/ProfileSettingsComponent.html",[0,0.098,80,0.622]],["body/components/ProfileSettingsComponent.html",[0,0.185,1,0.364,2,0.9,3,0.085,4,0.074,5,0.454,6,0.473,7,0.454,8,0.454,9,0.074,11,0.728,13,1.158,15,2.016,16,0.454,17,1.244,18,1.187,19,0.62,21,0.593,23,0.579,24,0.016,25,0.257,26,0.085,27,0.06,29,0.416,30,0.706,31,0.677,32,0.454,33,0.978,34,0.454,35,0.32,36,0.454,37,0.381,38,0.454,39,0.381,40,0.381,41,0.867,42,0.867,43,0.381,44,0.978,45,0.381,46,0.454,47,0.364,48,0.706,49,0.867,50,0.381,51,0.454,52,0.364,53,0.795,54,0.364,55,1.005,56,0.454,57,0.381,58,0.706,59,0.381,60,0.454,61,0.364,62,0.454,63,0.381,64,0.633,65,0.364,66,0.454,67,0.381,68,0.454,69,0.364,70,0.454,71,0.364,72,0.381,73,0.454,74,0.381,75,0.867,76,0.454,77,0.381,78,0.381,79,0.454,80,0.821,81,1.223,82,0.364,83,0.454,84,0.364,85,0.516,86,0.785,87,0.706,88,0.364,89,0.454,90,0.364,91,0.454,92,0.364,93,0.86,94,0.454,95,0.364,96,0.381,97,1.296,98,0.454,99,0.454,100,0.007,101,0.007,106,0.107,107,0.276,110,0.363,112,2.264,113,0.549,115,0.387,116,0.264,117,0.387,118,0.286,119,0.286,120,1.639,121,0.603,126,0.631,127,0.454,128,0.416,129,0.416,134,1.694,138,0.982,139,0.743,142,1.665,143,1.11,144,0.842,145,1.11,146,1.256,147,1.053,148,1.599,149,1.156,150,0.743,190,2.107,193,1.105,200,1.568,202,1.053,203,2.46,216,0.842,225,5.28,278,2.383,285,1.429,299,1.782,308,1.639,314,1.694,317,0.62,322,1.429,324,1.809,332,1.566,337,1.065,338,1.064,342,0.768,343,1.502,344,1.064,349,1.463,350,2.856,358,1.11,365,0.879,373,0.606,384,2.138,386,2.07,393,1.163,397,2.72,399,2.347,400,1.669,401,1.74,403,1.809,405,1.117,413,1.463,414,1.463,424,3.548,427,1.112,428,1.206,433,2.383,434,1.204,435,1.109,437,2.792,438,1.907,440,1.907,441,1.105,442,1.306,443,1.439,444,2.383,445,2.383,447,1.816,448,1.816,449,1.564,450,1.156,451,1.11,452,2.734,453,1.72,467,1.98,468,2.112,469,2.138,471,1.065,476,2.642,477,1.907,478,1.907,479,2.642,480,1.907,481,1.907,482,1.907,483,1.907,484,1.907,485,1.639,486,1.907,487,1.907,488,1.809,489,1.768,490,1.679,495,3.645,500,0.606,501,2.642,502,1.225,506,3.272,507,2.642,509,1.809,522,1.295,523,2.221,526,1.225,528,1.374,529,1.374,530,1.163,531,1.374,532,1.429,533,1.907,535,1.163,537,0.918,540,1.163,544,1.225,545,1.225,551,0.807,553,0.807,557,1.368,560,1.11,561,0.743,562,0.743,564,0.842,565,1.374,566,1.564,567,0.96,568,1.295,569,0.567,633,0.807,697,0.96,699,1.163,742,1.005,788,1.72,983,1.105,990,1.694,991,3.538,992,2.882,997,2.642,998,2.271,1005,2.063,1013,1.225,1019,2.855,1034,2.636,1035,2.277,1036,1.694,1038,4.665,1040,1.694,1041,4.303,1042,1.694,1043,1.463,1047,1.479,1090,4.187,1104,1.225,1145,3.757,1152,3.538,1169,2.44,1178,2.882,1179,1.568,1183,1.852,1184,1.852,1185,1.852,1188,2.882,1189,1.852,1190,1.852,1191,1.852,1198,4.187,1199,2.636,1214,2.634,1216,1.163,1217,1.105,1247,2.063,1285,3.645,1286,3.879,1304,1.694,1311,1.694,1314,1.694,1326,2.063,1327,2.063,1344,2.882,1345,2.882,1441,1.295,1476,1.852,1477,1.852,1478,2.063,1479,2.063,1627,6.429,1628,3.709,1629,4.447,1630,4.397,1631,3.985,1632,5.508,1633,5.508,1634,5.102,1635,3.709,1636,2.383,1637,2.063,1638,2.383,1639,2.383,1640,3.709,1641,2.383,1642,2.383,1643,3.709,1644,2.063,1645,3.709,1646,2.383,1647,2.383,1648,2.383,1649,2.383,1650,2.063,1651,2.383,1652,1.852,1653,2.383,1654,1.852,1655,2.383,1656,2.383,1657,2.383,1658,2.383,1659,2.383,1660,2.383,1661,3.709,1662,2.996,1663,2.063,1664,2.063,1665,2.063,1666,1.852,1667,1.852,1668,2.383,1669,2.383,1670,2.383,1671,2.063,1672,2.063,1673,2.063,1674,2.063,1675,1.852,1676,2.063,1677,1.852,1678,1.852,1679,2.383,1680,2.383,1681,2.383,1682,2.383,1683,5.138,1684,5.138,1685,2.383,1686,3.709,1687,2.383,1688,2.383,1689,2.383,1690,2.383,1691,2.383,1692,2.383,1693,2.063,1694,2.383,1695,2.383,1696,2.383,1697,2.383,1698,2.063,1699,2.063,1700,3.21,1701,2.383,1702,3.709,1703,3.709,1704,3.709,1705,2.44,1706,3.709,1707,2.063]],["title/classes/ProfileUpdate.html",[27,0.098,1662,2.56]],["body/classes/ProfileUpdate.html",[3,0.183,4,0.16,9,0.16,23,0.436,24,0.016,26,0.183,27,0.129,35,0.279,53,1.11,55,0.713,93,0.747,100,0.013,101,0.013,106,0.23,107,0.473,110,0.408,113,0.588,115,0.436,116,0.355,117,0.436,118,0.942,119,0.942,121,1.047,407,1.975,569,0.783,630,1.107,633,2.152,847,2.344,923,1.891,925,2.679,926,2.912,929,2.161,1046,5.5,1047,2.064,1049,6.637,1145,3.453,1214,3.167,1217,2.378,1285,3.267,1441,3.453,1630,4.181,1631,3.663,1632,5.978,1633,5.978,1634,5.978,1662,4.181,1708,6.424,1709,4.437,1710,6.355,1711,5.126,1712,5.126,1713,5.126,1714,5.126,1715,5.126,1716,5.126,1717,5.126,1718,5.126,1719,5.126,1720,5.126]],["title/components/RegistrationComponent.html",[0,0.098,82,0.594]],["body/components/RegistrationComponent.html",[0,0.168,1,0.388,2,0.812,3,0.091,4,0.079,5,0.484,6,0.505,7,0.484,8,0.484,9,0.079,11,0.623,12,0.877,13,1.352,16,0.484,17,1.252,18,1.194,19,0.652,21,0.623,23,0.536,24,0.016,25,0.274,26,0.091,27,0.064,29,0.444,30,0.742,31,0.711,32,0.484,33,1.2,34,0.484,35,0.289,36,0.484,37,0.406,38,0.484,39,0.406,40,0.406,41,0.903,42,0.903,43,0.406,44,1.013,45,0.406,46,0.484,47,0.388,48,0.742,49,0.903,50,0.406,51,0.484,52,0.388,53,0.829,54,0.388,55,0.999,56,0.484,57,0.406,58,0.742,59,0.406,60,0.484,61,0.388,62,0.484,63,0.406,64,0.66,65,0.388,66,0.484,67,0.406,68,0.484,69,0.388,70,0.484,71,0.388,72,0.406,73,0.484,74,0.406,75,0.903,76,0.484,77,0.406,78,0.406,79,0.484,80,0.406,81,0.406,82,0.812,83,0.484,84,0.388,85,0.542,86,0.812,87,0.742,88,0.388,89,0.484,90,0.388,91,0.484,92,0.388,93,0.882,94,0.484,95,0.388,96,0.406,97,0.484,98,0.484,99,0.484,100,0.008,101,0.008,106,0.114,107,0.29,110,0.378,112,2.05,113,0.544,115,0.216,116,0.257,117,0.216,118,0.568,119,0.568,120,1.124,126,0.673,127,0.484,128,0.444,129,0.444,138,1.668,139,0.793,142,1.885,143,1.419,144,1.676,145,1.166,146,1.581,148,1.12,149,1.215,150,1.215,190,2.1,193,1.179,202,1.124,203,2.534,278,1.809,285,0.98,291,2.912,293,4.177,308,1.723,309,2.005,317,0.652,321,2.89,322,1.502,324,1.902,332,1.246,337,1.12,338,0.959,339,1.215,342,0.808,343,1.158,344,0.808,349,1.561,350,2.863,358,1.166,368,1.561,373,0.646,400,1.267,401,1.321,404,3.375,405,1.053,424,3.54,427,1.158,428,1.256,434,1.246,435,1.148,437,2.89,438,2.734,440,2.005,442,1.206,443,1.477,444,2.467,445,2.467,447,1.378,448,1.378,450,1.215,451,1.166,452,2.807,453,1.809,457,2.566,467,2.049,468,1.809,471,1.362,476,2.734,477,2.005,478,2.005,479,2.734,480,2.005,481,2.005,482,2.005,483,2.005,484,2.005,485,1.723,486,2.005,487,2.005,488,1.902,489,1.987,490,1.684,495,3.609,500,0.646,501,3.239,502,1.307,506,3.239,507,3.111,522,1.382,523,1.902,526,1.307,532,1.502,533,2.005,540,1.24,541,3.015,542,2.66,546,2.807,551,2.05,553,1.943,554,3.121,555,3.488,557,2.65,560,1.945,561,1.658,562,1.478,564,1.676,566,1.644,567,1.024,569,1.108,681,3.029,692,1.561,730,1.673,731,1.807,732,1.807,734,1.072,735,3.716,737,1.807,740,3.371,742,2.741,743,2.733,744,1.976,747,1.382,748,3.78,749,1.465,793,3.121,825,2.912,837,1.561,918,2.733,919,2.119,920,2.912,921,1.465,922,2.566,983,1.179,987,1.809,988,2.577,1019,2.807,1031,1.807,1032,2.201,1035,2.394,1043,1.561,1073,1.561,1145,3.532,1198,4.476,1272,1.807,1275,3.121,1276,2.772,1285,3.558,1286,4.476,1304,1.807,1306,2.201,1310,1.673,1311,1.807,1312,2.201,1314,1.807,1318,3.375,1337,2.201,1344,3.029,1345,3.029,1347,3.375,1348,1.807,1349,3.375,1350,3.685,1351,3.78,1352,3.685,1353,1.976,1354,2.201,1355,1.976,1356,2.201,1357,2.201,1358,2.201,1359,2.201,1360,3.375,1361,3.375,1362,3.375,1363,3.375,1364,2.201,1365,2.201,1366,2.201,1367,3.375,1368,2.201,1369,2.201,1370,1.807,1371,2.201,1372,2.201,1373,2.201,1374,2.201,1375,2.201,1376,1.807,1377,2.201,1378,2.201,1631,3.746,1652,1.976,1654,1.976,1666,1.976,1667,1.976,1675,1.976,1677,1.976,1678,1.976,1700,2.201,1705,4.277,1721,2.201,1722,6.5,1723,4.742,1724,3.899,1725,4.105,1726,4.742,1727,4.742,1728,6.051,1729,3.899,1730,2.543,1731,2.543,1732,2.543,1733,2.543,1734,2.543,1735,2.543,1736,2.543,1737,2.543,1738,3.899,1739,5.318,1740,5.318,1741,2.543,1742,2.543,1743,2.543,1744,2.543,1745,2.543,1746,2.543,1747,2.543,1748,2.543,1749,3.371,1750,2.543,1751,2.543,1752,2.543,1753,2.543,1754,2.201,1755,2.543,1756,2.543,1757,2.543,1758,2.543,1759,2.543,1760,2.543,1761,3.375,1762,2.543,1763,2.543,1764,2.543,1765,2.543,1766,2.543,1767,2.201,1768,2.543]],["title/classes/RegistrationRequest.html",[27,0.098,1749,2.765]],["body/classes/RegistrationRequest.html",[3,0.196,4,0.172,9,0.172,24,0.016,26,0.196,27,0.139,35,0.299,100,0.013,101,0.013,106,0.247,107,0.494,110,0.438,113,0.572,115,0.468,116,0.345,117,0.468,121,1.085,923,2.028,1145,4.228,1285,4,1286,5.12,1381,3.619,1383,3.909,1384,3.909,1385,4.76,1386,4.76,1630,4.982,1631,4.484,1749,4.716,1769,6.734,1770,6.634,1771,6.634,1772,4.76,1773,5.499,1774,5.499,1775,5.499,1776,5.499]],["title/guards/RoleGuard.html",[283,2.765,305,2.56]],["body/guards/RoleGuard.html",[0,0.162,2,0.98,3,0.186,4,0.163,9,0.163,11,1.112,23,0.592,24,0.016,25,0.561,26,0.186,27,0.132,35,0.349,81,0.833,93,1.059,100,0.013,101,0.013,103,3.427,106,0.234,110,0.554,111,3.427,112,2.653,113,0.478,115,0.546,116,0.288,117,0.546,120,2.836,126,1.379,127,0.992,148,1.843,190,1.843,278,2.416,283,4.562,285,2.68,292,5.641,300,4.508,305,4.778,306,4.047,308,2.836,309,3.733,310,5.555,311,3.699,317,1.073,322,2.798,326,5.555,327,6.572,331,5.555,332,1.504,333,4.987,334,5.555,335,5.555,337,1.843,338,0.871,339,2.001,340,3.488,341,3.703,342,1.079,343,1.567,349,3.198,350,2.802,1019,2.416,1214,2.802,1216,2.541,1217,2.416,1441,3.946,1777,4.508,1778,5.209,1779,5.209,1780,5.209,1781,6.418,1782,4.508,1783,5.209,1784,5.209,1785,5.209]],["title/classes/ScenarioPreview.html",[27,0.098,643,2.389]],["body/classes/ScenarioPreview.html",[3,0.197,4,0.173,9,0.173,11,1.141,24,0.016,26,0.197,27,0.139,35,0.403,100,0.013,101,0.013,106,0.248,107,0.495,110,0.44,113,0.573,115,0.47,116,0.345,117,0.47,118,0.908,119,0.908,121,1.041,407,2.129,569,1.016,630,1.436,633,2.418,643,4.085,847,2.454,923,2.038,925,2.805,926,3.01,929,2.33,1047,2.161,1589,6.178,1786,6.741,1787,3.927,1788,7.138,1789,5.169,1790,4.782,1791,4.782,1792,4.292,1793,4.782]],["title/components/SceneComponent.html",[0,0.098,84,0.594]],["body/components/SceneComponent.html",[0,0.172,1,0.594,2,0.811,3,0.139,4,0.122,5,0.741,6,0.773,7,0.741,8,0.741,9,0.122,16,0.741,17,1.293,18,1.234,19,0.888,21,0.849,23,0.663,24,0.016,25,0.419,26,0.139,27,0.098,29,0.68,30,1.011,31,0.969,32,0.741,33,1.237,34,0.741,35,0.353,36,0.741,37,0.622,38,0.741,39,0.622,40,0.622,41,1.151,42,1.151,43,0.622,44,1.237,45,0.622,46,0.741,47,0.594,48,1.011,49,1.151,50,0.622,51,0.741,52,0.594,53,1.056,54,0.594,55,0.738,56,0.741,57,0.622,58,1.011,59,0.622,60,0.741,61,0.594,62,0.741,63,0.622,64,0.841,65,0.594,66,0.741,67,0.622,68,0.741,69,0.594,70,0.741,71,0.594,72,0.622,73,0.741,74,0.622,75,1.151,76,0.741,77,0.622,78,0.622,79,0.741,80,0.622,81,0.622,82,0.594,83,0.741,84,0.992,85,0.738,86,0.992,87,1.011,88,0.594,89,0.741,90,0.594,91,0.741,92,0.594,93,0.774,94,0.741,95,0.594,96,0.622,97,0.741,98,0.741,99,0.741,100,0.01,101,0.01,106,0.175,107,0.395,110,0.31,113,0.534,115,0.331,116,0.315,117,0.331,118,0.636,119,0.636,121,0.704,126,1.03,127,0.741,128,1.187,129,1.187,285,1.499,299,0.989,317,0.888,338,0.65,344,1.345,368,2.389,373,0.989,405,0.65,442,1.537,443,1.585,489,1.952,490,1.417,500,0.989,538,3.023,539,4.126,574,3.902,575,4.697,576,4.126,630,1.146,662,2.59,758,4.616,770,3.494,771,2.766,1104,2,1107,2.766,1205,2.766,1265,4.473,1310,2.56,1390,4.697,1391,4.725,1392,5.281,1393,5.621,1397,5.232,1398,4.596,1402,3.368,1403,3.368,1404,3.368,1405,3.368,1406,3.368,1407,3.368,1408,3.368,1409,3.368,1410,3.368,1411,3.977,1412,3.774,1413,3.774,1414,3.368,1415,5.232,1416,3.368,1417,4.596,1418,3.368,1419,3.368,1420,3.368,1421,3.368,1422,3.368,1423,3.368,1424,4.596,1425,3.368,1426,4.596,1427,4.596,1428,4.596,1429,3.023,1430,3.368,1431,3.368,1432,3.368,1433,3.023,1434,3.368,1794,3.368,1795,5.31,1796,3.891,1797,3.891,1798,3.891,1799,3.891,1800,3.891,1801,3.891,1802,3.891]],["title/classes/ScenePreview.html",[27,0.098,647,2.389]],["body/classes/ScenePreview.html",[3,0.197,4,0.173,9,0.173,11,1.141,24,0.016,26,0.197,27,0.139,35,0.403,100,0.013,101,0.013,106,0.248,107,0.495,110,0.44,113,0.573,115,0.47,116,0.345,117,0.47,118,0.908,119,0.908,121,1.041,407,2.129,569,1.016,583,5.074,630,1.436,633,2.418,647,4.085,847,2.454,923,2.038,925,2.805,926,3.01,929,2.33,1047,2.161,1787,3.927,1789,5.169,1790,4.782,1791,4.782,1792,4.292,1793,4.782,1803,6.741,1804,7.138]],["title/classes/TaskCreation.html",[27,0.098,661,2.765]],["body/classes/TaskCreation.html",[3,0.201,4,0.176,9,0.176,11,1.15,24,0.016,26,0.201,27,0.142,35,0.405,100,0.013,101,0.013,106,0.252,107,0.501,110,0.448,113,0.567,115,0.479,116,0.342,117,0.479,118,0.893,119,0.893,121,0.988,407,2.168,569,1.139,630,1.609,661,4.781,674,6.227,676,6.227,847,2.481,923,2.076,925,2.836,926,3.034,929,2.373,1047,2.185,1805,4.202,1806,4.871,1807,6.726,1808,5.628,1809,5.628,1810,5.628]],["title/classes/TaskFiles.html",[27,0.098,1391,2.56]],["body/classes/TaskFiles.html",[3,0.199,4,0.174,9,0.174,23,0.474,24,0.016,26,0.199,27,0.141,35,0.364,100,0.013,101,0.013,106,0.25,107,0.498,110,0.444,113,0.553,115,0.569,116,0.333,117,0.569,118,0.801,119,0.801,121,0.985,317,1.118,338,0.932,405,0.932,407,2.148,847,2.467,923,2.057,925,2.821,926,3.022,929,2.351,1047,2.328,1391,5.078,1429,5.568,1433,5.568,1805,4.13,1811,4.826,1812,7.166,1813,5.197,1814,6.689,1815,5.576,1816,6.689,1817,5.576,1818,5.79,1819,5.576,1820,5.576,1821,6.689,1822,6.689,1823,5.576,1824,5.576]],["title/components/TaskHistoryComponent.html",[0,0.098,85,0.541]],["body/components/TaskHistoryComponent.html",[0,0.15,1,0.578,2,0.796,3,0.186,4,0.118,5,0.721,6,0.752,7,0.721,8,0.721,9,0.118,13,1.515,16,0.721,17,1.29,18,1.232,19,0.871,21,0.833,23,0.546,24,0.016,25,0.408,26,0.135,27,0.096,29,0.662,30,0.993,31,0.951,32,0.721,33,1.223,34,0.721,35,0.387,36,0.721,37,0.605,38,0.721,39,0.605,40,0.605,41,1.135,42,1.135,43,0.605,44,1.223,45,0.605,46,0.721,47,0.578,48,0.993,49,1.135,50,0.605,51,0.721,52,0.578,53,1.041,54,0.578,55,0.725,56,0.721,57,0.605,58,0.993,59,0.605,60,0.721,61,0.578,62,0.721,63,0.605,64,1.025,65,0.578,66,0.721,67,0.605,68,0.721,69,0.578,70,0.721,71,0.578,72,0.605,73,0.721,74,0.605,75,1.135,76,0.721,77,0.605,78,0.605,79,0.721,80,0.605,81,0.833,82,0.578,83,0.721,84,0.578,85,0.936,86,1.192,87,0.993,88,0.578,89,0.721,90,0.578,91,0.721,92,0.578,93,0.76,94,0.721,95,0.578,96,0.605,97,0.721,98,0.721,99,0.721,100,0.012,101,0.01,106,0.17,107,0.388,110,0.302,113,0.518,115,0.322,116,0.288,117,0.322,118,0.454,119,0.454,121,0.691,126,1.003,127,0.721,128,0.911,129,0.911,138,1.38,139,1.625,140,2.058,142,2.173,143,1.783,144,1.338,145,1.783,146,1.644,149,1.625,150,1.625,265,4.109,299,0.963,317,0.871,338,0.871,339,1.625,342,1.08,344,0.784,373,0.963,376,4.631,405,1.073,427,1.455,428,1.578,434,1.505,435,1.386,442,1.515,443,1.568,471,1.088,489,1.934,490,1.222,500,0.963,532,2.296,537,2.008,543,2.833,546,1.757,547,1.947,548,1.947,549,1.947,550,2.68,551,2.019,553,1.283,560,2.014,561,2.169,562,1.858,567,1.526,620,2.008,630,1.125,687,2.692,697,2.1,698,3.43,734,2.198,743,2.183,749,2.183,750,1.597,751,2.513,753,3.665,754,2.492,755,2.058,756,2.058,757,2.058,758,4.564,759,3.278,760,2.942,761,4.631,762,4.631,763,3.705,764,4.237,765,4.237,766,3.239,767,5.159,768,2.1,769,5.159,770,3.43,771,2.692,772,3.278,773,3.278,774,2.692,775,2.692,776,3.278,777,2.692,987,2.418,988,2.058,1093,3.43,1148,2.183,1205,2.692,1264,3.705,1273,2.692,1348,2.692,1481,2.942,1825,5.212,1826,3.787,1827,3.787,1828,3.787,1829,3.787,1830,5.212,1831,5.212,1832,5.557,1833,4.511,1834,3.278,1835,3.278,1836,3.278,1837,3.278,1838,2.942,1839,2.942]],["title/components/TaskHistoryComponent-1.html",[0,0.082,85,0.452,620,1.252]],["body/components/TaskHistoryComponent-1.html",[0,0.179,1,0.43,2,0.856,3,0.101,4,0.088,5,0.536,6,0.559,7,0.536,8,0.536,9,0.088,11,0.673,12,0.948,13,1.424,14,4.352,16,0.536,17,1.263,18,1.205,19,0.704,21,0.673,23,0.51,24,0.016,25,0.303,26,0.101,27,0.071,29,0.492,30,0.802,31,0.768,32,0.536,33,1.067,34,0.536,35,0.365,36,0.536,37,0.45,38,0.536,39,0.45,40,0.45,41,0.961,42,0.961,43,0.45,44,1.067,45,0.45,46,0.536,47,0.43,48,0.802,49,0.961,50,0.45,51,0.536,52,0.43,53,0.882,54,0.43,55,0.586,56,0.536,57,0.45,58,0.802,59,0.45,60,0.536,61,0.43,62,0.536,63,0.45,64,0.907,65,0.43,66,0.536,67,0.45,68,0.536,69,0.43,70,0.536,71,0.43,72,0.45,73,0.536,74,0.45,75,0.961,76,0.536,77,0.45,78,0.45,79,0.536,80,0.45,81,0.807,82,0.43,83,0.536,84,0.43,85,0.834,86,1.167,87,0.802,88,0.43,89,0.536,90,0.43,91,0.536,92,0.43,93,0.875,94,0.536,95,0.43,96,0.45,97,0.536,98,0.536,99,0.536,100,0.01,101,0.008,106,0.126,107,0.313,110,0.402,111,1.853,112,2.323,113,0.54,115,0.239,116,0.301,117,0.239,118,0.718,119,0.718,120,2.475,121,0.864,126,0.745,127,0.536,128,0.979,129,0.979,138,1.115,139,1.313,140,1.53,142,2.089,143,1.676,144,0.995,145,1.676,146,1.654,148,1.21,149,1.573,150,1.573,190,1.609,264,3.768,265,4.224,278,1.306,285,2.425,298,1.448,299,1.283,309,3.236,317,0.704,322,1.623,332,1.313,337,1.21,338,1.003,339,1.962,342,0.872,343,1.028,344,0.583,358,1.26,373,0.716,384,1.623,389,1.853,405,1.121,407,1.623,427,1.232,428,1.336,434,1.313,435,1.209,442,1.424,443,1.536,450,1.313,451,1.26,465,4.352,471,0.809,489,1.874,490,1.313,500,0.716,532,2.732,535,2.055,537,2.584,543,1.53,551,1.427,553,0.954,560,1.883,561,1.869,562,1.573,564,0.995,567,1.134,569,0.856,603,1.306,620,1.085,642,1.554,662,1.373,689,2.166,697,2.033,698,3.686,734,1.187,742,1.187,743,1.623,749,1.623,750,1.187,751,2.128,753,3.768,754,1.853,755,1.53,756,1.53,757,1.53,763,2.994,764,3.587,765,3.587,766,2.742,768,2.924,774,2.001,775,2.001,777,2.001,778,2.437,779,1.729,780,2.782,781,3.228,782,2.001,783,2.654,784,4.848,785,3.864,786,3.864,787,3.044,788,2.919,789,4.368,790,4.473,791,3.273,792,4.368,793,2.772,794,4.263,795,4.352,796,2.437,797,2.437,798,4.368,799,2.437,800,2.437,801,2.437,802,2.437,803,3.646,804,3.646,805,3.273,806,2.994,807,4.848,808,2.187,809,2.437,810,2.187,811,2.437,812,2.437,813,2.437,814,2.437,815,4.848,816,2.437,817,4.659,818,4.89,819,4.368,820,3.646,821,3.646,822,4.368,823,2.437,824,2.437,825,2.586,826,3.646,827,3.439,828,4.848,829,3.646,830,3.646,831,3.273,832,3.646,833,2.437,834,2.437,835,2.437,985,2.437,987,1.306,1148,1.623,1264,2.994,1348,2.001,1582,2.994,1838,2.187,1839,2.187,1840,4.212,1841,2.815,1842,2.815,1843,2.815,1844,2.815,1845,2.815,1846,2.815,1847,2.815,1848,2.815,1849,2.815,1850,2.815,1851,2.815,1852,4.212,1853,4.212,1854,4.212,1855,5.601,1856,5.601,1857,4.212,1858,4.212,1859,5.601]],["title/components/TaskHistoryExtendedComponent.html",[0,0.098,88,0.594]],["body/components/TaskHistoryExtendedComponent.html",[0,0.163,1,0.519,2,0.738,3,0.121,4,0.106,5,0.647,6,0.675,7,0.647,8,0.647,9,0.106,11,0.544,12,1.088,13,0.865,16,0.647,17,1.281,18,1.223,19,0.808,21,0.773,23,0.289,24,0.016,25,0.366,26,0.121,27,0.086,29,0.594,30,0.92,31,0.882,32,0.647,33,1.166,34,0.647,35,0.352,36,0.647,37,0.544,38,0.647,39,0.544,40,0.544,41,1.071,42,1.071,43,0.544,44,1.166,45,0.544,46,0.647,47,0.519,48,0.92,49,1.071,50,0.544,51,0.647,52,0.519,53,0.983,54,0.519,55,0.672,56,0.647,57,0.544,58,0.92,59,0.544,60,0.647,61,0.519,62,0.647,63,0.544,64,1.109,65,0.519,66,0.647,67,0.544,68,0.647,69,0.519,70,0.647,71,0.519,72,0.544,73,0.647,74,0.544,75,1.071,76,0.647,77,0.544,78,0.544,79,0.647,80,0.544,81,0.544,82,0.519,83,0.647,84,0.519,85,0.672,86,1.164,87,0.92,88,0.936,89,0.647,90,0.519,91,0.647,92,0.519,93,0.705,94,0.647,95,0.519,96,0.544,97,0.647,98,0.647,99,0.647,100,0.011,101,0.01,106,0.153,107,0.36,113,0.535,116,0.29,118,0.734,119,0.734,121,0.64,128,0.594,129,0.594,138,1.28,139,1.507,142,1.446,143,1.017,144,1.202,145,1.017,146,0.938,149,1.06,150,1.06,264,3.751,267,5.185,317,0.808,332,1.133,338,1.024,339,1.507,342,1.001,365,1.783,405,1.124,427,1.373,428,1.489,434,1.436,435,1.323,471,1.615,543,1.848,546,1.577,547,1.748,548,1.748,549,1.748,550,2.485,551,1.152,560,1.683,561,1.753,562,1.753,567,1.37,569,0.936,619,4.031,620,2.591,630,1.452,642,2.259,689,2.485,699,2.358,701,3.181,734,1.434,750,1.434,751,2.729,753,3.751,755,1.848,756,1.848,757,1.848,761,3.756,762,3.756,766,3.057,768,2.468,779,2.088,780,1.577,783,3.246,785,4.129,786,4.129,788,3.119,790,4.354,805,3.756,827,2.968,836,2.642,837,2.968,838,4.184,839,4.868,840,5.601,841,2.968,842,3.181,843,4.552,844,3.181,845,4.258,846,3.756,847,1.783,848,3.756,849,2.237,850,2.943,851,4.425,852,4.868,853,2.943,854,4.868,855,5.302,856,4.031,857,4.184,858,5.302,979,3.756,980,3.756,982,3.181,983,2.242,984,2.968,987,1.577,988,1.848,1093,3.181,1273,2.417,1481,2.642,1832,4.184,1833,4.184,1834,2.943,1835,2.943,1836,2.943,1837,2.943,1860,4.184,1861,3.4,1862,3.4,1863,3.4,1864,3.4,1865,3.4,1866,3.4,1867,3.4,1868,3.4,1869,3.4,1870,4.834,1871,3.4,1872,3.4]],["title/components/TaskHistoryStatisticsComponent.html",[0,0.098,90,0.594]],["body/components/TaskHistoryStatisticsComponent.html",[0,0.169,1,0.566,2,0.785,3,0.132,4,0.116,5,0.706,6,0.737,7,0.706,8,0.706,9,0.116,11,0.593,12,1.156,13,0.943,16,0.706,17,1.289,18,1.23,19,0.859,21,0.821,23,0.315,24,0.016,25,0.399,26,0.132,27,0.094,29,0.648,30,0.978,31,0.937,32,0.706,33,1.212,34,0.706,35,0.32,36,0.706,37,0.593,38,0.706,39,0.593,40,0.593,41,1.122,42,1.122,43,0.593,44,1.212,45,0.593,46,0.706,47,0.566,48,0.978,49,1.122,50,0.593,51,0.706,52,0.566,53,1.03,54,0.566,55,0.715,56,0.706,57,0.593,58,0.978,59,0.593,60,0.706,61,0.566,62,0.706,63,0.593,64,1.105,65,0.566,66,0.706,67,0.593,68,0.706,69,0.566,70,0.706,71,0.566,72,0.593,73,0.706,74,0.593,75,1.122,76,0.706,77,0.593,78,0.593,79,0.706,80,0.593,81,0.593,82,0.566,83,0.706,84,0.566,85,0.715,86,1.178,87,0.978,88,0.566,89,0.706,90,0.972,91,0.706,92,0.566,93,0.749,94,0.706,95,0.566,96,0.593,97,0.706,98,0.706,99,0.706,100,0.01,101,0.01,106,0.166,107,0.382,113,0.514,116,0.3,118,0.762,119,0.762,121,0.681,128,0.648,129,0.648,138,1.561,139,1.601,142,1.764,143,1.109,145,1.537,146,1.417,147,1.639,148,1.065,149,1.156,150,1.156,264,3.645,269,5.039,298,2.641,317,0.859,332,1.204,338,0.62,339,1.601,342,1.064,405,0.62,427,1.439,435,1.374,471,1.065,553,1.256,560,1.109,564,1.31,567,1.494,568,2.015,569,1.121,630,1.56,642,1.895,697,1.494,730,2.44,742,1.564,750,1.564,751,2.486,753,3.645,755,2.015,756,2.015,757,2.015,766,3.203,768,2.564,779,2.277,780,1.72,783,2.166,785,4.561,786,4.83,827,4.245,837,3.155,841,3.907,859,2.881,860,4.447,861,4.447,862,5.102,863,5.984,864,5.784,865,6.254,866,5.784,867,5.508,868,5.784,869,6.35,870,4.447,871,3.992,872,3.652,873,4.447,874,3.21,875,3.21,876,3.21,877,4.447,878,3.21,879,3.21,920,2.277,922,2.44,1860,4.447,1873,3.708,1874,3.708,1875,3.708,1876,3.708,1877,3.708,1878,3.708,1879,5.137]],["title/classes/TaskNames.html",[27,0.098,1006,2.389]],["body/classes/TaskNames.html",[3,0.209,4,0.183,9,0.183,24,0.016,26,0.209,27,0.148,35,0.41,100,0.014,101,0.014,106,0.262,107,0.512,110,0.466,113,0.544,115,0.497,116,0.328,117,0.497,118,0.824,119,0.824,121,0.912,407,2.252,569,1.051,630,1.485,633,2.476,847,2.538,923,2.156,925,2.901,926,3.083,929,2.465,1006,4.224,1047,2.235,1805,4.101,1880,5.06,1881,6.88,1882,5.846]],["title/classes/TaskPreview.html",[27,0.098,1579,2.765]],["body/classes/TaskPreview.html",[3,0.193,4,0.169,9,0.169,11,1.131,23,0.559,24,0.016,26,0.193,27,0.137,35,0.4,100,0.013,101,0.013,106,0.243,107,0.489,110,0.431,113,0.577,115,0.46,116,0.348,117,0.46,118,0.882,119,0.882,121,0.975,128,1.148,129,1.148,407,2.086,458,4.241,569,1.004,574,3.998,630,1.589,633,2.397,643,4.344,647,4.344,659,4.324,847,2.424,923,1.997,925,2.771,926,2.983,929,2.283,1047,2.135,1579,4.671,1787,3.848,1789,4.206,1792,4.206,1805,4.253,1883,7.075,1884,6.571,1885,5.413,1886,5.413,1887,5.413]],["title/classes/TaskRequest.html",[27,0.098,1411,2.56]],["body/classes/TaskRequest.html",[3,0.209,4,0.183,9,0.183,24,0.016,26,0.209,27,0.148,35,0.318,100,0.014,101,0.014,106,0.262,107,0.512,110,0.466,113,0.544,115,0.497,116,0.328,117,0.497,118,0.824,119,0.824,121,0.912,407,2.252,569,1.051,630,1.485,847,2.538,923,2.156,925,2.901,926,3.083,929,2.465,1047,2.235,1265,4.811,1381,3.847,1383,4.89,1384,4.155,1392,5.68,1411,4.527,1805,4.101]],["title/classes/TaskSessionFinishRequest.html",[27,0.098,1594,2.765]],["body/classes/TaskSessionFinishRequest.html",[3,0.203,4,0.178,9,0.178,24,0.016,26,0.203,27,0.144,35,0.309,100,0.013,101,0.013,106,0.255,107,0.504,110,0.453,113,0.557,115,0.484,116,0.336,117,0.484,118,0.811,119,0.811,120,2.991,128,0.994,129,0.994,339,2.11,407,2.191,471,2.076,569,1.034,630,1.461,768,3.078,780,3.14,847,2.497,923,2.098,925,2.854,926,3.047,929,2.398,1047,2.199,1381,3.742,1383,4.043,1384,4.043,1582,5.431,1594,4.811,1615,6.255,1617,6.255,1772,5.859,1805,4.152]],["title/classes/TaskSessionInfo.html",[27,0.098,781,2.242]],["body/classes/TaskSessionInfo.html",[3,0.194,4,0.17,9,0.17,24,0.016,26,0.194,27,0.137,35,0.295,100,0.013,101,0.013,106,0.244,107,0.49,110,0.433,113,0.578,115,0.462,116,0.348,117,0.462,118,0.849,119,0.849,121,0.976,128,1.238,129,1.238,339,2.052,407,2.093,471,2.035,569,1.006,630,1.422,633,2.4,768,3.155,780,3.417,781,3.795,808,5.505,810,5.505,847,2.429,923,2.003,925,2.776,926,2.988,929,2.29,1047,2.139,1705,4.662,1805,4.256,1888,4.701,1889,7.086,1890,6.584,1891,5.431,1892,5.431,1893,5.431,1894,5.431,1895,5.431]],["title/injectables/TransferService.html",[340,2.114,998,1.719]],["body/injectables/TransferService.html",[2,0.869,3,0.154,4,0.135,9,0.135,11,0.689,23,0.576,24,0.016,25,0.464,26,0.154,27,0.109,35,0.393,55,0.791,81,0.689,93,0.629,100,0.011,101,0.011,103,2.837,106,0.193,107,0.423,110,0.507,113,0.593,115,0.615,116,0.324,117,0.615,118,0.929,119,0.929,121,0.843,148,1.634,299,1.446,317,0.951,338,1.208,339,1.984,340,3.091,341,3.064,344,1.646,345,3.35,373,1.096,399,2.399,405,1.208,490,1.817,998,2.514,1000,4.043,1014,4.248,1015,3.064,1016,3.064,1047,2.581,1214,2.969,1216,2.103,1217,2,1303,4.923,1441,2.343,1896,3.35,1897,3.731,1898,6.366,1899,6.366,1900,6.366,1901,6.366,1902,6.366,1903,6.366,1904,6.366,1905,6.366,1906,6.366,1907,6.366,1908,6.366,1909,6.366,1910,5.688,1911,5.688,1912,5.688,1913,5.688,1914,5.688,1915,5.688,1916,5.688,1917,5.688,1918,4.311,1919,5.688,1920,4.311,1921,5.688,1922,4.311,1923,5.688,1924,4.311,1925,5.688,1926,4.311,1927,5.688,1928,4.311,1929,5.688,1930,4.311,1931,7.795,1932,4.311,1933,5.688,1934,4.311,1935,4.311,1936,5.688,1937,4.311,1938,4.311,1939,5.688,1940,4.311,1941,4.311,1942,5.688,1943,4.311,1944,5.688,1945,4.311,1946,4.311,1947,4.311,1948,4.311,1949,4.311,1950,4.311,1951,4.311,1952,4.311]],["title/classes/UserProfile.html",[27,0.098,1214,1.567]],["body/classes/UserProfile.html",[3,0.19,4,0.166,9,0.166,23,0.452,24,0.016,26,0.19,27,0.134,35,0.289,53,1.226,55,0.976,100,0.013,101,0.013,106,0.238,107,0.483,110,0.423,113,0.58,115,0.452,116,0.35,117,0.452,118,0.926,119,0.926,121,1.047,407,2.047,569,0.992,630,1.402,633,2.377,847,2.396,923,1.959,925,2.739,926,2.959,929,2.24,1047,2.11,1052,4.598,1145,3.813,1214,2.617,1285,3.608,1441,3.813,1630,4.617,1631,4.044,1953,6.801,1954,4.598,1955,6.496,1956,5.312,1957,5.312,1958,5.312,1959,5.312,1960,5.312,1961,5.312]],["title/components/UserProfileComponent.html",[0,0.098,92,0.594]],["body/components/UserProfileComponent.html",[0,0.189,1,0.426,2,0.852,3,0.1,4,0.087,5,0.531,6,0.554,7,0.531,8,0.531,9,0.087,11,0.669,12,0.941,13,1.74,16,0.531,17,1.262,18,1.204,19,0.7,21,0.669,23,0.593,24,0.016,25,0.301,26,0.1,27,0.07,29,0.488,30,0.797,31,0.763,32,0.531,33,1.138,34,0.531,35,0.303,36,0.531,37,0.446,38,0.531,39,0.446,40,0.446,41,0.956,42,0.956,43,0.446,44,1.062,45,0.446,46,0.531,47,0.426,48,0.797,49,0.956,50,0.446,51,0.531,52,0.426,53,0.877,54,0.426,55,0.582,56,0.531,57,0.446,58,0.797,59,0.446,60,0.531,61,0.426,62,0.531,63,0.892,64,0.872,65,0.426,66,0.531,67,0.892,68,1.062,69,0.426,70,0.531,71,0.426,72,0.446,73,0.531,74,0.446,75,1.062,76,0.531,77,0.446,78,0.892,79,0.531,80,0.892,81,1.22,82,0.426,83,0.531,84,0.426,85,0.582,86,0.958,87,0.797,88,0.426,89,0.531,90,0.426,91,0.531,92,0.852,93,1.076,94,0.531,95,0.426,96,0.446,97,1.194,98,0.531,99,0.531,100,0.008,101,0.008,106,0.125,107,0.311,110,0.4,113,0.519,115,0.237,116,0.25,117,0.237,118,0.501,119,0.501,120,1.849,127,0.531,128,0.488,129,0.488,138,1.477,140,1.517,142,2.316,143,2.117,144,2.217,145,1.877,146,1.845,147,1.849,148,1.602,149,1.955,150,1.565,190,1.202,211,5.029,216,0.986,218,1.984,219,3.251,223,1.984,225,1.984,226,2.168,251,1.984,252,2.416,278,1.295,285,1.075,299,1.654,309,2.152,312,2.754,315,2.57,316,2.57,317,0.7,332,1.633,337,1.202,338,1.049,339,1.304,342,0.867,343,1.226,344,0.867,358,1.252,373,0.71,399,2.352,400,1.359,401,1.417,405,1.118,427,1.226,428,1.329,429,2.975,434,1.307,435,1.204,442,1.276,443,1.531,447,1.479,448,1.479,449,1.764,450,1.304,451,1.252,489,1.868,490,0.981,500,0.71,541,1.941,542,2.329,543,1.517,551,1.889,553,1.7,555,1.609,557,1.852,560,2.047,561,2.133,562,1.955,564,1.479,603,2.587,615,4.108,620,1.075,622,1.984,651,3.622,697,2.407,698,3.931,730,1.836,734,2.117,735,2.57,743,1.609,749,1.609,783,1.764,791,5.198,794,2.975,818,2.168,825,2.57,871,3.251,887,3.622,888,3.622,904,3.622,906,3.622,918,1.609,919,1.517,920,2.57,949,3.251,984,3.852,986,2.754,987,1.295,989,1.836,997,2.867,998,2.465,1013,1.435,1031,2.975,1073,1.714,1148,1.609,1164,2.975,1214,2.247,1216,1.361,1217,1.295,1219,2.168,1220,3.569,1351,1.984,1370,1.984,1467,3.622,1482,3.622,1503,3.622,1504,3.622,1505,2.416,1507,2.416,1623,2.416,1698,4.827,1699,4.827,1838,2.168,1839,2.168,1962,5.497,1963,2.416,1964,4.185,1965,5.02,1966,4.185,1967,5.02,1968,5.02,1969,5.577,1970,5.577,1971,5.577,1972,5.577,1973,4.185,1974,2.791,1975,2.791,1976,2.791,1977,2.791,1978,2.791,1979,2.791,1980,2.791,1981,2.791,1982,4.185,1983,2.791,1984,2.791,1985,2.791,1986,2.791,1987,2.791,1988,2.791,1989,2.791,1990,2.791,1991,4.185,1992,4.185,1993,4.185,1994,4.185,1995,4.185,1996,4.185,1997,4.185,1998,5.577,1999,4.185,2000,4.185,2001,4.185,2002,4.185,2003,4.185,2004,4.185,2005,4.185,2006,4.185,2007,4.185,2008,4.185,2009,4.185,2010,4.185,2011,4.185,2012,4.185,2013,4.185,2014,4.185,2015,4.185,2016,4.185,2017,4.185,2018,4.185,2019,4.185,2020,4.185,2021,4.185,2022,4.185,2023,4.185,2024,4.185,2025,3.622,2026,4.185,2027,4.185,2028,4.185,2029,4.185,2030,4.185,2031,4.185,2032,4.185,2033,4.185,2034,2.791,2035,2.791,2036,2.791,2037,3.622,2038,4.185,2039,2.791,2040,2.791]],["title/components/UserSettingsComponent.html",[0,0.098,96,0.622]],["body/components/UserSettingsComponent.html",[0,0.186,1,0.367,2,0.904,3,0.086,4,0.075,5,0.458,6,0.478,7,0.458,8,0.458,9,0.075,11,0.732,13,1.164,15,2.03,16,0.458,17,1.246,18,1.188,19,0.624,21,0.597,23,0.589,24,0.016,25,0.259,26,0.086,27,0.061,29,0.42,30,0.711,31,0.681,32,0.458,33,0.983,34,0.458,35,0.322,36,0.458,37,0.384,38,0.458,39,0.384,40,0.384,41,0.872,42,0.872,43,0.384,44,0.983,45,0.384,46,0.458,47,0.367,48,0.711,49,0.872,50,0.384,51,0.458,52,0.367,53,1.312,54,0.367,55,1.04,56,0.458,57,0.384,58,0.711,59,0.384,60,0.458,61,0.367,62,0.458,63,0.384,64,0.637,65,0.367,66,0.458,67,0.384,68,0.458,69,0.367,70,0.458,71,0.367,72,0.384,73,0.458,74,0.384,75,0.872,76,0.458,77,0.384,78,0.384,79,0.458,80,0.384,81,1.166,82,0.367,83,0.458,84,0.367,85,0.519,86,0.789,87,0.711,88,0.367,89,0.458,90,0.367,91,0.458,92,0.367,93,1.1,94,0.458,95,0.367,96,0.825,97,1.176,98,0.458,99,0.458,100,0.007,101,0.007,106,0.108,107,0.278,110,0.365,112,2.269,113,0.553,115,0.389,116,0.294,117,0.389,118,0.619,119,0.619,121,0.741,126,0.637,127,0.458,128,0.42,129,0.42,134,1.709,138,0.989,139,0.75,142,1.672,143,1.117,144,0.85,145,1.117,146,1.263,147,1.063,148,1.606,149,1.164,150,0.75,190,2.11,193,1.115,200,1.582,202,1.063,203,2.47,216,0.85,235,5.315,299,1.762,301,2.902,302,4.011,308,1.65,311,2.153,317,0.624,322,1.439,324,1.822,332,1.496,337,1.073,338,1.032,342,0.774,343,1.507,344,1.279,350,2.791,358,1.117,365,0.887,373,0.611,384,2.153,386,2.08,393,1.173,397,2.729,399,2.357,400,1.677,401,1.749,403,1.822,405,1.096,413,1.476,414,1.476,424,3.468,427,1.118,428,1.212,433,2.395,434,1.21,435,1.115,437,2.806,438,1.92,440,1.92,441,1.115,442,1.313,443,1.444,444,2.395,445,2.395,447,1.824,448,1.824,449,1.575,450,1.164,451,1.117,452,2.745,453,1.732,467,1.989,468,2.124,469,2.153,471,1.073,476,2.654,477,1.92,478,1.92,479,2.654,480,1.92,481,1.92,482,1.92,483,1.92,484,1.92,485,1.65,486,1.92,487,1.92,488,1.822,489,2.017,490,1.624,495,3.562,500,0.611,501,1.92,502,1.236,506,3.175,507,2.874,509,1.822,522,1.307,523,2.234,526,1.236,528,1.386,529,1.386,530,1.173,531,1.386,532,1.439,533,1.92,535,1.173,537,0.926,540,1.173,544,1.236,545,1.236,551,0.814,553,0.814,557,1.378,560,1.117,561,0.75,562,0.75,564,0.85,565,1.386,566,1.575,567,0.969,568,1.307,569,0.57,628,3.17,633,0.814,642,1.904,697,0.969,699,1.173,742,1.014,787,2.806,788,2.395,847,1.378,983,1.115,990,1.709,991,3.558,992,2.902,997,2.654,998,2.281,1013,1.236,1019,2.745,1024,2.902,1034,2.655,1035,2.293,1036,1.709,1038,4.408,1040,1.709,1041,2.812,1042,1.709,1043,1.476,1047,1.488,1082,2.457,1090,3.397,1104,1.236,1123,2.081,1124,2.081,1145,3.708,1152,3.558,1153,4.838,1154,3.233,1160,3.233,1169,2.457,1172,3.233,1178,2.902,1179,1.582,1183,1.868,1184,1.868,1185,1.868,1188,2.902,1189,1.868,1190,1.868,1191,1.868,1198,3.893,1199,2.655,1214,2.641,1216,1.173,1217,1.115,1285,3.37,1304,1.709,1311,1.709,1314,1.709,1441,3.708,1629,4.468,1630,4.313,1631,3.932,1637,2.081,1644,2.081,1650,2.081,1652,1.868,1654,1.868,1662,3.013,1663,2.081,1664,2.081,1665,2.081,1666,1.868,1667,1.868,1671,2.081,1672,2.081,1673,2.081,1674,2.081,1675,1.868,1676,2.081,1677,1.868,1678,1.868,1705,2.457,1707,2.081,1725,3.963,1754,2.081,1962,5.809,2041,3.735,2042,4.579,2043,3.735,2044,3.735,2045,2.405,2046,2.405,2047,2.405,2048,2.405,2049,2.405,2050,2.405,2051,2.405,2052,2.405,2053,2.405,2054,2.405,2055,2.405,2056,2.405,2057,2.405,2058,2.405,2059,2.405,2060,2.405,2061,2.405,2062,2.405,2063,2.405,2064,2.405,2065,2.405,2066,2.405,2067,2.405,2068,2.405,2069,2.405,2070,2.405,2071,2.405,2072,2.405,2073,2.405,2074,2.405,2075,2.405,2076,2.405,2077,2.405,2078,2.405,2079,2.405,2080,2.405,2081,2.405,2082,2.405]],["title/components/UsersDashboardComponent.html",[0,0.098,95,0.594]],["body/components/UsersDashboardComponent.html",[0,0.179,1,0.429,2,0.854,3,0.1,4,0.088,5,0.535,6,0.558,7,0.535,8,0.535,9,0.088,11,0.958,12,0.946,13,1.422,16,0.535,17,1.263,18,1.205,19,0.703,21,0.672,23,0.603,24,0.016,25,0.302,26,0.1,27,0.071,29,0.49,30,0.8,31,0.767,32,0.535,33,1.065,34,0.535,35,0.354,36,0.535,37,0.449,38,0.535,39,0.672,40,0.449,41,0.959,42,0.959,43,0.449,44,1.065,45,0.449,46,0.535,47,0.429,48,1.475,49,0.959,50,0.449,51,0.535,52,0.429,53,1.139,54,0.429,55,0.585,56,0.535,57,0.449,58,0.8,59,0.449,60,0.535,61,0.429,62,0.535,63,0.449,64,0.701,65,0.429,66,0.535,67,0.449,68,0.535,69,0.429,70,0.535,71,0.429,72,0.449,73,0.535,74,0.449,75,0.959,76,0.535,77,0.449,78,0.449,79,0.535,80,0.449,81,1.005,82,0.429,83,0.535,84,0.429,85,0.585,86,0.854,87,0.8,88,0.429,89,0.535,90,0.429,91,0.535,92,0.429,93,1.104,94,0.535,95,0.854,96,0.672,97,0.535,98,0.535,99,0.535,100,0.008,101,0.008,106,0.126,107,0.313,110,0.401,113,0.557,115,0.476,116,0.322,117,0.476,118,0.753,119,0.753,127,0.535,128,0.734,129,0.734,138,0.743,146,0.774,148,1.207,190,1.606,202,1.241,203,2.647,216,0.992,226,2.181,229,2.181,231,2.181,233,1.847,234,2.181,235,1.995,255,4.955,285,1.082,298,2.876,299,1.281,317,0.703,332,1.473,337,1.207,338,1.12,339,0.875,342,0.871,343,1.462,344,1.043,358,1.257,373,0.714,385,3.265,386,2.253,389,3.68,393,1.369,396,2.181,399,1.772,400,1.817,401,1.895,405,1.146,410,2.181,411,5.505,427,1.23,428,1.334,434,1.181,435,1.208,442,1.281,443,1.535,444,2.595,445,2.595,447,1.976,448,1.976,449,1.772,450,1.31,451,1.257,452,2.916,453,1.95,467,2.422,468,1.95,471,1.207,485,1.857,489,2.225,490,1.606,500,0.714,530,1.369,532,1.619,535,1.369,569,0.77,615,3.434,630,1.447,633,2.27,642,1.55,703,3.914,704,3.265,787,3.04,997,2.876,998,2.472,1013,1.443,1019,1.302,1024,3.265,1037,2.181,1057,2.181,1058,3.638,1059,4.36,1061,4.36,1063,4.36,1065,5.184,1068,3.638,1069,4.841,1070,4.841,1072,4.841,1073,1.724,1074,4.841,1080,3.638,1082,2.765,1083,3.638,1086,5.184,1090,3.68,1092,3.638,1093,4.592,1096,4.36,1097,2.43,1099,2.43,1100,3.638,1101,2.43,1103,4.36,1104,1.443,1105,3.638,1107,1.995,1108,2.43,1112,2.43,1114,3.638,1115,3.638,1133,2.43,1134,2.43,1135,2.43,1136,2.43,1140,2.43,1141,2.43,1142,2.43,1143,3.638,1144,3.638,1145,3.04,1147,3.638,1148,1.618,1214,2.253,1216,1.369,1217,1.302,1285,2.876,1441,3.04,1631,3.224,1705,3.68,1767,2.43,1782,2.43,2083,6.518,2084,5.038,2085,5.038,2086,5.038,2087,4.203,2088,4.203,2089,4.203,2090,2.807,2091,2.807,2092,2.807,2093,2.807,2094,2.807,2095,2.807,2096,2.807,2097,2.807,2098,2.807,2099,2.807,2100,2.807,2101,2.807,2102,2.807,2103,5.593,2104,2.807,2105,2.807,2106,2.807,2107,2.807,2108,2.807,2109,2.807,2110,4.203,2111,2.807,2112,2.807,2113,2.807,2114,2.807,2115,4.203,2116,4.203,2117,4.203,2118,4.203,2119,4.203]],["title/injectables/UtilsService.html",[166,2.114,340,2.114]],["body/injectables/UtilsService.html",[3,0.162,4,0.142,9,0.142,11,1.103,23,0.5,24,0.016,25,0.488,26,0.162,27,0.114,35,0.354,81,0.724,93,0.857,100,0.012,101,0.012,103,2.98,106,0.203,110,0.52,113,0.555,115,0.555,116,0.293,117,0.555,120,2.002,121,1.012,166,3.193,278,2.725,308,3.049,309,3.548,312,3.866,313,5.431,314,5.761,315,4.237,316,4.237,317,1.154,325,4.176,332,1.83,338,1.225,339,2.151,340,3.193,341,3.22,343,1.592,344,1.518,350,3.004,405,0.982,490,1.377,523,2.21,793,3.866,817,4.565,1000,4.176,1019,3.025,1041,4.499,1047,2.537,1164,4.905,1199,4.176,1462,3.92,1476,3.519,1477,3.519,1610,3.92,1693,3.92,1813,5.067,1896,3.519,2120,3.92,2121,5.875,2122,5.875,2123,6.9,2124,6.9,2125,5.875,2126,5.875,2127,4.529,2128,5.875,2129,4.529,2130,5.875,2131,4.529,2132,4.529,2133,4.529,2134,5.875,2135,4.529,2136,5.875,2137,4.529,2138,5.875,2139,4.529,2140,4.529,2141,4.529,2142,4.529,2143,4.529,2144,4.529,2145,4.529,2146,4.529,2147,4.529,2148,4.529,2149,5.875,2150,4.529]],["title/coverage.html",[2151,4.595]],["body/coverage.html",[0,0.203,1,0.56,9,0.115,10,3.173,24,0.016,27,0.194,37,0.586,39,0.586,40,0.586,43,0.586,45,0.586,47,0.56,50,0.586,52,0.56,54,0.56,55,0.51,57,0.586,59,0.586,61,0.56,63,0.586,64,1.002,65,0.56,67,0.586,69,0.56,71,0.56,72,0.586,74,0.586,77,0.586,78,0.586,80,0.586,82,0.56,84,0.56,85,0.709,88,0.56,90,0.56,92,0.56,95,0.56,96,0.586,100,0.01,101,0.01,102,3.173,116,0.164,139,2.147,165,2.412,166,1.992,207,2.412,211,2.606,218,2.606,221,2.606,223,2.606,225,2.606,233,2.412,235,2.606,239,2.412,242,2.606,244,2.606,250,2.412,251,2.606,255,2.412,258,2.412,260,2.849,261,2.606,264,3.542,265,3.65,267,3.623,269,3.623,271,2.606,273,2.606,283,2.606,305,3.354,307,3.173,340,3.184,354,2.849,356,3.173,382,3.173,383,3.173,422,4.165,423,4.165,443,0.895,490,0.859,569,1.241,571,3.96,602,3.173,643,2.251,647,2.251,661,2.606,702,3.173,750,2.67,751,2.67,753,3.705,754,4.167,768,2.053,781,2.113,836,3.96,859,3.96,880,3.173,921,2.938,924,3.173,930,3.96,931,3.173,959,2.606,990,4.165,998,1.62,1006,2.251,1014,2.113,1044,3.173,1045,3.173,1056,4.165,1057,3.96,1093,2.412,1149,3.173,1201,3.173,1214,1.477,1227,3.173,1251,3.173,1257,3.173,1260,2.849,1278,3.173,1308,2.606,1370,2.606,1380,3.173,1381,4.167,1387,3.173,1391,2.412,1411,2.412,1412,3.623,1413,3.623,1435,3.173,1508,4.165,1509,3.173,1546,3.173,1579,2.606,1582,2.606,1594,2.606,1627,3.173,1662,2.412,1708,3.173,1709,3.173,1721,3.173,1749,2.606,1769,3.173,1777,3.173,1786,3.173,1787,4.165,1794,3.173,1803,3.173,1805,3.84,1806,3.173,1811,3.173,1880,3.173,1888,3.173,1897,3.173,1953,3.173,1954,3.173,1962,3.96,1963,3.173,2083,3.173,2120,3.173,2151,3.173,2152,3.666,2153,3.666,2154,3.666,2155,6.889,2156,5.097,2157,5.097,2158,3.666,2159,3.666,2160,7.066,2161,6.889,2162,5.097,2163,3.666,2164,3.666,2165,3.666,2166,3.666,2167,5.097,2168,5.097,2169,5.097,2170,3.666,2171,3.666,2172,5.097,2173,3.666,2174,3.666,2175,3.666,2176,3.666,2177,3.666,2178,5.097,2179,3.666,2180,3.666,2181,3.666,2182,3.666,2183,5.859,2184,3.666,2185,3.666,2186,3.666,2187,3.666,2188,6.332,2189,6.332,2190,6.332,2191,6.414,2192,7.878,2193,4.411,2194,7.878,2195,4.411,2196,4.411,2197,4.411,2198,4.411,2199,4.411,2200,4.411,2201,4.411,2202,6.414,2203,3.666,2204,3.666,2205,3.666,2206,3.173,2207,3.666,2208,3.666,2209,3.666,2210,3.666,2211,3.666,2212,3.666,2213,3.666,2214,3.666]],["title/dependencies.html",[154,3.326,2215,2.524]],["body/dependencies.html",[0,0.169,15,3.041,24,0.016,25,0.603,100,0.013,101,0.013,126,1.482,133,3.682,154,3.977,156,4.347,176,5.802,177,5.208,193,2.595,313,3.977,373,1.423,1053,4.843,1213,4.843,1524,4.843,1813,4.347,1818,4.843,2216,5.595,2217,7.872,2218,5.595,2219,6.703,2220,5.595,2221,5.595,2222,5.595,2223,5.595,2224,5.595,2225,5.595,2226,7.723,2227,5.595,2228,5.595,2229,5.595,2230,5.595,2231,6.703,2232,5.595,2233,6.703,2234,5.595,2235,6.703,2236,5.595,2237,5.595,2238,5.595,2239,5.595,2240,5.595,2241,5.595,2242,5.595,2243,5.595,2244,5.595,2245,5.595,2246,5.595,2247,5.595,2248,5.595,2249,5.595,2250,5.595,2251,5.595,2252,5.595,2253,5.595,2254,5.595,2255,5.595,2256,5.595]],["title/index.html",[106,0.146,641,2.812,1561,2.812]],["body/index.html",[0,0.182,4,0.176,24,0.013,35,0.306,100,0.013,101,0.013,169,3.996,325,5.112,342,1.164,359,5.818,400,2.336,451,2.011,488,3.279,490,1.318,687,3.996,783,2.37,882,4.865,1038,3.699,1264,3.996,1583,5.818,1591,4.865,1761,4.865,2025,4.865,2037,6.691,2215,4.367,2257,5.621,2258,5.621,2259,7.191,2260,4.865,2261,5.621,2262,5.621,2263,7.617,2264,7.815,2265,5.621,2266,5.621,2267,5.621,2268,5.621,2269,5.621,2270,5.621,2271,5.621,2272,5.621,2273,7.191,2274,7.191,2275,5.621,2276,7.451,2277,5.621,2278,5.621,2279,5.621,2280,5.621,2281,7.451,2282,6.722,2283,6.722,2284,5.621,2285,5.621,2286,5.621,2287,5.621,2288,6.722,2289,5.621,2290,5.621,2291,5.621,2292,5.621,2293,5.621,2294,5.621,2295,4.367,2296,5.621]],["title/modules.html",[153,3.494]],["body/modules.html",[24,0.014,100,0.014,101,0.014,152,4.475,153,4.142,164,4.142,177,4.891,311,3.628,2297,6.295,2298,6.295,2299,7.182,2300,6.295]],["title/overview.html",[2295,4.125]],["body/overview.html",[1,1.028,2,0.739,24,0.016,29,0.845,37,1.21,39,1.075,40,1.075,43,1.075,45,1.075,47,1.028,50,1.075,52,1.028,54,1.028,57,1.075,59,1.075,61,1.028,63,1.075,65,1.028,67,1.075,69,1.028,71,1.028,72,1.075,74,1.075,77,1.075,78,1.075,80,1.075,82,1.08,84,1.028,88,1.028,90,1.028,92,1.028,95,1.028,96,1.075,100,0.012,101,0.012,151,3.439,152,5.881,153,3.184,154,3.439,155,4.188,156,3.759,157,4.188,158,3.759,159,4.188,160,4.188,161,4.188,162,4.188,163,4.188,164,4.426,165,4.426,166,3.656,167,5.305,168,4.188,169,3.439,282,3.184,306,3.759,622,4.356,624,3.759,752,3.184,923,1.785,1896,3.759,2295,3.759,2301,4.838,2302,6.129,2303,4.838]],["title/properties.html",[107,0.348,2215,2.524]],["body/properties.html",[24,0.015,100,0.014,101,0.014,107,0.472,2260,5.492,2304,6.345]],["title/routes.html",[282,3.494]],["body/routes.html",[24,0.014,100,0.014,101,0.014,282,4.192]],["title/miscellaneous/variables.html",[872,3.326,2305,2.812]],["body/miscellaneous/variables.html",[24,0.016,31,1.401,100,0.004,101,0.004,106,0.048,116,0.138,118,0.754,119,0.771,121,1.08,128,1.277,129,1.277,133,4.414,277,5.806,278,1.424,285,2.908,339,2.535,557,1.133,620,2.619,872,0.753,1019,3.489,1260,1.461,1376,2.183,1412,2.183,1413,2.183,1456,1.628,2191,0.917,2193,5.381,2195,2.658,2196,2.658,2197,3.368,2198,4.849,2199,3.368,2200,2.658,2201,2.658,2202,0.917,2206,0.917,2305,0.917,2306,6.217,2307,1.06,2308,3.07,2309,1.881,2310,1.881,2311,1.881,2312,1.881,2313,1.881,2314,5.602,2315,1.881,2316,1.881,2317,1.881,2318,1.881,2319,3.07,2320,1.881,2321,6.708,2322,1.881,2323,5.463,2324,5.14,2325,5.463,2326,5.463,2327,3.07,2328,5.843,2329,3.07,2330,1.881,2331,3.07,2332,1.881,2333,3.07,2334,3.07,2335,4.491,2336,1.881,2337,3.891,2338,4.491,2339,3.891,2340,1.881,2341,1.881,2342,1.881,2343,1.881,2344,1.881,2345,1.881,2346,1.881,2347,3.07,2348,1.881,2349,1.881,2350,1.881,2351,1.881,2352,4.491,2353,1.881,2354,3.07,2355,1.881,2356,3.07,2357,1.881,2358,1.881,2359,1.881,2360,1.881,2361,7.522,2362,1.881,2363,7.522,2364,8.132,2365,8.138,2366,7.522,2367,7.13,2368,1.881,2369,5.31,2370,3.891,2371,3.891,2372,3.891,2373,3.07,2374,3.891,2375,3.07,2376,7.522,2377,7.522,2378,1.881,2379,1.881,2380,4.949,2381,4.949,2382,4.949,2383,1.881,2384,3.891,2385,1.881,2386,1.881,2387,6.708,2388,6.708,2389,1.881,2390,1.881,2391,1.881,2392,1.881,2393,1.881,2394,1.881,2395,1.881,2396,1.881,2397,1.881,2398,1.881,2399,1.881,2400,1.881,2401,1.881,2402,3.07,2403,1.881,2404,1.881,2405,1.881,2406,1.881,2407,1.881,2408,1.06,2409,1.881,2410,1.881,2411,1.881,2412,1.06,2413,1.881,2414,1.881,2415,1.06,2416,1.881,2417,1.881,2418,1.06,2419,1.06,2420,1.06,2421,1.06,2422,1.06,2423,1.881,2424,1.881,2425,1.06,2426,1.06,2427,1.06,2428,1.06,2429,1.06,2430,1.06,2431,1.06,2432,1.06,2433,1.06,2434,1.06,2435,1.06,2436,1.06,2437,1.06,2438,1.06,2439,1.06,2440,1.06,2441,1.06,2442,1.06,2443,1.06,2444,1.06,2445,1.06,2446,1.06,2447,1.06,2448,1.06]]],"invertedIndex":[["",{"_index":24,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"guards/RoleGuard.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":569,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/ScenarioPreview.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"classes/UserProfile.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{}}}],["0.0.0",{"_index":2304,"title":{},"body":{"properties.html":{}}}],["0.01",{"_index":2319,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.012",{"_index":2318,"title":{},"body":{"miscellaneous/variables.html":{}}}],["0.03",{"_index":1484,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.1",{"_index":988,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTasksComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["0.1.3",{"_index":2234,"title":{},"body":{"dependencies.html":{}}}],["0.115.0",{"_index":2249,"title":{},"body":{"dependencies.html":{}}}],["0.12.0",{"_index":2256,"title":{},"body":{"dependencies.html":{}}}],["0.2",{"_index":741,"title":{},"body":{"components/DashboardComponent.html":{}}}],["0.2rem",{"_index":552,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{}}}],["0.3rem",{"_index":1623,"title":{},"body":{"components/PreviewTasksComponent.html":{},"components/UserProfileComponent.html":{}}}],["0.5px",{"_index":547,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["0.5rem",{"_index":543,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/UserProfileComponent.html":{}}}],["0.6",{"_index":545,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/FooterComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["0.7",{"_index":1501,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0.7.0",{"_index":2225,"title":{},"body":{"dependencies.html":{}}}],["0.7rem",{"_index":919,"title":{},"body":{"components/FooterComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{}}}],["0.8rem",{"_index":1360,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["0/1",{"_index":2194,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":2207,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":2174,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":2155,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":2189,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":2183,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":2188,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":2190,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":2208,"title":{},"body":{"coverage.html":{}}}],["048tuke",{"_index":902,"title":{},"body":{"components/FooterComponent.html":{}}}],["0px",{"_index":1483,"title":{},"body":{"components/NavbarComponent.html":{}}}],["0rem",{"_index":1349,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["1",{"_index":620,"title":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}},"body":{"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt-2.html":{},"components/GroupSessionsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/HistoryQuizComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/UserProfileComponent.html":{},"miscellaneous/variables.html":{}}}],["1.1.0",{"_index":2229,"title":{},"body":{"dependencies.html":{}}}],["1.1rem",{"_index":1497,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1.2rem",{"_index":1487,"title":{},"body":{"components/NavbarComponent.html":{}}}],["1.3rem",{"_index":1272,"title":{},"body":{"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTasksComponent.html":{},"components/RegistrationComponent.html":{}}}],["1.4.1",{"_index":2227,"title":{},"body":{"dependencies.html":{}}}],["1.5rem",{"_index":566,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["1.6rem",{"_index":2040,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["1.7.0",{"_index":2239,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":2156,"title":{},"body":{"coverage.html":{}}}],["1/20",{"_index":2211,"title":{},"body":{"coverage.html":{}}}],["1/4",{"_index":2159,"title":{},"body":{"coverage.html":{}}}],["1/6",{"_index":2187,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":846,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/NavbarComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["10.0.0",{"_index":2241,"title":{},"body":{"dependencies.html":{}}}],["10/11",{"_index":2161,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":139,"title":{},"body":{"components/AppComponent.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserSettingsComponent.html":{},"coverage.html":{}}}],["1000",{"_index":817,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{},"injectables/UtilsService.html":{}}}],["100vh",{"_index":141,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["100vw",{"_index":1499,"title":{},"body":{"components/NavbarComponent.html":{}}}],["10px",{"_index":1350,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{}}}],["11.5",{"_index":2424,"title":{},"body":{"miscellaneous/variables.html":{}}}],["12/13",{"_index":2179,"title":{},"body":{"coverage.html":{}}}],["12/15",{"_index":2171,"title":{},"body":{"coverage.html":{}}}],["13/14",{"_index":2185,"title":{},"body":{"coverage.html":{}}}],["13/15",{"_index":2168,"title":{},"body":{"coverage.html":{}}}],["13rem",{"_index":1364,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["14/15",{"_index":2204,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":2302,"title":{},"body":{"overview.html":{}}}],["15.0.0",{"_index":2217,"title":{},"body":{"dependencies.html":{}}}],["15.0.4",{"_index":2261,"title":{},"body":{"index.html":{}}}],["15.1.1",{"_index":2219,"title":{},"body":{"dependencies.html":{}}}],["15px",{"_index":744,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["16",{"_index":2186,"title":{},"body":{"coverage.html":{}}}],["16.525",{"_index":2410,"title":{},"body":{"miscellaneous/variables.html":{}}}],["17/18",{"_index":2205,"title":{},"body":{"coverage.html":{}}}],["18.35",{"_index":2423,"title":{},"body":{"miscellaneous/variables.html":{}}}],["18/19",{"_index":2170,"title":{},"body":{"coverage.html":{}}}],["18px",{"_index":1378,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["19/20",{"_index":2163,"title":{},"body":{"coverage.html":{}}}],["1rem",{"_index":564,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{}}}],["2",{"_index":622,"title":{"interfaces/FiringAttempt-2.html":{}},"body":{"components/CreateTaskComponent.html":{},"components/UserProfileComponent.html":{},"overview.html":{}}}],["2.1.5",{"_index":2254,"title":{},"body":{"dependencies.html":{}}}],["2.285",{"_index":2335,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.3.0",{"_index":2251,"title":{},"body":{"dependencies.html":{}}}],["2.507",{"_index":2411,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2.71779",{"_index":2331,"title":{},"body":{"miscellaneous/variables.html":{}}}],["20.219",{"_index":2409,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2000",{"_index":2351,"title":{},"body":{"miscellaneous/variables.html":{}}}],["200px",{"_index":733,"title":{},"body":{"components/DashboardComponent.html":{}}}],["2022",{"_index":894,"title":{},"body":{"components/FooterComponent.html":{}}}],["20px",{"_index":748,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{}}}],["20vw",{"_index":568,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["22.51704",{"_index":2373,"title":{},"body":{"miscellaneous/variables.html":{}}}],["22/23",{"_index":2177,"title":{},"body":{"coverage.html":{}}}],["25",{"_index":2158,"title":{},"body":{"coverage.html":{}}}],["250px",{"_index":694,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["25vw",{"_index":1353,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{}}}],["28/28",{"_index":2210,"title":{},"body":{"coverage.html":{}}}],["29.025",{"_index":2414,"title":{},"body":{"miscellaneous/variables.html":{}}}],["2rem",{"_index":150,"title":{},"body":{"components/AppComponent.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{}}}],["3",{"_index":624,"title":{"interfaces/FiringAttempt-3.html":{}},"body":{"components/CreateTaskComponent.html":{},"overview.html":{}}}],["3.0.4",{"_index":2247,"title":{},"body":{"dependencies.html":{}}}],["3.1.2",{"_index":2244,"title":{},"body":{"dependencies.html":{}}}],["3.819",{"_index":2327,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3.933",{"_index":2374,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3/3",{"_index":2157,"title":{},"body":{"coverage.html":{}}}],["3/6",{"_index":2166,"title":{},"body":{"coverage.html":{}}}],["30",{"_index":550,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["3000",{"_index":1144,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["30px",{"_index":1368,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["32",{"_index":2301,"title":{},"body":{"overview.html":{}}}],["32.698",{"_index":2413,"title":{},"body":{"miscellaneous/variables.html":{}}}],["32min",{"_index":1830,"title":{},"body":{"components/TaskHistoryComponent.html":{}}}],["350px",{"_index":693,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["36c991",{"_index":2341,"title":{},"body":{"miscellaneous/variables.html":{}}}],["3rem",{"_index":555,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{}}}],["4",{"_index":2303,"title":{},"body":{"overview.html":{}}}],["4.0.1",{"_index":2235,"title":{},"body":{"dependencies.html":{}}}],["4.1.1",{"_index":2230,"title":{},"body":{"dependencies.html":{}}}],["4/2022",{"_index":903,"title":{},"body":{"components/FooterComponent.html":{}}}],["400",{"_index":526,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["400ms",{"_index":1491,"title":{},"body":{"components/NavbarComponent.html":{}}}],["400px",{"_index":1625,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["401",{"_index":1331,"title":{},"body":{"components/LoginComponent.html":{}}}],["403",{"_index":1332,"title":{},"body":{"components/LoginComponent.html":{}}}],["44953d",{"_index":558,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{}}}],["45sec",{"_index":1831,"title":{},"body":{"components/TaskHistoryComponent.html":{}}}],["4px",{"_index":738,"title":{},"body":{"components/DashboardComponent.html":{}}}],["4rem",{"_index":2034,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["5",{"_index":959,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"coverage.html":{}}}],["5.049",{"_index":2328,"title":{},"body":{"miscellaneous/variables.html":{}}}],["5.2.3",{"_index":2242,"title":{},"body":{"dependencies.html":{}}}],["5.80505",{"_index":2375,"title":{},"body":{"miscellaneous/variables.html":{}}}],["50",{"_index":2165,"title":{},"body":{"coverage.html":{}}}],["5000",{"_index":533,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["500px",{"_index":1624,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["50px",{"_index":1358,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["5rem",{"_index":1839,"title":{},"body":{"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{}}}],["6.0.3",{"_index":2243,"title":{},"body":{"dependencies.html":{}}}],["6.1.1",{"_index":2232,"title":{},"body":{"dependencies.html":{}}}],["6/7",{"_index":2176,"title":{},"body":{"coverage.html":{}}}],["6/8",{"_index":2173,"title":{},"body":{"coverage.html":{}}}],["60",{"_index":818,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{}}}],["600",{"_index":1488,"title":{},"body":{"components/NavbarComponent.html":{}}}],["60vw",{"_index":1506,"title":{},"body":{"components/NavbarComponent.html":{}}}],["7.429",{"_index":2329,"title":{},"body":{"miscellaneous/variables.html":{}}}],["7.5.0",{"_index":2245,"title":{},"body":{"dependencies.html":{}}}],["7/7",{"_index":2184,"title":{},"body":{"coverage.html":{}}}],["7/8",{"_index":2213,"title":{},"body":{"coverage.html":{}}}],["70",{"_index":1148,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/JoinQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["700",{"_index":1276,"title":{},"body":{"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTasksComponent.html":{},"components/RegistrationComponent.html":{}}}],["75",{"_index":2172,"title":{},"body":{"coverage.html":{}}}],["8",{"_index":1822,"title":{},"body":{"classes/TaskFiles.html":{}}}],["8/10",{"_index":2164,"title":{},"body":{"coverage.html":{}}}],["80",{"_index":921,"title":{},"body":{"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{},"coverage.html":{}}}],["800px",{"_index":1507,"title":{},"body":{"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{}}}],["81",{"_index":2180,"title":{},"body":{"coverage.html":{}}}],["85",{"_index":1370,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["86",{"_index":2167,"title":{},"body":{"coverage.html":{}}}],["87",{"_index":2212,"title":{},"body":{"coverage.html":{}}}],["8px",{"_index":739,"title":{},"body":{"components/DashboardComponent.html":{}}}],["9",{"_index":1500,"title":{},"body":{"components/NavbarComponent.html":{}}}],["9/10",{"_index":2182,"title":{},"body":{"coverage.html":{}}}],["9/11",{"_index":2181,"title":{},"body":{"coverage.html":{}}}],["9/12",{"_index":2175,"title":{},"body":{"coverage.html":{}}}],["90",{"_index":2160,"title":{},"body":{"coverage.html":{}}}],["900px",{"_index":1505,"title":{},"body":{"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{}}}],["92",{"_index":2178,"title":{},"body":{"coverage.html":{}}}],["93",{"_index":2203,"title":{},"body":{"coverage.html":{}}}],["94",{"_index":2169,"title":{},"body":{"coverage.html":{}}}],["95",{"_index":2162,"title":{},"body":{"coverage.html":{}}}],["_client",{"_index":442,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["_dialog",{"_index":1074,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["_groups",{"_index":2042,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["_route",{"_index":770,"title":{},"body":{"interfaces/FiringAttempt.html":{},"components/GroupsPreviewComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{}}}],["_router",{"_index":321,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/DashboardComponent.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTasksComponent.html":{},"components/RegistrationComponent.html":{}}}],["_snackbar",{"_index":444,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["_tasks",{"_index":993,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{}}}],["_transfer",{"_index":997,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["_utils",{"_index":319,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["a:hover",{"_index":1495,"title":{},"body":{"components/NavbarComponent.html":{}}}],["ability",{"_index":1547,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["about'},{'name",{"_index":36,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["about.component.css",{"_index":20,"title":{},"body":{"components/AboutComponent.html":{}}}],["about.component.html",{"_index":22,"title":{},"body":{"components/AboutComponent.html":{}}}],["aboutcomponent",{"_index":1,"title":{"components/AboutComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["absolute",{"_index":1377,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["accept",{"_index":387,"title":{},"body":{"components/ConfirmationDialog.html":{}}}],["accessors",{"_index":440,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["account",{"_index":1347,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["action",{"_index":755,"title":{},"body":{"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["actionfound",{"_index":756,"title":{},"body":{"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["actions",{"_index":389,"title":{},"body":{"components/ConfirmationDialog.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupsDashboardComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UsersDashboardComponent.html":{}}}],["actiontargets",{"_index":757,"title":{},"body":{"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["activated",{"_index":334,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["activatedroute",{"_index":758,"title":{},"body":{"interfaces/FiringAttempt.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{}}}],["activatedroutesnapshot",{"_index":327,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["active",{"_index":556,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{}}}],["actual_component",{"_index":99,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["adam",{"_index":890,"title":{},"body":{"components/FooterComponent.html":{}}}],["add",{"_index":687,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt.html":{},"components/TaskHistoryComponent.html":{},"index.html":{}}}],["additional",{"_index":632,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["address",{"_index":1345,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{}}}],["admin",{"_index":301,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupsModificationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["admin_id",{"_index":2105,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["admins",{"_index":2041,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["aframe",{"_index":2226,"title":{},"body":{"dependencies.html":{}}}],["align",{"_index":561,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{}}}],["already",{"_index":793,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/PreviewTasksComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent-1.html":{},"injectables/UtilsService.html":{}}}],["amount",{"_index":863,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["angular",{"_index":400,"title":{},"body":{"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"index.html":{}}}],["angular/animations",{"_index":2216,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":2218,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":2220,"title":{},"body":{"dependencies.html":{}}}],["angular/common/http",{"_index":200,"title":{},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["angular/compiler",{"_index":2221,"title":{},"body":{"dependencies.html":{}}}],["angular/core",{"_index":25,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"injectables/TransferService.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{},"dependencies.html":{}}}],["angular/forms",{"_index":193,"title":{},"body":{"modules/AppModule.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{},"dependencies.html":{}}}],["angular/material",{"_index":2222,"title":{},"body":{"dependencies.html":{}}}],["angular/material/button",{"_index":205,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/card",{"_index":197,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/checkbox",{"_index":247,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/dialog",{"_index":216,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["angular/material/form",{"_index":189,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/icon",{"_index":214,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/input",{"_index":195,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/paginator",{"_index":231,"title":{},"body":{"modules/AppModule.html":{},"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["angular/material/radio",{"_index":249,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/select",{"_index":237,"title":{},"body":{"modules/AppModule.html":{}}}],["angular/material/snack",{"_index":202,"title":{},"body":{"modules/AppModule.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["angular/material/table",{"_index":229,"title":{},"body":{"modules/AppModule.html":{},"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["angular/platform",{"_index":176,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/router",{"_index":126,"title":{},"body":{"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserSettingsComponent.html":{},"dependencies.html":{}}}],["animation",{"_index":1490,"title":{},"body":{"components/NavbarComponent.html":{}}}],["another",{"_index":1081,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["api_url",{"_index":360,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["app",{"_index":18,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["app.component",{"_index":179,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":104,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":105,"title":{},"body":{"components/AppComponent.html":{}}}],["appcomponent",{"_index":37,"title":{"components/AppComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["application",{"_index":882,"title":{},"body":{"components/FooterComponent.html":{},"index.html":{}}}],["appmodule",{"_index":152,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approutingmodule",{"_index":164,"title":{"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["artifacts",{"_index":2277,"title":{},"body":{"index.html":{}}}],["assigned",{"_index":2027,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["attach",{"_index":1426,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["attempts",{"_index":786,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["authguard",{"_index":207,"title":{"guards/AuthGuard.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"coverage.html":{}}}],["authinterceptor",{"_index":165,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"modules/AppModule.html":{},"interceptors/AuthInterceptor.html":{},"coverage.html":{},"overview.html":{}}}],["authorization",{"_index":380,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["auto",{"_index":922,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["autocomplete",{"_index":1160,"title":{},"body":{"components/GroupsModificationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["autocompletegroups",{"_index":1154,"title":{},"body":{"components/GroupsModificationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["autocompletegroups(group",{"_index":1157,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["autocompletegroups(profile",{"_index":2044,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["autocompletes",{"_index":1159,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["automatically",{"_index":2269,"title":{},"body":{"index.html":{}}}],["available",{"_index":311,"title":{},"body":{"guards/AuthGuard.html":{},"components/CreateTaskComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/PreviewTasksComponent.html":{},"guards/RoleGuard.html":{},"components/UserSettingsComponent.html":{},"modules.html":{}}}],["babel",{"_index":2236,"title":{},"body":{"dependencies.html":{}}}],["babelify",{"_index":2240,"title":{},"body":{"dependencies.html":{}}}],["back",{"_index":949,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/UserProfileComponent.html":{}}}],["backendservice",{"_index":443,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{}}}],["background",{"_index":735,"title":{},"body":{"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{}}}],["bar",{"_index":203,"title":{},"body":{"modules/AppModule.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["bars",{"_index":453,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["base64",{"_index":1526,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["base64').tostring('utf",{"_index":1821,"title":{},"body":{"classes/TaskFiles.html":{}}}],["based",{"_index":335,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["basic",{"_index":860,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["belongs",{"_index":946,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["between",{"_index":148,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryStatisticsComponent.html":{},"injectables/TransferService.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["black",{"_index":563,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/NavbarComponent.html":{}}}],["block",{"_index":745,"title":{},"body":{"components/DashboardComponent.html":{},"components/NavbarComponent.html":{}}}],["blue",{"_index":1374,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["boldtext",{"_index":1356,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["boolean",{"_index":339,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/GroupsDashboardComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"components/UserProfileComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":156,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["border",{"_index":546,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTasksComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["bottom",{"_index":987,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/UserProfileComponent.html":{}}}],["box",{"_index":692,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/RegistrationComponent.html":{}}}],["break",{"_index":1131,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["browse",{"_index":2299,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":177,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browser/animations",{"_index":187,"title":{},"body":{"modules/AppModule.html":{}}}],["browseranimationsmodule",{"_index":186,"title":{},"body":{"modules/AppModule.html":{}}}],["browsermodule",{"_index":175,"title":{},"body":{"modules/AppModule.html":{}}}],["buffer",{"_index":1818,"title":{},"body":{"classes/TaskFiles.html":{},"dependencies.html":{}}}],["buffer.from(taskfiles.languagefile",{"_index":1824,"title":{},"body":{"classes/TaskFiles.html":{}}}],["buffer.from(taskfiles.pnmlfile",{"_index":1820,"title":{},"body":{"classes/TaskFiles.html":{}}}],["build",{"_index":2276,"title":{},"body":{"index.html":{}}}],["button",{"_index":701,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["buttons",{"_index":985,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/TaskHistoryComponent-1.html":{}}}],["canactivate",{"_index":292,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["canactivate(route",{"_index":326,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["cancel",{"_index":406,"title":{},"body":{"components/ConfirmationDialog.html":{},"components/PreviewTasksComponent.html":{}}}],["cancelbuttontext",{"_index":391,"title":{},"body":{"components/ConfirmationDialog.html":{}}}],["canceltask",{"_index":1554,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["canceltask(i",{"_index":1559,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["cancollapse",{"_index":1443,"title":{},"body":{"components/NavbarComponent.html":{}}}],["capabilities",{"_index":2292,"title":{},"body":{"index.html":{}}}],["card",{"_index":730,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{}}}],["catch",{"_index":2145,"title":{},"body":{"injectables/UtilsService.html":{}}}],["cause",{"_index":1290,"title":{},"body":{"components/LoginComponent.html":{}}}],["center",{"_index":560,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{}}}],["change",{"_index":1038,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{},"index.html":{}}}],["change_status",{"_index":828,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["changecreatedgroup",{"_index":1910,"title":{},"body":{"injectables/TransferService.html":{}}}],["changecreatedgroup(group",{"_index":1917,"title":{},"body":{"injectables/TransferService.html":{}}}],["changed",{"_index":1338,"title":{},"body":{"components/LoginComponent.html":{}}}],["changed.\\nconfirm",{"_index":1336,"title":{},"body":{"components/LoginComponent.html":{}}}],["changed.\\nyou",{"_index":1339,"title":{},"body":{"components/LoginComponent.html":{}}}],["changedlanguage",{"_index":1572,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["changeprofile",{"_index":1911,"title":{},"body":{"injectables/TransferService.html":{}}}],["changeprofile(profile",{"_index":1919,"title":{},"body":{"injectables/TransferService.html":{}}}],["changerole",{"_index":1912,"title":{},"body":{"injectables/TransferService.html":{}}}],["changerole(role",{"_index":1921,"title":{},"body":{"injectables/TransferService.html":{}}}],["changes",{"_index":825,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/LoginComponent.html":{},"components/PreviewTasksComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{}}}],["changestatus",{"_index":1913,"title":{},"body":{"injectables/TransferService.html":{}}}],["changestatus(islogged",{"_index":1923,"title":{},"body":{"injectables/TransferService.html":{}}}],["changeupdatedgroup",{"_index":1914,"title":{},"body":{"injectables/TransferService.html":{}}}],["changeupdatedgroup(group",{"_index":1925,"title":{},"body":{"injectables/TransferService.html":{}}}],["changeupdateduser",{"_index":1915,"title":{},"body":{"injectables/TransferService.html":{}}}],["changeupdateduser(user",{"_index":1927,"title":{},"body":{"injectables/TransferService.html":{}}}],["changing",{"_index":1291,"title":{},"body":{"components/LoginComponent.html":{}}}],["check",{"_index":2294,"title":{},"body":{"index.html":{}}}],["checkprofileupdate",{"_index":1283,"title":{},"body":{"components/LoginComponent.html":{}}}],["checks",{"_index":333,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"guards/RoleGuard.html":{}}}],["choice",{"_index":2287,"title":{},"body":{"index.html":{}}}],["choose",{"_index":651,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/UserProfileComponent.html":{}}}],["chooses",{"_index":462,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{}}}],["chose",{"_index":1574,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["chosen",{"_index":464,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["class",{"_index":27,"title":{"classes/Group.html":{},"classes/GroupTasks.html":{},"classes/LoginRequest.html":{},"classes/ProfileUpdate.html":{},"classes/RegistrationRequest.html":{},"classes/ScenarioPreview.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"classes/UserProfile.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"guards/RoleGuard.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["classes",{"_index":923,"title":{},"body":{"classes/Group.html":{},"classes/GroupTasks.html":{},"classes/LoginRequest.html":{},"classes/ProfileUpdate.html":{},"classes/RegistrationRequest.html":{},"classes/ScenarioPreview.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"classes/UserProfile.html":{},"overview.html":{}}}],["clear",{"_index":1645,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["cli",{"_index":2259,"title":{},"body":{"index.html":{}}}],["close",{"_index":537,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserSettingsComponent.html":{}}}],["closecreate",{"_index":570,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{}}}],["closedialog",{"_index":433,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["closegroup",{"_index":1200,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["closeprofile",{"_index":1707,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["closes",{"_index":403,"title":{},"body":{"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupsModificationComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["closeselect",{"_index":1277,"title":{},"body":{"components/JoinQuizComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["closetasks",{"_index":1250,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["cluster_appmodule",{"_index":159,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":162,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declarations",{"_index":160,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":161,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":163,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":2271,"title":{},"body":{"index.html":{}}}],["col",{"_index":1359,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["collapse",{"_index":1439,"title":{},"body":{"components/NavbarComponent.html":{}}}],["collection",{"_index":478,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["color",{"_index":557,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"miscellaneous/variables.html":{}}}],["colortext",{"_index":1274,"title":{},"body":{"components/JoinQuizComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["column",{"_index":144,"title":{},"body":{"components/AppComponent.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{}}}],["columns",{"_index":1100,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["command",{"_index":2288,"title":{},"body":{"index.html":{}}}],["complete",{"_index":1031,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{}}}],["completed",{"_index":784,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["component",{"_index":0,"title":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{}}}],["component_template",{"_index":34,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["components",{"_index":2,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"injectables/TransferService.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"overview.html":{}}}],["components/about/about.component",{"_index":182,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/auth/auth.guard",{"_index":208,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/auth/auth.interceptor",{"_index":209,"title":{},"body":{"modules/AppModule.html":{}}}],["components/auth/role.guard",{"_index":284,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["components/create",{"_index":220,"title":{},"body":{"modules/AppModule.html":{}}}],["components/dashboard/dashboard.component",{"_index":227,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/dialogs/confirmation",{"_index":232,"title":{},"body":{"modules/AppModule.html":{}}}],["components/footer/footer.component",{"_index":185,"title":{},"body":{"modules/AppModule.html":{}}}],["components/group",{"_index":259,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/groups",{"_index":257,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/history",{"_index":222,"title":{},"body":{"modules/AppModule.html":{}}}],["components/home/home.component",{"_index":181,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/join",{"_index":217,"title":{},"body":{"modules/AppModule.html":{}}}],["components/login/login.component",{"_index":183,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/navbar/navbar.component",{"_index":180,"title":{},"body":{"modules/AppModule.html":{}}}],["components/preview",{"_index":238,"title":{},"body":{"modules/AppModule.html":{}}}],["components/profile",{"_index":224,"title":{},"body":{"modules/AppModule.html":{}}}],["components/registration/registration.component",{"_index":184,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/task",{"_index":263,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/tasks/scenes/muzeum_extended/scene.component",{"_index":241,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/tasks/scenes/muzeum_habsbourg/muzeum_habsbourg.component",{"_index":253,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/user",{"_index":210,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["components/users",{"_index":254,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["confirm",{"_index":404,"title":{},"body":{"components/ConfirmationDialog.html":{},"components/RegistrationComponent.html":{}}}],["confirmation",{"_index":385,"title":{},"body":{"components/ConfirmationDialog.html":{},"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["confirmation.dialog.component.html",{"_index":390,"title":{},"body":{"components/ConfirmationDialog.html":{}}}],["confirmation_dialog_subscription",{"_index":1059,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["confirmationdialog",{"_index":39,"title":{"components/ConfirmationDialog.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["confirmationentity",{"_index":2338,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmationentity.emit('success",{"_index":2345,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmationentity.emit('unsuccess",{"_index":2346,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmationentity.setattribute('material",{"_index":2340,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmationentity.setattribute('text",{"_index":2342,"title":{},"body":{"miscellaneous/variables.html":{}}}],["confirmbuttontext",{"_index":392,"title":{},"body":{"components/ConfirmationDialog.html":{}}}],["confirmed",{"_index":1136,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["confirmpassword",{"_index":1728,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["console.log(profile.groups",{"_index":2066,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["console.log(request",{"_index":1802,"title":{},"body":{"components/SceneComponent.html":{}}}],["console.log(request.tasksessionid",{"_index":1620,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["console.log(tokeninfo.exp",{"_index":2148,"title":{},"body":{"injectables/UtilsService.html":{}}}],["const",{"_index":285,"title":{},"body":{"modules/AppRoutingModule.html":{},"interceptors/AuthInterceptor.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupsDashboardComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{},"components/UsersDashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":1261,"title":{},"body":{"components/JoinQuizComponent.html":{}}}],["constructor",{"_index":110,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt-1.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"guards/RoleGuard.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{}}}],["constructor(@inject(mat_dialog_data",{"_index":415,"title":{},"body":{"components/ConfirmationDialog.html":{}}}],["constructor(_client",{"_index":1073,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["constructor(_route",{"_index":1205,"title":{},"body":{"components/GroupsPreviewComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{}}}],["constructor(_router",{"_index":318,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/GroupSessionsComponent.html":{}}}],["constructor(data",{"_index":395,"title":{},"body":{"components/ConfirmationDialog.html":{}}}],["constructor(email",{"_index":1382,"title":{},"body":{"classes/LoginRequest.html":{}}}],["constructor(init",{"_index":925,"title":{},"body":{"classes/Group.html":{},"classes/GroupTasks.html":{},"classes/ProfileUpdate.html":{},"classes/ScenarioPreview.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"classes/UserProfile.html":{}}}],["constructor(matdialog",{"_index":711,"title":{},"body":{"components/DashboardComponent.html":{}}}],["constructor(matdialogref",{"_index":441,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["constructor(nickname",{"_index":1770,"title":{},"body":{"classes/RegistrationRequest.html":{}}}],["constructor(private",{"_index":127,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["constructor(router",{"_index":111,"title":{},"body":{"components/AppComponent.html":{},"components/GroupSettingsComponent.html":{},"components/NavbarComponent.html":{},"guards/RoleGuard.html":{},"components/TaskHistoryComponent-1.html":{}}}],["container",{"_index":1348,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{}}}],["containing",{"_index":2121,"title":{},"body":{"injectables/UtilsService.html":{}}}],["contains",{"_index":465,"title":{},"body":{"components/CreateQuizComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["content",{"_index":146,"title":{},"body":{"components/AppComponent.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["continue",{"_index":1565,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["continuetask",{"_index":1555,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["continuetask(i",{"_index":1563,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["controls",{"_index":479,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["convenient",{"_index":483,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["convert",{"_index":1522,"title":{},"body":{"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{}}}],["copyright",{"_index":885,"title":{},"body":{"components/FooterComponent.html":{}}}],["correct",{"_index":865,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["correctattempts",{"_index":866,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["count",{"_index":803,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["countduration",{"_index":807,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["counts",{"_index":870,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["cover",{"_index":2036,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["coverage",{"_index":2151,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["create",{"_index":41,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["create_group_subscription",{"_index":994,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["created",{"_index":645,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{}}}],["created_group_subscription",{"_index":1060,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["createdgroupstatus",{"_index":1898,"title":{},"body":{"injectables/TransferService.html":{}}}],["createdgroupstatussource",{"_index":1899,"title":{},"body":{"injectables/TransferService.html":{}}}],["creategroup",{"_index":996,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["createquizcomponent",{"_index":40,"title":{"components/CreateQuizComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createscenariodialogopen",{"_index":705,"title":{},"body":{"components/DashboardComponent.html":{}}}],["createscenecomponent",{"_index":43,"title":{"components/CreateSceneComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createscenedialogopen",{"_index":706,"title":{},"body":{"components/DashboardComponent.html":{}}}],["createtaskcomponent",{"_index":45,"title":{"components/CreateTaskComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["createtaskdialogopen",{"_index":707,"title":{},"body":{"components/DashboardComponent.html":{}}}],["creating",{"_index":425,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupSettingsComponent.html":{}}}],["creation",{"_index":492,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{}}}],["creation.model",{"_index":663,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["creation.model.ts",{"_index":1806,"title":{},"body":{"classes/TaskCreation.html":{},"coverage.html":{}}}],["creation.model.ts:2",{"_index":1809,"title":{},"body":{"classes/TaskCreation.html":{}}}],["creation.model.ts:3",{"_index":1808,"title":{},"body":{"classes/TaskCreation.html":{}}}],["creation.model.ts:4",{"_index":1810,"title":{},"body":{"classes/TaskCreation.html":{}}}],["creation.model.ts:5",{"_index":1807,"title":{},"body":{"classes/TaskCreation.html":{}}}],["current",{"_index":788,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"components/GroupSessionsComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/UserSettingsComponent.html":{}}}],["current_attempts",{"_index":840,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["current_photo",{"_index":1512,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["current_photo_index",{"_index":1513,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["current_sessions",{"_index":935,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{}}}],["currentpassword",{"_index":1632,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{}}}],["currenttasks",{"_index":1550,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["cursor",{"_index":731,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{}}}],["custom",{"_index":1373,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["custom_elements_schema",{"_index":173,"title":{},"body":{"modules/AppModule.html":{}}}],["dashboard",{"_index":298,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/NavbarComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["dashboard\"}}).then",{"_index":975,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["dashboard'},{'name",{"_index":49,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["dashboard.component",{"_index":256,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["dashboard.component.css",{"_index":703,"title":{},"body":{"components/DashboardComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["dashboard.component.html",{"_index":704,"title":{},"body":{"components/DashboardComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["dashboard.component.ts",{"_index":1057,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{}}}],["dashboard.component.ts:103",{"_index":2094,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["dashboard.component.ts:107",{"_index":1078,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["dashboard.component.ts:114",{"_index":2093,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["dashboard.component.ts:118",{"_index":1089,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["dashboard.component.ts:131",{"_index":2091,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["dashboard.component.ts:135",{"_index":1084,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["dashboard.component.ts:151",{"_index":2096,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["dashboard.component.ts:153",{"_index":1077,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["dashboard.component.ts:168",{"_index":2099,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["dashboard.component.ts:172",{"_index":1091,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["dashboard.component.ts:176",{"_index":2097,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["dashboard.component.ts:180",{"_index":1085,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["dashboard.component.ts:185",{"_index":2098,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["dashboard.component.ts:189",{"_index":1087,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["dashboard.component.ts:27",{"_index":1097,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["dashboard.component.ts:32",{"_index":1099,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["dashboard.component.ts:37",{"_index":1101,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["dashboard.component.ts:42",{"_index":1102,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["dashboard.component.ts:43",{"_index":2104,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["dashboard.component.ts:47",{"_index":1094,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["dashboard.component.ts:48",{"_index":2100,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["dashboard.component.ts:52",{"_index":1098,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["dashboard.component.ts:53",{"_index":2101,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["dashboard.component.ts:57",{"_index":1095,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["dashboard.component.ts:58",{"_index":2102,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["dashboard.component.ts:62",{"_index":1106,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["dashboard.component.ts:64",{"_index":2089,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["dashboard.component.ts:69",{"_index":1075,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["dashboard.component.ts:83",{"_index":2095,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["dashboard.component.ts:89",{"_index":1079,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["dashboard/group/sessions",{"_index":303,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupsPreviewComponent.html":{}}}],["dashboard/groups",{"_index":258,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/GroupsDashboardComponent.html":{},"coverage.html":{}}}],["dashboard/users",{"_index":255,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{}}}],["dashboardcomponent",{"_index":47,"title":{"components/DashboardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["data",{"_index":299,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"injectables/TransferService.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["data.buttontext",{"_index":418,"title":{},"body":{"components/ConfirmationDialog.html":{}}}],["data.firstname",{"_index":1703,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["data.lastname",{"_index":1704,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["data.message",{"_index":417,"title":{},"body":{"components/ConfirmationDialog.html":{}}}],["data.role",{"_index":1702,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["data:image/png;base64,${this.scene.photo",{"_index":1544,"title":{},"body":{"components/PreviewSceneComponent.html":{}}}],["database",{"_index":628,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/PreviewTasksComponent.html":{},"components/UserSettingsComponent.html":{}}}],["datasource",{"_index":1061,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["date",{"_index":780,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{}}}],["date().gettime",{"_index":2149,"title":{},"body":{"injectables/UtilsService.html":{}}}],["date(finishedat).gettime",{"_index":813,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["date(startedat).gettime",{"_index":814,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["date:'yyyy",{"_index":1871,"title":{},"body":{"components/TaskHistoryExtendedComponent.html":{}}}],["date:\\'yyyy",{"_index":1872,"title":{},"body":{"components/TaskHistoryExtendedComponent.html":{}}}],["dd",{"_index":980,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["dd/mm/yyyy",{"_index":1855,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["declarations",{"_index":155,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["decline",{"_index":388,"title":{},"body":{"components/ConfirmationDialog.html":{}}}],["decode",{"_index":1813,"title":{},"body":{"classes/TaskFiles.html":{},"injectables/UtilsService.html":{},"dependencies.html":{}}}],["decode(taskfiles",{"_index":1816,"title":{},"body":{"classes/TaskFiles.html":{}}}],["decoded",{"_index":2130,"title":{},"body":{"injectables/UtilsService.html":{}}}],["decoration",{"_index":1486,"title":{},"body":{"components/NavbarComponent.html":{}}}],["decorators",{"_index":1104,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/SceneComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["default",{"_index":118,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["define",{"_index":588,"title":{},"body":{"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{}}}],["defined",{"_index":113,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"guards/RoleGuard.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{}}}],["defines",{"_index":384,"title":{},"body":{"components/ConfirmationDialog.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/ProfileSettingsComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserSettingsComponent.html":{}}}],["defining",{"_index":572,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["delete",{"_index":411,"title":{},"body":{"components/ConfirmationDialog.html":{},"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["delete_group_subscription",{"_index":1062,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["delete_user_subscription",{"_index":2084,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["deleted",{"_index":1142,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["deletegroup",{"_index":1067,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["deletegroup(id",{"_index":1076,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["deleteuser",{"_index":2087,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["deleteuser(id",{"_index":2090,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["deleting",{"_index":1086,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["dependencies",{"_index":154,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["depends",{"_index":832,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["description",{"_index":11,"title":{},"body":{"components/AboutComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"classes/ScenarioPreview.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskPreview.html":{},"injectables/TransferService.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{}}}],["detector\"].changeboxcolorgreen",{"_index":2370,"title":{},"body":{"miscellaneous/variables.html":{}}}],["detector\"].changeboxcolorred",{"_index":2384,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dev",{"_index":2266,"title":{},"body":{"index.html":{}}}],["development",{"_index":2262,"title":{},"body":{"index.html":{}}}],["dialog",{"_index":386,"title":{},"body":{"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["dialog.component",{"_index":234,"title":{},"body":{"modules/AppModule.html":{},"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["dialog.component.ts",{"_index":383,"title":{},"body":{"components/ConfirmationDialog.html":{},"coverage.html":{}}}],["dialog.component.ts:11",{"_index":412,"title":{},"body":{"components/ConfirmationDialog.html":{}}}],["dialog.component.ts:12",{"_index":408,"title":{},"body":{"components/ConfirmationDialog.html":{}}}],["dialog.component.ts:13",{"_index":398,"title":{},"body":{"components/ConfirmationDialog.html":{}}}],["dialog.component.ts:33",{"_index":402,"title":{},"body":{"components/ConfirmationDialog.html":{}}}],["dialog/confirmation",{"_index":233,"title":{},"body":{"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{}}}],["dialogref",{"_index":396,"title":{},"body":{"components/ConfirmationDialog.html":{},"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["dialogref.afterclosed().subscribe((confirmed",{"_index":1135,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["dialogs",{"_index":449,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["dialogs/confirmation",{"_index":1108,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["different",{"_index":729,"title":{},"body":{"components/DashboardComponent.html":{}}}],["direction",{"_index":143,"title":{},"body":{"components/AppComponent.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{}}}],["directive",{"_index":32,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["directives",{"_index":98,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["directive|pipe|service|class|guard|interface|enum|module",{"_index":2275,"title":{},"body":{"index.html":{}}}],["directory",{"_index":2280,"title":{},"body":{"index.html":{}}}],["directtotasksessions",{"_index":1204,"title":{},"body":{"components/GroupsPreviewComponent.html":{}}}],["directtotasksessions(groupid",{"_index":1207,"title":{},"body":{"components/GroupsPreviewComponent.html":{}}}],["dismiss",{"_index":1375,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["display",{"_index":13,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["displayedcolumns",{"_index":1063,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["dist",{"_index":2279,"title":{},"body":{"index.html":{}}}],["document.createelement('a",{"_index":2311,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.getelementbyid('scene",{"_index":2309,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.getelementbyid(elementid",{"_index":2339,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.getelementbyid(targets[0",{"_index":2367,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.getelementbyid(targets[1",{"_index":2371,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.queryselector('#failedmsg",{"_index":2353,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.queryselector('#gratulationmsg",{"_index":2355,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.queryselector('#player",{"_index":2348,"title":{},"body":{"miscellaneous/variables.html":{}}}],["document.queryselector(`#task${placename",{"_index":2357,"title":{},"body":{"miscellaneous/variables.html":{}}}],["documentation",{"_index":2152,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":7,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["don't",{"_index":1346,"title":{},"body":{"components/LoginComponent.html":{}}}],["don\\'t",{"_index":1379,"title":{},"body":{"components/LoginComponent.html":{}}}],["double",{"_index":2405,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dozvedie",{"_index":2017,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["drop",{"_index":1362,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["duration",{"_index":532,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["durationinms",{"_index":812,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["dynamic",{"_index":2223,"title":{},"body":{"dependencies.html":{}}}],["dynamickým",{"_index":2022,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["e2e",{"_index":2285,"title":{},"body":{"index.html":{}}}],["each",{"_index":760,"title":{},"body":{"interfaces/FiringAttempt.html":{},"components/PreviewScenariosComponent.html":{},"components/TaskHistoryComponent.html":{}}}],["ease",{"_index":1492,"title":{},"body":{"components/NavbarComponent.html":{}}}],["edit",{"_index":1147,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["edituser",{"_index":2088,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["edituser(id",{"_index":2092,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["element",{"_index":31,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["element.components[\"clk",{"_index":2387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element.components[\"collision",{"_index":2369,"title":{},"body":{"miscellaneous/variables.html":{}}}],["element.id",{"_index":1130,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["elementid",{"_index":2337,"title":{},"body":{"miscellaneous/variables.html":{}}}],["elementref",{"_index":1397,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["email",{"_index":1285,"title":{},"body":{"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"classes/UserProfile.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["emailchanged",{"_index":1683,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["end",{"_index":2037,"title":{},"body":{"components/UserProfileComponent.html":{},"index.html":{}}}],["entity",{"_index":2312,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityel",{"_index":2310,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityel.setattribute('gltf",{"_index":2313,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityel.setattribute('position",{"_index":2316,"title":{},"body":{"miscellaneous/variables.html":{}}}],["entityel.setattribute('scale",{"_index":2317,"title":{},"body":{"miscellaneous/variables.html":{}}}],["env",{"_index":2238,"title":{},"body":{"dependencies.html":{}}}],["environment",{"_index":2228,"title":{},"body":{"dependencies.html":{}}}],["environmententity",{"_index":2347,"title":{},"body":{"miscellaneous/variables.html":{}}}],["environmententity.emit('win",{"_index":2350,"title":{},"body":{"miscellaneous/variables.html":{}}}],["err",{"_index":1188,"title":{},"body":{"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["err.status",{"_index":1189,"title":{},"body":{"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["error",{"_index":523,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{},"injectables/UtilsService.html":{}}}],["event",{"_index":133,"title":{},"body":{"components/AppComponent.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"dependencies.html":{},"miscellaneous/variables.html":{}}}],["event.target.files[0",{"_index":511,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{}}}],["execute",{"_index":2282,"title":{},"body":{"index.html":{}}}],["executes",{"_index":1571,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["exists",{"_index":1451,"title":{},"body":{"components/NavbarComponent.html":{}}}],["expectedroles",{"_index":300,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/RoleGuard.html":{}}}],["expectedroles.includes(userprofile.role",{"_index":1784,"title":{},"body":{"guards/RoleGuard.html":{}}}],["expired",{"_index":2138,"title":{},"body":{"injectables/UtilsService.html":{}}}],["export",{"_index":26,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"guards/RoleGuard.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{}}}],["exports",{"_index":158,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"overview.html":{}}}],["extended",{"_index":790,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["extended'},{'name",{"_index":89,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["extended.component",{"_index":268,"title":{},"body":{"modules/AppModule.html":{}}}],["extended.component.css",{"_index":839,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["extended.component.html",{"_index":838,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["extended.component.ts",{"_index":836,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/TaskHistoryExtendedComponent.html":{},"coverage.html":{}}}],["extended.component.ts:25",{"_index":1861,"title":{},"body":{"components/TaskHistoryExtendedComponent.html":{}}}],["extended.component.ts:30",{"_index":1866,"title":{},"body":{"components/TaskHistoryExtendedComponent.html":{}}}],["extended.component.ts:35",{"_index":1868,"title":{},"body":{"components/TaskHistoryExtendedComponent.html":{}}}],["extended.component.ts:40",{"_index":1869,"title":{},"body":{"components/TaskHistoryExtendedComponent.html":{}}}],["extended.component.ts:45",{"_index":1867,"title":{},"body":{"components/TaskHistoryExtendedComponent.html":{}}}],["extended.component.ts:50",{"_index":1864,"title":{},"body":{"components/TaskHistoryExtendedComponent.html":{}}}],["extended.component.ts:58",{"_index":1865,"title":{},"body":{"components/TaskHistoryExtendedComponent.html":{}}}],["extended.component.ts:67",{"_index":1862,"title":{},"body":{"components/TaskHistoryExtendedComponent.html":{}}}],["extended.component.ts:73",{"_index":1863,"title":{},"body":{"components/TaskHistoryExtendedComponent.html":{}}}],["extended/task",{"_index":267,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FiringAttempt-2.html":{},"components/TaskHistoryExtendedComponent.html":{},"coverage.html":{}}}],["extended_open",{"_index":792,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["extends",{"_index":1046,"title":{},"body":{"classes/GroupTasks.html":{},"classes/ProfileUpdate.html":{}}}],["extras",{"_index":2231,"title":{},"body":{"dependencies.html":{}}}],["f.successful",{"_index":876,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["f5f5f5",{"_index":736,"title":{},"body":{"components/DashboardComponent.html":{}}}],["false",{"_index":120,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interfaces/FiringAttempt-1.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/TaskHistoryComponent-1.html":{},"classes/TaskSessionFinishRequest.html":{},"components/UserProfileComponent.html":{},"injectables/UtilsService.html":{}}}],["fei",{"_index":912,"title":{},"body":{"components/FooterComponent.html":{}}}],["fetch",{"_index":787,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["ff0a0a",{"_index":1042,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["field",{"_index":190,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["fields",{"_index":848,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/NavbarComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["file",{"_index":9,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"guards/RoleGuard.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["files",{"_index":1591,"title":{},"body":{"components/PreviewTasksComponent.html":{},"index.html":{}}}],["files.model",{"_index":1410,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["files.model.ts",{"_index":1811,"title":{},"body":{"classes/TaskFiles.html":{},"coverage.html":{}}}],["files.model.ts:11",{"_index":1817,"title":{},"body":{"classes/TaskFiles.html":{}}}],["files.model.ts:4",{"_index":1815,"title":{},"body":{"classes/TaskFiles.html":{}}}],["files.model.ts:5",{"_index":1814,"title":{},"body":{"classes/TaskFiles.html":{}}}],["filter",{"_index":1361,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["finalmsgentity",{"_index":2352,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finalmsgentity.setattribute('visible",{"_index":2354,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finfail1",{"_index":2399,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finfail2",{"_index":2400,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finfail3",{"_index":2401,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finfail4",{"_index":2444,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finfail6",{"_index":2445,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finfail7",{"_index":2446,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finfail8",{"_index":2447,"title":{},"body":{"miscellaneous/variables.html":{}}}],["finish",{"_index":1582,"title":{},"body":{"components/PreviewTasksComponent.html":{},"components/TaskHistoryComponent-1.html":{},"classes/TaskSessionFinishRequest.html":{},"coverage.html":{}}}],["finish_session_subscription",{"_index":1551,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["finished",{"_index":1858,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["finishedat",{"_index":810,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{},"classes/TaskSessionInfo.html":{}}}],["finishtime",{"_index":1617,"title":{},"body":{"components/PreviewTasksComponent.html":{},"classes/TaskSessionFinishRequest.html":{}}}],["finsucc",{"_index":2398,"title":{},"body":{"miscellaneous/variables.html":{}}}],["fired",{"_index":762,"title":{},"body":{"interfaces/FiringAttempt.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["firedat",{"_index":779,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["firing",{"_index":785,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["firingattempt",{"_index":751,"title":{"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{}},"body":{"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"coverage.html":{}}}],["firring_attempts_subscription",{"_index":765,"title":{},"body":{"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{}}}],["firringattempt.action",{"_index":1832,"title":{},"body":{"components/TaskHistoryComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["firringattempt.firedat",{"_index":1870,"title":{},"body":{"components/TaskHistoryExtendedComponent.html":{}}}],["firringattempt.successful",{"_index":1833,"title":{},"body":{"components/TaskHistoryComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["firringattempts",{"_index":766,"title":{},"body":{"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["first",{"_index":2290,"title":{},"body":{"index.html":{}}}],["firstname",{"_index":1145,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"classes/UserProfile.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["fit",{"_index":1366,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["fix",{"_index":377,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["fixed",{"_index":1481,"title":{},"body":{"components/NavbarComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["flat",{"_index":2407,"title":{},"body":{"miscellaneous/variables.html":{}}}],["flex",{"_index":142,"title":{},"body":{"components/AppComponent.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{}}}],["flexcol",{"_index":1496,"title":{},"body":{"components/NavbarComponent.html":{}}}],["folder",{"_index":578,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["foldername",{"_index":1804,"title":{},"body":{"classes/ScenePreview.html":{}}}],["font",{"_index":541,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/FooterComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{}}}],["footer",{"_index":881,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer'},{'name",{"_index":51,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["footer.component.css",{"_index":883,"title":{},"body":{"components/FooterComponent.html":{}}}],["footer.component.html",{"_index":884,"title":{},"body":{"components/FooterComponent.html":{}}}],["footercomponent",{"_index":50,"title":{"components/FooterComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["form",{"_index":424,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["format",{"_index":806,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/TaskHistoryComponent-1.html":{}}}],["formcontrol",{"_index":501,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["formcontrol(group.name",{"_index":1180,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["formcontrol(group.tasks",{"_index":1181,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["formcontrol(profile.email",{"_index":1671,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["formcontrol(profile.firstname",{"_index":1673,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["formcontrol(profile.lastname",{"_index":1674,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["formcontrol(profile.nickname",{"_index":1672,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["formcontrol(profile.role",{"_index":2067,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["formdata",{"_index":512,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{}}}],["formdata.append(\"description",{"_index":515,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{}}}],["formdata.append(\"folder",{"_index":597,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["formdata.append(\"name",{"_index":513,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{}}}],["formdata.append('file",{"_index":517,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{}}}],["formgroup",{"_index":476,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["formsmodule",{"_index":191,"title":{},"body":{"modules/AppModule.html":{}}}],["forwards",{"_index":1493,"title":{},"body":{"components/NavbarComponent.html":{}}}],["full",{"_index":290,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["further",{"_index":2293,"title":{},"body":{"index.html":{}}}],["g.id",{"_index":1123,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UserSettingsComponent.html":{}}}],["g.name",{"_index":1226,"title":{},"body":{"components/GroupsPreviewComponent.html":{}}}],["gap",{"_index":149,"title":{},"body":{"components/AppComponent.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{}}}],["generate",{"_index":2273,"title":{},"body":{"index.html":{}}}],["generated",{"_index":2258,"title":{},"body":{"index.html":{}}}],["getconfirmpassword",{"_index":1747,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["getcurrentpassword",{"_index":1656,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["getdecodedaccesstoken",{"_index":2122,"title":{},"body":{"injectables/UtilsService.html":{}}}],["getdecodedaccesstoken(token",{"_index":2128,"title":{},"body":{"injectables/UtilsService.html":{}}}],["getdescription",{"_index":496,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{}}}],["getemail",{"_index":1304,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["getfile",{"_index":498,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{}}}],["getfirstname",{"_index":1652,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["getfolder",{"_index":593,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["getgroups",{"_index":2061,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["getlastname",{"_index":1654,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["getname",{"_index":493,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{}}}],["getnewpassword",{"_index":1658,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["getnickname",{"_index":1650,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["getpassword",{"_index":1306,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["getrepeatnewpassword",{"_index":1660,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["getrole",{"_index":2057,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["gets",{"_index":495,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["getscenario",{"_index":654,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["getscene",{"_index":656,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["gettaskfiles",{"_index":1393,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["gettasks",{"_index":1010,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{}}}],["getting",{"_index":641,"title":{"index.html":{}},"body":{"components/CreateTaskComponent.html":{}}}],["gettoken",{"_index":2123,"title":{},"body":{"injectables/UtilsService.html":{}}}],["getusername",{"_index":1741,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["go",{"_index":1761,"title":{},"body":{"components/RegistrationComponent.html":{},"index.html":{}}}],["gotostage1",{"_index":610,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["gotostage2",{"_index":611,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["gotostage3",{"_index":612,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["gr",{"_index":2077,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["gr.push(group",{"_index":2080,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["graph",{"_index":2300,"title":{},"body":{"modules.html":{}}}],["green",{"_index":2404,"title":{},"body":{"miscellaneous/variables.html":{}}}],["grid",{"_index":1371,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["group",{"_index":55,"title":{"classes/Group.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{}}}],["group.id",{"_index":1124,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UserSettingsComponent.html":{}}}],["group.model",{"_index":1052,"title":{},"body":{"classes/GroupTasks.html":{},"classes/UserProfile.html":{}}}],["group.name",{"_index":1024,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["group.tasks",{"_index":1026,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["group.tasks.foreach((t",{"_index":1193,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["group:2",{"_index":1050,"title":{},"body":{"classes/GroupTasks.html":{}}}],["group:3",{"_index":1051,"title":{},"body":{"classes/GroupTasks.html":{}}}],["grouped",{"_index":481,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["groupid",{"_index":936,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/GroupsPreviewComponent.html":{}}}],["groupid}}).then",{"_index":1224,"title":{},"body":{"components/GroupsPreviewComponent.html":{}}}],["groups",{"_index":53,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["groups_subscription",{"_index":1064,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["groupsdashboardcomponent",{"_index":52,"title":{"components/GroupsDashboardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupsessionscomponent",{"_index":54,"title":{"components/GroupSessionsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupsettingscomponent",{"_index":57,"title":{"components/GroupSettingsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupshistoryopen",{"_index":708,"title":{},"body":{"components/DashboardComponent.html":{}}}],["groupsmodificationcomponent",{"_index":59,"title":{"components/GroupsModificationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupspreviewcomponent",{"_index":61,"title":{"components/GroupsPreviewComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["groupssubscription",{"_index":1725,"title":{},"body":{"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["groupstasksopen",{"_index":709,"title":{},"body":{"components/DashboardComponent.html":{}}}],["grouptasks",{"_index":1014,"title":{"classes/GroupTasks.html":{}},"body":{"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"injectables/TransferService.html":{},"coverage.html":{}}}],["guard",{"_index":305,"title":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"coverage.html":{}}}],["guards",{"_index":306,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"overview.html":{}}}],["h",{"_index":823,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["h1",{"_index":2039,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["h3",{"_index":1355,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{}}}],["h5",{"_index":1248,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["habsburg",{"_index":1267,"title":{},"body":{"components/JoinQuizComponent.html":{}}}],["handler\"].togglebutton",{"_index":2388,"title":{},"body":{"miscellaneous/variables.html":{}}}],["hands",{"_index":2246,"title":{},"body":{"dependencies.html":{}}}],["heading",{"_index":1357,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["height",{"_index":140,"title":{},"body":{"components/AppComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{}}}],["help",{"_index":325,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["helper",{"_index":1626,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["hh:mm",{"_index":1856,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["hh:mm:ss",{"_index":805,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["hi",{"_index":1991,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["hides",{"_index":1455,"title":{},"body":{"components/NavbarComponent.html":{}}}],["his/task",{"_index":264,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"coverage.html":{}}}],["historick",{"_index":2015,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["history",{"_index":64,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{}}}],["history\"]).then",{"_index":835,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["history']).then",{"_index":727,"title":{},"body":{"components/DashboardComponent.html":{},"components/GroupSessionsComponent.html":{}}}],["history'},{'name",{"_index":87,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["history.component",{"_index":266,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["history.component.css",{"_index":764,"title":{},"body":{"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{}}}],["history.component.html",{"_index":763,"title":{},"body":{"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{}}}],["history.component.ts",{"_index":754,"title":{},"body":{"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"coverage.html":{}}}],["history.component.ts:109",{"_index":1844,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["history.component.ts:116",{"_index":1841,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["history.component.ts:123",{"_index":1842,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["history.component.ts:21",{"_index":1828,"title":{},"body":{"components/TaskHistoryComponent.html":{}}}],["history.component.ts:23",{"_index":1829,"title":{},"body":{"components/TaskHistoryComponent.html":{}}}],["history.component.ts:25",{"_index":1825,"title":{},"body":{"components/TaskHistoryComponent.html":{}}}],["history.component.ts:32",{"_index":1849,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["history.component.ts:36",{"_index":1826,"title":{},"body":{"components/TaskHistoryComponent.html":{}}}],["history.component.ts:37",{"_index":1848,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["history.component.ts:40",{"_index":1827,"title":{},"body":{"components/TaskHistoryComponent.html":{}}}],["history.component.ts:43",{"_index":1851,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["history.component.ts:48",{"_index":1846,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["history.component.ts:53",{"_index":1847,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["history.component.ts:58",{"_index":1850,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["history.component.ts:63",{"_index":1840,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["history.component.ts:81",{"_index":1845,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["history.component.ts:91",{"_index":1843,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["history/session",{"_index":296,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["history/task",{"_index":265,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"coverage.html":{}}}],["historyquizcomponent",{"_index":63,"title":{"components/HistoryQuizComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["historyquizdialogopen",{"_index":1969,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["histórie",{"_index":2011,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["home",{"_index":288,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/HomeComponent.html":{}}}],["home'},{'name",{"_index":66,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["home.component.css",{"_index":1252,"title":{},"body":{"components/HomeComponent.html":{}}}],["home.component.html",{"_index":1253,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecomponent",{"_index":65,"title":{"components/HomeComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hours",{"_index":815,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["html",{"_index":30,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["http",{"_index":357,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["http://localhost:3000/scene",{"_index":2448,"title":{},"body":{"miscellaneous/variables.html":{}}}],["http://localhost:4200",{"_index":2268,"title":{},"body":{"index.html":{}}}],["http://localhost:8080/api/v1/safa",{"_index":370,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["http_interceptors",{"_index":198,"title":{},"body":{"modules/AppModule.html":{}}}],["httpclientmodule",{"_index":199,"title":{},"body":{"modules/AppModule.html":{}}}],["httperrorresponse",{"_index":1178,"title":{},"body":{"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["httpevent",{"_index":371,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httphandler",{"_index":366,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httpinterceptor",{"_index":372,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["httprequest",{"_index":364,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["icon",{"_index":983,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/UserSettingsComponent.html":{}}}],["id",{"_index":633,"title":{},"body":{"components/CreateTaskComponent.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"classes/ScenarioPreview.html":{},"classes/ScenePreview.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskSessionInfo.html":{},"classes/UserProfile.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["identifier",{"_index":2153,"title":{},"body":{"coverage.html":{}}}],["if(element",{"_index":2368,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ifplacefound",{"_index":2323,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ifplacenotfound",{"_index":2325,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ifplacenotfoundonstart",{"_index":2326,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iftransitiondisabled",{"_index":2376,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iftransitionenabled",{"_index":2366,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iftransitionfound",{"_index":2363,"title":{},"body":{"miscellaneous/variables.html":{}}}],["iftransitionnotfound",{"_index":2377,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ignore",{"_index":129,"title":{},"body":{"components/AppComponent.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskPreview.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["implements",{"_index":342,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/CreateQuizComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"index.html":{}}}],["import",{"_index":23,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/SceneComponent.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskPreview.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{}}}],["important",{"_index":553,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/FooterComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{}}}],["imports",{"_index":171,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["incorrect",{"_index":867,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["incorrectattempts",{"_index":868,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["index",{"_index":106,"title":{"index.html":{}},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"guards/RoleGuard.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"guards/RoleGuard.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{}}}],["info.model",{"_index":782,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/TaskHistoryComponent-1.html":{}}}],["info.model.ts",{"_index":1888,"title":{},"body":{"classes/TaskSessionInfo.html":{},"coverage.html":{}}}],["info.model.ts:12",{"_index":1893,"title":{},"body":{"classes/TaskSessionInfo.html":{}}}],["info.model.ts:15",{"_index":1890,"title":{},"body":{"classes/TaskSessionInfo.html":{}}}],["info.model.ts:2",{"_index":1892,"title":{},"body":{"classes/TaskSessionInfo.html":{}}}],["info.model.ts:4",{"_index":1895,"title":{},"body":{"classes/TaskSessionInfo.html":{}}}],["info.model.ts:6",{"_index":1894,"title":{},"body":{"classes/TaskSessionInfo.html":{}}}],["info.model.ts:9",{"_index":1891,"title":{},"body":{"classes/TaskSessionInfo.html":{}}}],["information",{"_index":14,"title":{},"body":{"components/AboutComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["inherited",{"_index":1049,"title":{},"body":{"classes/GroupTasks.html":{},"classes/ProfileUpdate.html":{}}}],["init",{"_index":847,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"classes/Group.html":{},"classes/GroupTasks.html":{},"classes/ProfileUpdate.html":{},"classes/ScenarioPreview.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryExtendedComponent.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"classes/UserProfile.html":{},"components/UserSettingsComponent.html":{}}}],["init?.id",{"_index":1054,"title":{},"body":{"classes/GroupTasks.html":{}}}],["init?.name",{"_index":1055,"title":{},"body":{"classes/GroupTasks.html":{}}}],["initialize",{"_index":1640,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["initializes",{"_index":1297,"title":{},"body":{"components/LoginComponent.html":{}}}],["inits",{"_index":457,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/RegistrationComponent.html":{}}}],["inject",{"_index":413,"title":{},"body":{"components/ConfirmationDialog.html":{},"components/GroupsModificationComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["inject(mat_dialog_data",{"_index":1169,"title":{},"body":{"components/GroupsModificationComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["injectable",{"_index":340,"title":{"injectables/TransferService.html":{},"injectables/UtilsService.html":{}},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"guards/RoleGuard.html":{},"injectables/TransferService.html":{},"injectables/UtilsService.html":{},"coverage.html":{}}}],["injectables",{"_index":1896,"title":{},"body":{"injectables/TransferService.html":{},"injectables/UtilsService.html":{},"overview.html":{}}}],["inline",{"_index":746,"title":{},"body":{"components/DashboardComponent.html":{}}}],["input",{"_index":837,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["inputs",{"_index":1860,"title":{},"body":{"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["inside",{"_index":336,"title":{},"body":{"guards/AuthGuard.html":{},"components/GroupsPreviewComponent.html":{}}}],["instance",{"_index":337,"title":{},"body":{"guards/AuthGuard.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["instanceof",{"_index":134,"title":{},"body":{"components/AppComponent.html":{},"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["interactive",{"_index":1269,"title":{},"body":{"components/JoinQuizComponent.html":{}}}],["intercept",{"_index":361,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["intercept(request",{"_index":363,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interceptor",{"_index":354,"title":{"interceptors/AuthInterceptor.html":{}},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["interceptors",{"_index":355,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["interface",{"_index":750,"title":{"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{}},"body":{"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"coverage.html":{}}}],["interfaces",{"_index":752,"title":{},"body":{"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"overview.html":{}}}],["invalid",{"_index":1344,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{}}}],["isloaded",{"_index":1967,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["islogged",{"_index":345,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavbarComponent.html":{},"injectables/TransferService.html":{}}}],["isloggedin",{"_index":2124,"title":{},"body":{"injectables/UtilsService.html":{}}}],["items",{"_index":562,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt-2.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{}}}],["items_per_page",{"_index":845,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["j",{"_index":1531,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["je",{"_index":2009,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["jedinečným",{"_index":2021,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["jedným",{"_index":2005,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["join",{"_index":68,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["joinquizcomponent",{"_index":67,"title":{"components/JoinQuizComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["joinquizdialogopen",{"_index":1970,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["js/components/clkmultieventhandler.component.js",{"_index":1404,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["js/components/clksingleeventhandler.component.js",{"_index":1405,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["js/components/collisiondetectoreventhandler.component.js",{"_index":1402,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["js/components/label.component.js",{"_index":1408,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["js/components/petrinetsim.component.js",{"_index":1406,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["js/components/scenelanguage.component.js",{"_index":1407,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["js/components/toggleinfo.component.js",{"_index":1403,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["js/components/togglelabelvisibility.component.js",{"_index":1409,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["js/components/userdashboard.component.js",{"_index":1801,"title":{},"body":{"components/SceneComponent.html":{}}}],["json.parse(json.stringify(this.scenarios[i",{"_index":684,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["json.parse(json.stringify(this.scenes[i",{"_index":686,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["json.parse(json.stringify(this.tasks[i].scenario",{"_index":1608,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["json.parse(json.stringify(this.tasks[i].scene",{"_index":1609,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["json.parse(localstorage.getitem(\"user",{"_index":1244,"title":{},"body":{"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["json.parse(parsedprofile",{"_index":1983,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["json.parse(prof",{"_index":1221,"title":{},"body":{"components/GroupsPreviewComponent.html":{}}}],["json.parse(profile).id",{"_index":2107,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["json.parse(profile_json",{"_index":1783,"title":{},"body":{"guards/RoleGuard.html":{}}}],["json.parse(user_profile_presents",{"_index":1465,"title":{},"body":{"components/NavbarComponent.html":{}}}],["json.stringify(profile",{"_index":1327,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{}}}],["justify",{"_index":145,"title":{},"body":{"components/AppComponent.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{}}}],["jwt",{"_index":313,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavbarComponent.html":{},"injectables/UtilsService.html":{},"dependencies.html":{}}}],["jwt_decode",{"_index":2139,"title":{},"body":{"injectables/UtilsService.html":{}}}],["jwt_decode(token",{"_index":2144,"title":{},"body":{"injectables/UtilsService.html":{}}}],["karma",{"_index":2284,"title":{},"body":{"index.html":{}}}],["kašela",{"_index":891,"title":{},"body":{"components/FooterComponent.html":{}}}],["kega",{"_index":901,"title":{},"body":{"components/FooterComponent.html":{}}}],["keyframes",{"_index":1502,"title":{},"body":{"components/NavbarComponent.html":{}}}],["know",{"_index":1738,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["korečko",{"_index":893,"title":{},"body":{"components/FooterComponent.html":{}}}],["košiciach",{"_index":916,"title":{},"body":{"components/FooterComponent.html":{}}}],["kpi",{"_index":911,"title":{},"body":{"components/FooterComponent.html":{}}}],["label",{"_index":1040,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["laboratórium",{"_index":909,"title":{},"body":{"components/FooterComponent.html":{}}}],["language",{"_index":1265,"title":{},"body":{"components/JoinQuizComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/PreviewTasksComponent.html":{},"components/SceneComponent.html":{},"classes/TaskRequest.html":{}}}],["languagefile",{"_index":1433,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{},"classes/TaskFiles.html":{}}}],["languages",{"_index":1589,"title":{},"body":{"components/PreviewTasksComponent.html":{},"classes/ScenarioPreview.html":{}}}],["lastname",{"_index":1631,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"classes/UserProfile.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["layout",{"_index":1834,"title":{},"body":{"components/TaskHistoryComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["left",{"_index":747,"title":{},"body":{"components/DashboardComponent.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/RegistrationComponent.html":{}}}],["legend",{"_index":29,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"overview.html":{}}}],["link",{"_index":944,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/LoginComponent.html":{}}}],["lirkis",{"_index":910,"title":{},"body":{"components/FooterComponent.html":{}}}],["lirkiseduvepn",{"_index":122,"title":{},"body":{"components/AppComponent.html":{},"components/NavbarComponent.html":{}}}],["lirkiseduvepnui",{"_index":2257,"title":{},"body":{"index.html":{}}}],["list",{"_index":642,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["load",{"_index":958,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["loaded",{"_index":794,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{}}}],["loads",{"_index":945,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["local",{"_index":315,"title":{},"body":{"guards/AuthGuard.html":{},"components/HistoryQuizComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UtilsService.html":{}}}],["localstorage.getitem(\"emailchanged",{"_index":1333,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.getitem(\"jwt",{"_index":1462,"title":{},"body":{"components/NavbarComponent.html":{},"injectables/UtilsService.html":{}}}],["localstorage.getitem(\"passwordchanged",{"_index":1334,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.getitem(\"redirect",{"_index":1322,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.getitem(\"user",{"_index":1219,"title":{},"body":{"components/GroupsPreviewComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{}}}],["localstorage.getitem('user",{"_index":1782,"title":{},"body":{"guards/RoleGuard.html":{},"components/UsersDashboardComponent.html":{}}}],["localstorage.removeitem(\"emailchanged",{"_index":1342,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.removeitem(\"jwt",{"_index":1476,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileSettingsComponent.html":{},"injectables/UtilsService.html":{}}}],["localstorage.removeitem(\"passwordchanged",{"_index":1343,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.removeitem(\"redirect",{"_index":1323,"title":{},"body":{"components/LoginComponent.html":{}}}],["localstorage.removeitem(\"sessionid",{"_index":1610,"title":{},"body":{"components/PreviewTasksComponent.html":{},"injectables/UtilsService.html":{}}}],["localstorage.removeitem(\"user",{"_index":1477,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileSettingsComponent.html":{},"injectables/UtilsService.html":{}}}],["localstorage.setitem(\"emailchanged",{"_index":1691,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["localstorage.setitem(\"jwt",{"_index":2140,"title":{},"body":{"injectables/UtilsService.html":{}}}],["localstorage.setitem(\"passwordchanged",{"_index":1692,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["localstorage.setitem(\"redirect",{"_index":351,"title":{},"body":{"guards/AuthGuard.html":{}}}],["localstorage.setitem(\"sessionid",{"_index":1613,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["localstorage.setitem(\"user",{"_index":1326,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{}}}],["log",{"_index":1341,"title":{},"body":{"components/LoginComponent.html":{}}}],["logged",{"_index":312,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UtilsService.html":{}}}],["loggedsubscription",{"_index":1440,"title":{},"body":{"components/NavbarComponent.html":{}}}],["logging",{"_index":1964,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["logically",{"_index":480,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["login",{"_index":291,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{}}}],["login'},{'name",{"_index":70,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["login.component.html",{"_index":1280,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincomponent",{"_index":69,"title":{"components/LoginComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["loginrequest",{"_index":1308,"title":{"classes/LoginRequest.html":{}},"body":{"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"coverage.html":{}}}],["loginrequest(this.email?.value",{"_index":1317,"title":{},"body":{"components/LoginComponent.html":{}}}],["loginstatus",{"_index":1900,"title":{},"body":{"injectables/TransferService.html":{}}}],["loginstatussource",{"_index":1901,"title":{},"body":{"injectables/TransferService.html":{}}}],["loginsubscription",{"_index":1281,"title":{},"body":{"components/LoginComponent.html":{}}}],["logo",{"_index":1485,"title":{},"body":{"components/NavbarComponent.html":{}}}],["logout",{"_index":1041,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{},"injectables/UtilsService.html":{}}}],["logs",{"_index":1448,"title":{},"body":{"components/NavbarComponent.html":{}}}],["lovek",{"_index":2013,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["mail",{"_index":1763,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["mailbox",{"_index":1337,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["main",{"_index":137,"title":{},"body":{"components/AppComponent.html":{}}}],["mainbutton",{"_index":1365,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["manage",{"_index":485,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["management",{"_index":1058,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["margin",{"_index":742,"title":{},"body":{"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["mat",{"_index":699,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/UserSettingsComponent.html":{}}}],["mat_dialog_data",{"_index":414,"title":{},"body":{"components/ConfirmationDialog.html":{},"components/GroupsModificationComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["matbuttonmodule",{"_index":204,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodule",{"_index":196,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":1740,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["matcheckboxmodule",{"_index":246,"title":{},"body":{"modules/AppModule.html":{}}}],["matching",{"_index":101,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"guards/RoleGuard.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matdialog",{"_index":615,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/PreviewTasksComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["matdialogmodule",{"_index":215,"title":{},"body":{"modules/AppModule.html":{}}}],["matdialogref",{"_index":397,"title":{},"body":{"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["matdialogref:matdialogref",{"_index":1262,"title":{},"body":{"components/JoinQuizComponent.html":{}}}],["material",{"_index":401,"title":{},"body":{"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["matformfieldmodule",{"_index":188,"title":{},"body":{"modules/AppModule.html":{}}}],["math.ceil(this.firringattempts.length",{"_index":850,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["math.ceil(this.sessions.length",{"_index":969,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{}}}],["math.ceil(this.tasks.length",{"_index":1601,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["math.floor((durationinms",{"_index":820,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["math.floor(durationinms",{"_index":816,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["math.min(this.firringattempts.length",{"_index":854,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["math.min(this.sessions.length",{"_index":972,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{}}}],["math.min(this.tasks.length",{"_index":1604,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["maticonmodule",{"_index":213,"title":{},"body":{"modules/AppModule.html":{}}}],["matinputmodule",{"_index":194,"title":{},"body":{"modules/AppModule.html":{}}}],["matpaginator",{"_index":1103,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["matpaginatormodule",{"_index":230,"title":{},"body":{"modules/AppModule.html":{}}}],["matradiomodule",{"_index":248,"title":{},"body":{"modules/AppModule.html":{}}}],["matselectmodule",{"_index":236,"title":{},"body":{"modules/AppModule.html":{}}}],["matsnackbar",{"_index":445,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["matsnackbarmodule",{"_index":201,"title":{},"body":{"modules/AppModule.html":{}}}],["mattabledatasource",{"_index":1096,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["mattabledatasource(this.groups",{"_index":1113,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["mattabledatasource(this.users",{"_index":2111,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["mattablemodule",{"_index":228,"title":{},"body":{"modules/AppModule.html":{}}}],["max",{"_index":920,"title":{},"body":{"components/FooterComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{}}}],["max_pages",{"_index":843,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["media",{"_index":1503,"title":{},"body":{"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{}}}],["mediumpurple",{"_index":1367,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["menu",{"_index":1457,"title":{},"body":{"components/NavbarComponent.html":{}}}],["message",{"_index":393,"title":{},"body":{"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["metadata",{"_index":16,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["method",{"_index":332,"title":{},"body":{"guards/AuthGuard.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{}}}],["methods",{"_index":317,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/SceneComponent.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"injectables/TransferService.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{}}}],["middle",{"_index":1837,"title":{},"body":{"components/TaskHistoryComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["milliseconds",{"_index":804,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["min",{"_index":567,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["minutes",{"_index":819,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["miscellaneous",{"_index":2305,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["mm",{"_index":979,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["model",{"_index":2314,"title":{},"body":{"miscellaneous/variables.html":{}}}],["model.setattribute('position",{"_index":2372,"title":{},"body":{"miscellaneous/variables.html":{}}}],["models/group",{"_index":1015,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"injectables/TransferService.html":{}}}],["models/group.model",{"_index":1177,"title":{},"body":{"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{}}}],["models/login",{"_index":1309,"title":{},"body":{"components/LoginComponent.html":{}}}],["models/profile",{"_index":1663,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["models/registration",{"_index":1750,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["models/scenario",{"_index":660,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PreviewScenariosComponent.html":{}}}],["models/scene",{"_index":658,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PreviewSceneComponent.html":{}}}],["models/task",{"_index":662,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/PreviewTasksComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent-1.html":{}}}],["models/user",{"_index":1216,"title":{},"body":{"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"guards/RoleGuard.html":{},"injectables/TransferService.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["modification",{"_index":1082,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["modification'},{'name",{"_index":60,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["modification.component",{"_index":262,"title":{},"body":{"modules/AppModule.html":{},"components/GroupsDashboardComponent.html":{}}}],["modification.component.css",{"_index":1150,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["modification.component.html",{"_index":1151,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["modification.component.ts",{"_index":1149,"title":{},"body":{"components/GroupsModificationComponent.html":{},"coverage.html":{}}}],["modification.component.ts:105",{"_index":1162,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["modification.component.ts:114",{"_index":1167,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["modification.component.ts:140",{"_index":1165,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["modification.component.ts:151",{"_index":1166,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["modification.component.ts:162",{"_index":1158,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["modification.component.ts:28",{"_index":1171,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["modification.component.ts:30",{"_index":1173,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["modification.component.ts:35",{"_index":1174,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["modification.component.ts:40",{"_index":1156,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["modification.component.ts:52",{"_index":1170,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["modification.component.ts:62",{"_index":1168,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["modification.component.ts:67",{"_index":1175,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["modification.component.ts:76",{"_index":1176,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["modification.component.ts:85",{"_index":1161,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["modification.component.ts:92",{"_index":1163,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["modification/groups",{"_index":261,"title":{},"body":{"modules/AppModule.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"coverage.html":{}}}],["module",{"_index":151,"title":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["modules",{"_index":153,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"modules.html":{},"overview.html":{}}}],["monarchi",{"_index":1268,"title":{},"body":{"components/JoinQuizComponent.html":{}}}],["more",{"_index":2025,"title":{},"body":{"components/UserProfileComponent.html":{},"index.html":{}}}],["move",{"_index":1519,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["moves",{"_index":619,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt-2.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["multi",{"_index":277,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["multiple",{"_index":486,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["muzeum_extended/task/:taskid/:language",{"_index":295,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["muzeum_extended|muzeum_habsbourg).*$/.test(event.url",{"_index":136,"title":{},"body":{"components/AppComponent.html":{}}}],["muzeum_habsbourg.component.css",{"_index":1388,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{}}}],["muzeum_habsbourg.component.html",{"_index":1389,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{}}}],["muzeum_habsbourg/task/:taskid/:language",{"_index":297,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["muzeum_habsbourgcomponent",{"_index":71,"title":{"components/Muzeum_habsbourgComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["môže",{"_index":2012,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["name",{"_index":35,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"components/FooterComponent.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"guards/RoleGuard.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["names.model",{"_index":1017,"title":{},"body":{"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsModificationComponent.html":{}}}],["names.model.ts",{"_index":1880,"title":{},"body":{"classes/TaskNames.html":{},"coverage.html":{}}}],["names.model.ts:3",{"_index":1882,"title":{},"body":{"classes/TaskNames.html":{}}}],["names.model.ts:4",{"_index":1881,"title":{},"body":{"classes/TaskNames.html":{}}}],["navbar",{"_index":1436,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar'},{'name",{"_index":73,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["navbar.component.css",{"_index":1437,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbar.component.html",{"_index":1438,"title":{},"body":{"components/NavbarComponent.html":{}}}],["navbarcomponent",{"_index":72,"title":{"components/NavbarComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["navigate",{"_index":2267,"title":{},"body":{"index.html":{}}}],["navigate_before",{"_index":982,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["navigate_next",{"_index":984,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/UserProfileComponent.html":{}}}],["navigateback",{"_index":938,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/GroupsPreviewComponent.html":{}}}],["navigates",{"_index":948,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/GroupsPreviewComponent.html":{}}}],["navigationend",{"_index":125,"title":{},"body":{"components/AppComponent.html":{}}}],["necessary",{"_index":871,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{}}}],["need",{"_index":2289,"title":{},"body":{"index.html":{}}}],["needed",{"_index":1523,"title":{},"body":{"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{}}}],["net",{"_index":539,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["new",{"_index":490,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"injectables/TransferService.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"index.html":{}}}],["newpassword",{"_index":1633,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{}}}],["next",{"_index":365,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt-2.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/UserSettingsComponent.html":{}}}],["next.handle(request",{"_index":375,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["next_attempts",{"_index":858,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["next_photo",{"_index":1514,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["next_sessions",{"_index":939,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["ng",{"_index":2264,"title":{},"body":{"index.html":{}}}],["ngmodule",{"_index":174,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["ngondestroy",{"_index":434,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["ngoninit",{"_index":435,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["nickname",{"_index":1630,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"classes/RegistrationRequest.html":{},"classes/UserProfile.html":{},"components/UserSettingsComponent.html":{}}}],["none",{"_index":1352,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{}}}],["now",{"_index":1340,"title":{},"body":{"components/LoginComponent.html":{}}}],["null",{"_index":1019,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":630,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewTasksComponent.html":{},"classes/ProfileUpdate.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"classes/UserProfile.html":{},"components/UsersDashboardComponent.html":{}}}],["number(this.scenario.value",{"_index":675,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["number(this.scene.value",{"_index":677,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["o",{"_index":2019,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["object",{"_index":778,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["object.assign(this",{"_index":929,"title":{},"body":{"classes/Group.html":{},"classes/GroupTasks.html":{},"classes/ProfileUpdate.html":{},"classes/ScenarioPreview.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"classes/UserProfile.html":{}}}],["observable",{"_index":369,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["occurred",{"_index":530,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["odpove",{"_index":2344,"title":{},"body":{"miscellaneous/variables.html":{}}}],["ok",{"_index":1143,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["om",{"_index":2020,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["onconfirmclick",{"_index":394,"title":{},"body":{"components/ConfirmationDialog.html":{}}}],["ondestroy",{"_index":428,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["one",{"_index":831,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryComponent-1.html":{}}}],["onfileselected",{"_index":436,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{}}}],["onfileselected(event",{"_index":460,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{}}}],["oninit",{"_index":427,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["onlanguagechange",{"_index":1556,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["onlanguagechange(changedlanguage",{"_index":1569,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["opacity",{"_index":544,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/FooterComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["open",{"_index":791,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{}}}],["open_preview",{"_index":940,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{}}}],["open_preview(session",{"_index":953,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{}}}],["opendeletedialog",{"_index":1068,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["opendeletedialog(id",{"_index":1083,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["opened",{"_index":795,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/TaskHistoryComponent-1.html":{}}}],["opening",{"_index":448,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["opens",{"_index":467,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["openscenariopreview",{"_index":613,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["openscenariopreview(i",{"_index":629,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["openscenepreview",{"_index":614,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["openscenepreview(i",{"_index":634,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["opensessions",{"_index":1883,"title":{},"body":{"classes/TaskPreview.html":{}}}],["opensuccessfuldeletebar",{"_index":1069,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["opensuccessfulsnackbar",{"_index":437,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["openunsuccessfuldeletebar",{"_index":1070,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["openunsuccessfulsnackbar",{"_index":438,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["openunsuccessfulsnackbar(message",{"_index":469,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["openupdatedialog",{"_index":1071,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["openupdatedialog(id",{"_index":1088,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["openupdatedprofilebar",{"_index":1284,"title":{},"body":{"components/LoginComponent.html":{}}}],["openupdatedprofilebar(message",{"_index":1299,"title":{},"body":{"components/LoginComponent.html":{}}}],["optional",{"_index":117,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"guards/RoleGuard.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{}}}],["out",{"_index":169,"title":{},"body":{"modules/AppModule.html":{},"components/NavbarComponent.html":{},"index.html":{},"overview.html":{}}}],["overflow",{"_index":695,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["overlay",{"_index":1498,"title":{},"body":{"components/NavbarComponent.html":{}}}],["override",{"_index":331,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["overview",{"_index":2295,"title":{"overview.html":{}},"body":{"index.html":{},"overview.html":{}}}],["p",{"_index":540,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/FooterComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["p1",{"_index":2322,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p1confirm",{"_index":2397,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p1cselect",{"_index":2394,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p1cunselect",{"_index":2393,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p1iselect",{"_index":2395,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p1iunselect",{"_index":2396,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p2",{"_index":2330,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p2confirm",{"_index":2392,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p2cselect",{"_index":2391,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p2cunselect",{"_index":2390,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p2iselect",{"_index":2386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p2iunselect",{"_index":2389,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p3",{"_index":2332,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p3cdisplace",{"_index":2383,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p3confirm",{"_index":2379,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p3cplace",{"_index":2362,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p3idisplace",{"_index":2385,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p3iplace",{"_index":2378,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p4",{"_index":2408,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p4cdisplace",{"_index":2427,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p4confirm",{"_index":2426,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p4cplace",{"_index":2422,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p4idisplace",{"_index":2428,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p4iplace",{"_index":2425,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p5",{"_index":2412,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p6",{"_index":2415,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p6confirm",{"_index":2433,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p6cselect",{"_index":2430,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p6cunselect",{"_index":2429,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p6iselect",{"_index":2431,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p6iunselect",{"_index":2432,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p7",{"_index":2418,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p7confirm",{"_index":2438,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p7cselect",{"_index":2435,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p7cunselect",{"_index":2434,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p7iselect",{"_index":2436,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p7iunselect",{"_index":2437,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p8",{"_index":2419,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p8confirm",{"_index":2443,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p8cselect",{"_index":2440,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p8cunselect",{"_index":2439,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p8iselect",{"_index":2441,"title":{},"body":{"miscellaneous/variables.html":{}}}],["p8iunselect",{"_index":2442,"title":{},"body":{"miscellaneous/variables.html":{}}}],["package",{"_index":2215,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["padding",{"_index":551,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{}}}],["padding:2rem",{"_index":917,"title":{},"body":{"components/FooterComponent.html":{}}}],["page",{"_index":783,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"index.html":{}}}],["pages",{"_index":842,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["paginator",{"_index":1065,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["panelclass",{"_index":1034,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["param",{"_index":343,"title":{},"body":{"guards/AuthGuard.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{}}}],["parameters",{"_index":115,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"guards/RoleGuard.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{}}}],["params['language",{"_index":1418,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["params['sessionid",{"_index":773,"title":{},"body":{"interfaces/FiringAttempt.html":{},"components/TaskHistoryComponent.html":{}}}],["params['taskid",{"_index":1416,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["parse",{"_index":1213,"title":{},"body":{"components/GroupsPreviewComponent.html":{},"dependencies.html":{}}}],["parsedprofile",{"_index":1982,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["partial",{"_index":926,"title":{},"body":{"classes/Group.html":{},"classes/GroupTasks.html":{},"classes/ProfileUpdate.html":{},"classes/ScenarioPreview.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"classes/UserProfile.html":{}}}],["password",{"_index":1286,"title":{},"body":{"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{}}}],["passwordchanged",{"_index":1684,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["passwords",{"_index":1739,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["passwordsmatch",{"_index":1726,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["past",{"_index":2032,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["path",{"_index":286,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["pathmatch",{"_index":289,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["per",{"_index":844,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["percentage",{"_index":869,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["performs",{"_index":1293,"title":{},"body":{"components/LoginComponent.html":{}}}],["petri",{"_index":538,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["petrinet",{"_index":559,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{}}}],["petrinetsimattr",{"_index":1428,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["photo",{"_index":583,"title":{},"body":{"components/CreateSceneComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"classes/ScenePreview.html":{}}}],["photos",{"_index":1788,"title":{},"body":{"classes/ScenarioPreview.html":{}}}],["physics",{"_index":2233,"title":{},"body":{"dependencies.html":{}}}],["place",{"_index":1372,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["placebarrier",{"_index":2193,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["placebarrier('20.539",{"_index":2333,"title":{},"body":{"miscellaneous/variables.html":{}}}],["placebarrier('24.037",{"_index":2334,"title":{},"body":{"miscellaneous/variables.html":{}}}],["placebarrier('33.194",{"_index":2416,"title":{},"body":{"miscellaneous/variables.html":{}}}],["placebarrier('36.678",{"_index":2417,"title":{},"body":{"miscellaneous/variables.html":{}}}],["placebarrier('45.616",{"_index":2420,"title":{},"body":{"miscellaneous/variables.html":{}}}],["placebarrier('49.328",{"_index":2421,"title":{},"body":{"miscellaneous/variables.html":{}}}],["placename",{"_index":2321,"title":{},"body":{"miscellaneous/variables.html":{}}}],["places",{"_index":1412,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["platform",{"_index":2286,"title":{},"body":{"index.html":{}}}],["playconfirmationsuccesssound",{"_index":2195,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["playconfirmationsuccesssound(targets[0",{"_index":2380,"title":{},"body":{"miscellaneous/variables.html":{}}}],["playconfirmationunsuccesssound",{"_index":2196,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["playconfirmationunsuccesssound(targets[0",{"_index":2382,"title":{},"body":{"miscellaneous/variables.html":{}}}],["playvictorysound",{"_index":2197,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["pnmlfile",{"_index":1429,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{},"classes/TaskFiles.html":{}}}],["podporou",{"_index":899,"title":{},"body":{"components/FooterComponent.html":{}}}],["pointer",{"_index":732,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{}}}],["ponorenie",{"_index":2010,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["ponúknu",{"_index":2001,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["position",{"_index":1376,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{},"miscellaneous/variables.html":{}}}],["používateľom",{"_index":2000,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["pozoruhodnejších",{"_index":2007,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["pre",{"_index":1996,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["preform",{"_index":1303,"title":{},"body":{"components/LoginComponent.html":{},"injectables/TransferService.html":{}}}],["preset",{"_index":2237,"title":{},"body":{"dependencies.html":{}}}],["preskúma",{"_index":2014,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["prev_attempts",{"_index":855,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["prev_photo",{"_index":1515,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["prev_sessions",{"_index":941,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["preview",{"_index":75,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["preview'},{'name",{"_index":62,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["preview.component",{"_index":272,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["preview.component.css",{"_index":1202,"title":{},"body":{"components/GroupsPreviewComponent.html":{}}}],["preview.component.html",{"_index":1203,"title":{},"body":{"components/GroupsPreviewComponent.html":{}}}],["preview.component.ts",{"_index":1201,"title":{},"body":{"components/GroupsPreviewComponent.html":{},"coverage.html":{}}}],["preview.component.ts:20",{"_index":1215,"title":{},"body":{"components/GroupsPreviewComponent.html":{}}}],["preview.component.ts:25",{"_index":1206,"title":{},"body":{"components/GroupsPreviewComponent.html":{}}}],["preview.component.ts:33",{"_index":1212,"title":{},"body":{"components/GroupsPreviewComponent.html":{}}}],["preview.component.ts:41",{"_index":1211,"title":{},"body":{"components/GroupsPreviewComponent.html":{}}}],["preview.component.ts:49",{"_index":1208,"title":{},"body":{"components/GroupsPreviewComponent.html":{}}}],["preview.component.ts:56",{"_index":1210,"title":{},"body":{"components/GroupsPreviewComponent.html":{}}}],["preview.model",{"_index":659,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"classes/TaskPreview.html":{}}}],["preview.model.ts",{"_index":1787,"title":{},"body":{"classes/ScenarioPreview.html":{},"classes/ScenePreview.html":{},"classes/TaskPreview.html":{},"coverage.html":{}}}],["preview.model.ts:11",{"_index":1887,"title":{},"body":{"classes/TaskPreview.html":{}}}],["preview.model.ts:12",{"_index":1884,"title":{},"body":{"classes/TaskPreview.html":{}}}],["preview.model.ts:2",{"_index":1791,"title":{},"body":{"classes/ScenarioPreview.html":{},"classes/ScenePreview.html":{}}}],["preview.model.ts:3",{"_index":1793,"title":{},"body":{"classes/ScenarioPreview.html":{},"classes/ScenePreview.html":{}}}],["preview.model.ts:4",{"_index":1790,"title":{},"body":{"classes/ScenarioPreview.html":{},"classes/ScenePreview.html":{}}}],["preview.model.ts:5",{"_index":1792,"title":{},"body":{"classes/ScenarioPreview.html":{},"classes/ScenePreview.html":{},"classes/TaskPreview.html":{}}}],["preview.model.ts:6",{"_index":1789,"title":{},"body":{"classes/ScenarioPreview.html":{},"classes/ScenePreview.html":{},"classes/TaskPreview.html":{}}}],["preview.model.ts:7",{"_index":1885,"title":{},"body":{"classes/TaskPreview.html":{}}}],["preview.model.ts:9",{"_index":1886,"title":{},"body":{"classes/TaskPreview.html":{}}}],["preview/groups",{"_index":271,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GroupsPreviewComponent.html":{},"coverage.html":{}}}],["previewscenarioscomponent",{"_index":74,"title":{"components/PreviewScenariosComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["previewscenecomponent",{"_index":77,"title":{"components/PreviewSceneComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["previewtaskscomponent",{"_index":78,"title":{"components/PreviewTasksComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["previewtasksdialogopen",{"_index":1971,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["previous",{"_index":689,"title":{},"body":{"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["private",{"_index":344,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"injectables/TransferService.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{}}}],["procese",{"_index":908,"title":{},"body":{"components/FooterComponent.html":{}}}],["produkt",{"_index":896,"title":{},"body":{"components/FooterComponent.html":{}}}],["prof",{"_index":1218,"title":{},"body":{"components/GroupsPreviewComponent.html":{}}}],["profile",{"_index":81,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"injectables/TransferService.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{}}}],["profile\"}}).then",{"_index":1246,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["profile'},{'name",{"_index":94,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["profile.component",{"_index":212,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["profile.component.css",{"_index":1965,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.html",{"_index":1966,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts",{"_index":1963,"title":{},"body":{"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile.component.ts:26",{"_index":1981,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:31",{"_index":1980,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:36",{"_index":1973,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:50",{"_index":1977,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:61",{"_index":1976,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:67",{"_index":1975,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:74",{"_index":1974,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:81",{"_index":1979,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.component.ts:90",{"_index":1978,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profile.currentpassword",{"_index":1689,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["profile.email",{"_index":1686,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["profile.firstname",{"_index":1698,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.groups.foreach((g",{"_index":2079,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["profile.lastname",{"_index":1699,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile.model",{"_index":1217,"title":{},"body":{"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"guards/RoleGuard.html":{},"injectables/TransferService.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["profile.model.ts",{"_index":1954,"title":{},"body":{"classes/UserProfile.html":{},"coverage.html":{}}}],["profile.model.ts:10",{"_index":1955,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:4",{"_index":1958,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:5",{"_index":1960,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:6",{"_index":1956,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:7",{"_index":1961,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:8",{"_index":1957,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.model.ts:9",{"_index":1959,"title":{},"body":{"classes/UserProfile.html":{}}}],["profile.newpassword",{"_index":1687,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["profile.nickname",{"_index":1697,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["profile.repeatnewpassword",{"_index":1688,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["profile.role",{"_index":1467,"title":{},"body":{"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{}}}],["profile/user",{"_index":211,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["profile_json",{"_index":1781,"title":{},"body":{"guards/RoleGuard.html":{}}}],["profile_update_subscription",{"_index":1152,"title":{},"body":{"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["profilechangessubscription",{"_index":1968,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profiles",{"_index":2103,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["profilesettings",{"_index":565,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["profilesettingscomponent",{"_index":80,"title":{"components/ProfileSettingsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["profilesettingsdialogopen",{"_index":1972,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["profilestatus",{"_index":1902,"title":{},"body":{"injectables/TransferService.html":{}}}],["profilestatussource",{"_index":1903,"title":{},"body":{"injectables/TransferService.html":{}}}],["profilesubscription",{"_index":1282,"title":{},"body":{"components/LoginComponent.html":{}}}],["profileupdate",{"_index":1662,"title":{"classes/ProfileUpdate.html":{}},"body":{"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/UserSettingsComponent.html":{},"coverage.html":{}}}],["progressentity",{"_index":2402,"title":{},"body":{"miscellaneous/variables.html":{}}}],["progressentity.setattribute('material",{"_index":2403,"title":{},"body":{"miscellaneous/variables.html":{}}}],["project",{"_index":359,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"index.html":{}}}],["projektu",{"_index":900,"title":{},"body":{"components/FooterComponent.html":{}}}],["properties",{"_index":107,"title":{"properties.html":{}},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"properties.html":{}}}],["prostredie",{"_index":2016,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["provide",{"_index":275,"title":{},"body":{"modules/AppModule.html":{}}}],["provided",{"_index":472,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{}}}],["providedin",{"_index":341,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"injectables/TransferService.html":{},"injectables/UtilsService.html":{}}}],["providers",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["provides",{"_index":324,"title":{},"body":{"guards/AuthGuard.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["public",{"_index":1047,"title":{},"body":{"classes/GroupTasks.html":{},"components/GroupsModificationComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"classes/ScenarioPreview.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserSettingsComponent.html":{},"injectables/UtilsService.html":{}}}],["purple",{"_index":918,"title":{},"body":{"components/FooterComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{}}}],["questions",{"_index":1270,"title":{},"body":{"components/JoinQuizComponent.html":{}}}],["quiz",{"_index":429,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/UserProfileComponent.html":{}}}],["quiz'},{'name",{"_index":42,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["quiz.component",{"_index":219,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{},"components/UserProfileComponent.html":{}}}],["quiz.component.css",{"_index":430,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{}}}],["quiz.component.html",{"_index":431,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{}}}],["quiz.component.ts",{"_index":423,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"coverage.html":{}}}],["quiz.component.ts:108",{"_index":1235,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["quiz.component.ts:11",{"_index":1258,"title":{},"body":{"components/JoinQuizComponent.html":{}}}],["quiz.component.ts:118",{"_index":470,"title":{},"body":{"components/CreateQuizComponent.html":{}}}],["quiz.component.ts:127",{"_index":466,"title":{},"body":{"components/CreateQuizComponent.html":{}}}],["quiz.component.ts:15",{"_index":1259,"title":{},"body":{"components/JoinQuizComponent.html":{}}}],["quiz.component.ts:21",{"_index":491,"title":{},"body":{"components/CreateQuizComponent.html":{}}}],["quiz.component.ts:22",{"_index":1243,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["quiz.component.ts:27",{"_index":446,"title":{},"body":{"components/CreateQuizComponent.html":{}}}],["quiz.component.ts:28",{"_index":1241,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["quiz.component.ts:33",{"_index":1242,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["quiz.component.ts:38",{"_index":1237,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["quiz.component.ts:42",{"_index":494,"title":{},"body":{"components/CreateQuizComponent.html":{}}}],["quiz.component.ts:43",{"_index":1239,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["quiz.component.ts:48",{"_index":1240,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["quiz.component.ts:49",{"_index":497,"title":{},"body":{"components/CreateQuizComponent.html":{}}}],["quiz.component.ts:53",{"_index":1229,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["quiz.component.ts:56",{"_index":499,"title":{},"body":{"components/CreateQuizComponent.html":{}}}],["quiz.component.ts:63",{"_index":456,"title":{},"body":{"components/CreateQuizComponent.html":{}}}],["quiz.component.ts:69",{"_index":1233,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["quiz.component.ts:71",{"_index":455,"title":{},"body":{"components/CreateQuizComponent.html":{}}}],["quiz.component.ts:78",{"_index":454,"title":{},"body":{"components/CreateQuizComponent.html":{}}}],["quiz.component.ts:79",{"_index":1232,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["quiz.component.ts:82",{"_index":1230,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["quiz.component.ts:86",{"_index":461,"title":{},"body":{"components/CreateQuizComponent.html":{}}}],["quiz.component.ts:89",{"_index":1236,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["quiz.component.ts:95",{"_index":474,"title":{},"body":{"components/CreateQuizComponent.html":{}}}],["quiz.component.ts:98",{"_index":1231,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["quiz/create",{"_index":221,"title":{},"body":{"modules/AppModule.html":{},"components/CreateQuizComponent.html":{},"components/DashboardComponent.html":{},"coverage.html":{}}}],["quiz/history",{"_index":223,"title":{},"body":{"modules/AppModule.html":{},"components/HistoryQuizComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["quiz/join",{"_index":218,"title":{},"body":{"modules/AppModule.html":{},"components/JoinQuizComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["quizboxes",{"_index":2038,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["quizes",{"_index":2026,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["quizoption",{"_index":986,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/UserProfileComponent.html":{}}}],["quizzes",{"_index":2030,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["r",{"_index":349,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{}}}],["radio",{"_index":700,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["radius",{"_index":554,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["reactiveformsmodule",{"_index":192,"title":{},"body":{"modules/AppModule.html":{}}}],["read",{"_index":1234,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["reads",{"_index":627,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["realita",{"_index":1995,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["realite",{"_index":889,"title":{},"body":{"components/FooterComponent.html":{}}}],["reality",{"_index":906,"title":{},"body":{"components/FooterComponent.html":{},"components/UserProfileComponent.html":{}}}],["red",{"_index":1043,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["redirect",{"_index":1209,"title":{},"body":{"components/GroupsPreviewComponent.html":{}}}],["redirected",{"_index":1289,"title":{},"body":{"components/LoginComponent.html":{}}}],["redirects",{"_index":830,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["redirectto",{"_index":287,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["reference",{"_index":2296,"title":{},"body":{"index.html":{}}}],["register",{"_index":293,"title":{},"body":{"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{}}}],["registered",{"_index":1768,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration",{"_index":1722,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration'},{'name",{"_index":83,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["registration.component.css",{"_index":1723,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration.component.html",{"_index":1724,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["registration/registration.component.css",{"_index":1279,"title":{},"body":{"components/LoginComponent.html":{}}}],["registrationcomponent",{"_index":82,"title":{"components/RegistrationComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["registrationrequest",{"_index":1749,"title":{"classes/RegistrationRequest.html":{}},"body":{"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"coverage.html":{}}}],["registrationusersubscription",{"_index":1727,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["reload",{"_index":2270,"title":{},"body":{"index.html":{}}}],["repeat",{"_index":1706,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["repeatnewpassword",{"_index":1634,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{}}}],["repeatpassword",{"_index":1661,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["replay",{"_index":2365,"title":{},"body":{"miscellaneous/variables.html":{}}}],["represent",{"_index":1228,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["represented",{"_index":1238,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["represents",{"_index":477,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["request",{"_index":368,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/PreviewTasksComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{}}}],["request.clone({setheaders",{"_index":379,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["request.model",{"_index":1310,"title":{},"body":{"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/PreviewTasksComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{}}}],["request.model.ts",{"_index":1381,"title":{},"body":{"classes/LoginRequest.html":{},"classes/RegistrationRequest.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"coverage.html":{}}}],["request.model.ts:2",{"_index":1384,"title":{},"body":{"classes/LoginRequest.html":{},"classes/RegistrationRequest.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{}}}],["request.model.ts:3",{"_index":1383,"title":{},"body":{"classes/LoginRequest.html":{},"classes/RegistrationRequest.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{}}}],["request.model.ts:4",{"_index":1773,"title":{},"body":{"classes/RegistrationRequest.html":{}}}],["request.model.ts:5",{"_index":1772,"title":{},"body":{"classes/RegistrationRequest.html":{},"classes/TaskSessionFinishRequest.html":{}}}],["request.model.ts:6",{"_index":1771,"title":{},"body":{"classes/RegistrationRequest.html":{}}}],["request.url.includes(this.api_url",{"_index":374,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["requests",{"_index":358,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["required",{"_index":1198,"title":{},"body":{"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["reqwithtoken",{"_index":378,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["reset",{"_index":168,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["resource",{"_index":310,"title":{},"body":{"guards/AuthGuard.html":{},"guards/RoleGuard.html":{}}}],["response",{"_index":524,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/LoginComponent.html":{}}}],["response.status",{"_index":525,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{}}}],["results",{"_index":100,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"guards/RoleGuard.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["retrieve",{"_index":1164,"title":{},"body":{"components/GroupsModificationComponent.html":{},"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UtilsService.html":{}}}],["retrieves",{"_index":943,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["return",{"_index":350,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/UserSettingsComponent.html":{},"injectables/UtilsService.html":{}}}],["returns",{"_index":338,"title":{},"body":{"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/SceneComponent.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"injectables/TransferService.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{}}}],["review",{"_index":2029,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["rgba(0",{"_index":740,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{}}}],["rgba(30",{"_index":549,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["right",{"_index":749,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{}}}],["roaming",{"_index":2336,"title":{},"body":{"miscellaneous/variables.html":{}}}],["role",{"_index":1441,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"guards/RoleGuard.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["roleguard",{"_index":283,"title":{"guards/RoleGuard.html":{}},"body":{"modules/AppRoutingModule.html":{},"guards/RoleGuard.html":{},"coverage.html":{}}}],["roles",{"_index":1153,"title":{},"body":{"components/GroupsModificationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["rolestatus",{"_index":1904,"title":{},"body":{"injectables/TransferService.html":{}}}],["rolestatussource",{"_index":1905,"title":{},"body":{"injectables/TransferService.html":{}}}],["rolesubscription",{"_index":1442,"title":{},"body":{"components/NavbarComponent.html":{}}}],["root",{"_index":103,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"guards/RoleGuard.html":{},"injectables/TransferService.html":{},"injectables/UtilsService.html":{}}}],["root'},{'name",{"_index":38,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["ropebarrier",{"_index":2315,"title":{},"body":{"miscellaneous/variables.html":{}}}],["route",{"_index":322,"title":{},"body":{"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserSettingsComponent.html":{}}}],["route.data['expectedroles",{"_index":1780,"title":{},"body":{"guards/RoleGuard.html":{}}}],["router",{"_index":112,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserSettingsComponent.html":{}}}],["routermodule",{"_index":281,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routermodule.forroot(routes",{"_index":304,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["routerstatesnapshot",{"_index":329,"title":{},"body":{"guards/AuthGuard.html":{}}}],["routes",{"_index":282,"title":{"routes.html":{}},"body":{"modules/AppRoutingModule.html":{},"components/DashboardComponent.html":{},"overview.html":{},"routes.html":{}}}],["routing.module",{"_index":178,"title":{},"body":{"modules/AppModule.html":{}}}],["routing.module.ts",{"_index":280,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["row",{"_index":697,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{}}}],["row.email",{"_index":2117,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["row.firstname",{"_index":2115,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["row.lastname",{"_index":2116,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["row.name",{"_index":1146,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["row.nickname",{"_index":2118,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["row.role",{"_index":2119,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["run",{"_index":2263,"title":{},"body":{"index.html":{}}}],["running",{"_index":1583,"title":{},"body":{"components/PreviewTasksComponent.html":{},"index.html":{}}}],["rxjs",{"_index":373,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"injectables/TransferService.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"dependencies.html":{}}}],["rôzne",{"_index":2002,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["s",{"_index":898,"title":{},"body":{"components/FooterComponent.html":{}}}],["sa",{"_index":2018,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["save",{"_index":1199,"title":{},"body":{"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{},"injectables/UtilsService.html":{}}}],["savetoken",{"_index":2125,"title":{},"body":{"injectables/UtilsService.html":{}}}],["savetoken(token",{"_index":2134,"title":{},"body":{"injectables/UtilsService.html":{}}}],["scaffolding",{"_index":2272,"title":{},"body":{"index.html":{}}}],["scenario",{"_index":458,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupSettingsComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewTasksComponent.html":{},"classes/TaskPreview.html":{}}}],["scenario.description",{"_index":1536,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["scenario.name",{"_index":688,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PreviewScenariosComponent.html":{}}}],["scenario_creation_subscription",{"_index":432,"title":{},"body":{"components/CreateQuizComponent.html":{}}}],["scenario_subscription",{"_index":606,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["scenarioid",{"_index":674,"title":{},"body":{"components/CreateTaskComponent.html":{},"classes/TaskCreation.html":{}}}],["scenariopreview",{"_index":643,"title":{"classes/ScenarioPreview.html":{}},"body":{"components/CreateTaskComponent.html":{},"components/PreviewScenariosComponent.html":{},"classes/ScenarioPreview.html":{},"classes/TaskPreview.html":{},"coverage.html":{}}}],["scenarios",{"_index":426,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateTaskComponent.html":{},"components/PreviewScenariosComponent.html":{}}}],["scenarios'},{'name",{"_index":76,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["scenarios.component",{"_index":240,"title":{},"body":{"modules/AppModule.html":{},"components/CreateTaskComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["scenarios.component.css",{"_index":1510,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["scenarios.component.html",{"_index":1511,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["scenarios.component.ts",{"_index":1509,"title":{},"body":{"components/PreviewScenariosComponent.html":{},"coverage.html":{}}}],["scenarios.component.ts:20",{"_index":1529,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["scenarios.component.ts:25",{"_index":1527,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["scenarios.component.ts:30",{"_index":1516,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["scenarios.component.ts:39",{"_index":1528,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["scenarios.component.ts:45",{"_index":1521,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["scenarios.component.ts:54",{"_index":1520,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["scenarios.component.ts:61",{"_index":1525,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["scenarios.component.ts:73",{"_index":1518,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["scenarios.component.ts:85",{"_index":1517,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["scenarios/preview",{"_index":239,"title":{},"body":{"modules/AppModule.html":{},"components/CreateTaskComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewTasksComponent.html":{},"coverage.html":{}}}],["scene",{"_index":574,"title":{},"body":{"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/SceneComponent.html":{},"classes/TaskPreview.html":{}}}],["scene'},{'name",{"_index":44,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["scene.component",{"_index":243,"title":{},"body":{"modules/AppModule.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["scene.component.css",{"_index":575,"title":{},"body":{"components/CreateSceneComponent.html":{},"components/PreviewSceneComponent.html":{},"components/SceneComponent.html":{}}}],["scene.component.html",{"_index":576,"title":{},"body":{"components/CreateSceneComponent.html":{},"components/PreviewSceneComponent.html":{},"components/SceneComponent.html":{}}}],["scene.component.ts",{"_index":571,"title":{},"body":{"components/CreateSceneComponent.html":{},"components/PreviewSceneComponent.html":{},"coverage.html":{}}}],["scene.component.ts:103",{"_index":587,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["scene.component.ts:127",{"_index":586,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["scene.component.ts:136",{"_index":585,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["scene.component.ts:20",{"_index":1537,"title":{},"body":{"components/PreviewSceneComponent.html":{}}}],["scene.component.ts:21",{"_index":589,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["scene.component.ts:27",{"_index":579,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["scene.component.ts:29",{"_index":1541,"title":{},"body":{"components/PreviewSceneComponent.html":{}}}],["scene.component.ts:35",{"_index":1540,"title":{},"body":{"components/PreviewSceneComponent.html":{}}}],["scene.component.ts:40",{"_index":1539,"title":{},"body":{"components/PreviewSceneComponent.html":{}}}],["scene.component.ts:42",{"_index":590,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["scene.component.ts:47",{"_index":1538,"title":{},"body":{"components/PreviewSceneComponent.html":{}}}],["scene.component.ts:49",{"_index":591,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["scene.component.ts:56",{"_index":592,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["scene.component.ts:63",{"_index":594,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["scene.component.ts:70",{"_index":582,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["scene.component.ts:79",{"_index":581,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["scene.component.ts:86",{"_index":580,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["scene.component.ts:94",{"_index":584,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["scene.description",{"_index":1545,"title":{},"body":{"components/PreviewSceneComponent.html":{}}}],["scene.name",{"_index":690,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PreviewSceneComponent.html":{}}}],["scene/create",{"_index":242,"title":{},"body":{"modules/AppModule.html":{},"components/CreateSceneComponent.html":{},"components/DashboardComponent.html":{},"coverage.html":{}}}],["scene/preview",{"_index":250,"title":{},"body":{"modules/AppModule.html":{},"components/CreateTaskComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"coverage.html":{}}}],["scene_creation_subscription",{"_index":577,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["scene_subscription",{"_index":607,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["scene_url",{"_index":1260,"title":{},"body":{"components/JoinQuizComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["scenecomponent",{"_index":84,"title":{"components/SceneComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["sceneel",{"_index":2308,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sceneel.appendchild(entityel",{"_index":2320,"title":{},"body":{"miscellaneous/variables.html":{}}}],["sceneid",{"_index":676,"title":{},"body":{"components/CreateTaskComponent.html":{},"classes/TaskCreation.html":{}}}],["scenepreview",{"_index":647,"title":{"classes/ScenePreview.html":{}},"body":{"components/CreateTaskComponent.html":{},"components/PreviewSceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskPreview.html":{},"coverage.html":{}}}],["scenes",{"_index":573,"title":{},"body":{"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{}}}],["schemas",{"_index":172,"title":{},"body":{"modules/AppModule.html":{}}}],["score",{"_index":1249,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["screen",{"_index":1504,"title":{},"body":{"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{}}}],["scripts/scenescript",{"_index":1414,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["scroll",{"_index":696,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["sec",{"_index":824,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["secondarybutton",{"_index":1369,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["secondarytext",{"_index":989,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/UserProfileComponent.html":{}}}],["secondcol",{"_index":1494,"title":{},"body":{"components/NavbarComponent.html":{}}}],["seconds",{"_index":821,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["see",{"_index":2024,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["select",{"_index":1263,"title":{},"body":{"components/JoinQuizComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["selected",{"_index":1588,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["selectedlanguages",{"_index":1552,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["selectionboxes",{"_index":2033,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["selector",{"_index":17,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["self",{"_index":1354,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["send",{"_index":439,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupsPreviewComponent.html":{}}}],["sends",{"_index":450,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["sent",{"_index":536,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{}}}],["serve",{"_index":2265,"title":{},"body":{"index.html":{}}}],["server",{"_index":451,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"index.html":{}}}],["service",{"_index":1000,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/NavbarComponent.html":{},"injectables/TransferService.html":{},"injectables/UtilsService.html":{}}}],["services/backend.service",{"_index":500,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["services/transfer.service",{"_index":1013,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["services/utils.service",{"_index":206,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{}}}],["session",{"_index":768,"title":{},"body":{"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"coverage.html":{}}}],["session.finishedat",{"_index":977,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{}}}],["session.taskname",{"_index":976,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{}}}],["session.username",{"_index":981,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["sessiondata",{"_index":789,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["sessiondata.finishedat",{"_index":1857,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["sessiondata.startedat",{"_index":1854,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["sessiondata.taskname",{"_index":1853,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["sessiondata.username",{"_index":1852,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["sessionid",{"_index":767,"title":{},"body":{"interfaces/FiringAttempt.html":{},"components/TaskHistoryComponent.html":{}}}],["sessions",{"_index":932,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{}}}],["sessions'},{'name",{"_index":56,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["sessions.component",{"_index":274,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{}}}],["sessions.component.css",{"_index":933,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["sessions.component.html",{"_index":934,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["sessions.component.ts",{"_index":931,"title":{},"body":{"components/GroupSessionsComponent.html":{},"coverage.html":{}}}],["sessions.component.ts:103",{"_index":954,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["sessions.component.ts:20",{"_index":957,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["sessions.component.ts:25",{"_index":963,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["sessions.component.ts:30",{"_index":962,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["sessions.component.ts:35",{"_index":956,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["sessions.component.ts:40",{"_index":960,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["sessions.component.ts:45",{"_index":961,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["sessions.component.ts:50",{"_index":942,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["sessions.component.ts:68",{"_index":952,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["sessions.component.ts:71",{"_index":951,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["sessions.component.ts:77",{"_index":947,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["sessions.component.ts:84",{"_index":955,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["sessions.component.ts:93",{"_index":950,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["sessions/group",{"_index":273,"title":{},"body":{"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/GroupSessionsComponent.html":{},"coverage.html":{}}}],["set",{"_index":1524,"title":{},"body":{"components/PreviewScenariosComponent.html":{},"dependencies.html":{}}}],["settimeout",{"_index":2349,"title":{},"body":{"miscellaneous/variables.html":{}}}],["settings",{"_index":97,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["settings'},{'name",{"_index":58,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["settings.component",{"_index":226,"title":{},"body":{"modules/AppModule.html":{},"components/UserProfileComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["settings.component.css",{"_index":991,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["settings.component.html",{"_index":992,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["settings.component.ts",{"_index":990,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{},"coverage.html":{}}}],["settings.component.ts:106",{"_index":2060,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["settings.component.ts:108",{"_index":1657,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["settings.component.ts:115",{"_index":2062,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["settings.component.ts:116",{"_index":1004,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["settings.component.ts:117",{"_index":1659,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["settings.component.ts:124",{"_index":2046,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["settings.component.ts:126",{"_index":1005,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/ProfileSettingsComponent.html":{}}}],["settings.component.ts:132",{"_index":2048,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["settings.component.ts:135",{"_index":1639,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["settings.component.ts:148",{"_index":1638,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["settings.component.ts:151",{"_index":2047,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["settings.component.ts:156",{"_index":1646,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["settings.component.ts:160",{"_index":2050,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["settings.component.ts:191",{"_index":2045,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["settings.component.ts:206",{"_index":1644,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["settings.component.ts:217",{"_index":2049,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["settings.component.ts:221",{"_index":1641,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["settings.component.ts:232",{"_index":1642,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["settings.component.ts:25",{"_index":1008,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["settings.component.ts:27",{"_index":1648,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["settings.component.ts:28",{"_index":2052,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["settings.component.ts:30",{"_index":1009,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["settings.component.ts:32",{"_index":1635,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["settings.component.ts:33",{"_index":2055,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["settings.component.ts:35",{"_index":999,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["settings.component.ts:38",{"_index":2053,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["settings.component.ts:43",{"_index":2054,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["settings.component.ts:44",{"_index":1647,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["settings.component.ts:48",{"_index":2043,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["settings.component.ts:53",{"_index":1007,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["settings.component.ts:54",{"_index":1649,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["settings.component.ts:58",{"_index":1011,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["settings.component.ts:60",{"_index":2051,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["settings.component.ts:63",{"_index":1651,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["settings.component.ts:67",{"_index":1012,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["settings.component.ts:70",{"_index":2056,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["settings.component.ts:72",{"_index":1636,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["settings.component.ts:77",{"_index":1003,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["settings.component.ts:79",{"_index":1637,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["settings.component.ts:87",{"_index":1002,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["settings.component.ts:88",{"_index":2058,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["settings.component.ts:90",{"_index":1653,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["settings.component.ts:94",{"_index":1001,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["settings.component.ts:97",{"_index":2059,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["settings.component.ts:99",{"_index":1655,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["settings/group",{"_index":260,"title":{},"body":{"modules/AppModule.html":{},"components/GroupSettingsComponent.html":{},"coverage.html":{}}}],["settings/profile",{"_index":225,"title":{},"body":{"modules/AppModule.html":{},"components/ProfileSettingsComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["settings/user",{"_index":235,"title":{},"body":{"modules/AppModule.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{}}}],["shader",{"_index":2406,"title":{},"body":{"miscellaneous/variables.html":{}}}],["shadow",{"_index":737,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{}}}],["shadow(0px",{"_index":1363,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["show",{"_index":473,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSessionsComponent.html":{},"components/LoginComponent.html":{}}}],["showfailmessage",{"_index":2198,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["showfinalmessage",{"_index":2199,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["showmenu",{"_index":1444,"title":{},"body":{"components/NavbarComponent.html":{}}}],["shows",{"_index":1454,"title":{},"body":{"components/NavbarComponent.html":{}}}],["showscene",{"_index":108,"title":{},"body":{"components/AppComponent.html":{}}}],["showtaskpanel",{"_index":2200,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["showtaskpanel(placename",{"_index":2324,"title":{},"body":{"miscellaneous/variables.html":{}}}],["side",{"_index":1456,"title":{},"body":{"components/NavbarComponent.html":{},"miscellaneous/variables.html":{}}}],["sidebar",{"_index":1489,"title":{},"body":{"components/NavbarComponent.html":{}}}],["signing",{"_index":1294,"title":{},"body":{"components/LoginComponent.html":{}}}],["sim",{"_index":1427,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["single",{"_index":487,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["size",{"_index":542,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/FooterComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{}}}],["sk",{"_index":1266,"title":{},"body":{"components/JoinQuizComponent.html":{}}}],["skúsenosti",{"_index":2004,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["slide",{"_index":691,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["snack",{"_index":452,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["snackbar",{"_index":1035,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["snackbarref",{"_index":1700,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{}}}],["snackbarref.onaction().subscribe",{"_index":1764,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["solid",{"_index":548,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["source",{"_index":4,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"guards/RoleGuard.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{},"index.html":{}}}],["space",{"_index":147,"title":{},"body":{"components/AppComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{}}}],["správna",{"_index":2343,"title":{},"body":{"miscellaneous/variables.html":{}}}],["spôsobom",{"_index":2023,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["src/.../constants.ts",{"_index":2307,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../scenescript.ts",{"_index":2306,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app/app",{"_index":279,"title":{},"body":{"modules/AppRoutingModule.html":{}}}],["src/app/app.component.ts",{"_index":102,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/app/app.component.ts:10",{"_index":124,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.component.ts:11",{"_index":114,"title":{},"body":{"components/AppComponent.html":{}}}],["src/app/app.module.ts",{"_index":170,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app/components/about/about.component.ts",{"_index":10,"title":{},"body":{"components/AboutComponent.html":{},"coverage.html":{}}}],["src/app/components/auth/auth.guard.ts",{"_index":307,"title":{},"body":{"guards/AuthGuard.html":{},"coverage.html":{}}}],["src/app/components/auth/auth.guard.ts:12",{"_index":320,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/components/auth/auth.guard.ts:28",{"_index":330,"title":{},"body":{"guards/AuthGuard.html":{}}}],["src/app/components/auth/auth.interceptor.ts",{"_index":356,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"coverage.html":{}}}],["src/app/components/auth/auth.interceptor.ts:13",{"_index":362,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/components/auth/auth.interceptor.ts:19",{"_index":367,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["src/app/components/auth/role.guard.ts",{"_index":1777,"title":{},"body":{"guards/RoleGuard.html":{},"coverage.html":{}}}],["src/app/components/auth/role.guard.ts:11",{"_index":1778,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/components/auth/role.guard.ts:25",{"_index":1779,"title":{},"body":{"guards/RoleGuard.html":{}}}],["src/app/components/create",{"_index":422,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/dashboard.component.ts",{"_index":702,"title":{},"body":{"components/DashboardComponent.html":{},"coverage.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:16",{"_index":712,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:26",{"_index":719,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:30",{"_index":718,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:37",{"_index":713,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:45",{"_index":714,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:53",{"_index":715,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:61",{"_index":720,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:69",{"_index":717,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dashboard/dashboard.component.ts:77",{"_index":716,"title":{},"body":{"components/DashboardComponent.html":{}}}],["src/app/components/dialogs/confirmation",{"_index":382,"title":{},"body":{"components/ConfirmationDialog.html":{},"coverage.html":{}}}],["src/app/components/footer/footer.component.ts",{"_index":880,"title":{},"body":{"components/FooterComponent.html":{},"coverage.html":{}}}],["src/app/components/group",{"_index":930,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"coverage.html":{}}}],["src/app/components/groups",{"_index":1056,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"coverage.html":{}}}],["src/app/components/history",{"_index":1227,"title":{},"body":{"components/HistoryQuizComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts",{"_index":1251,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/app/components/home/home.component.ts:13",{"_index":1254,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:17",{"_index":1256,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/home/home.component.ts:21",{"_index":1255,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/app/components/join",{"_index":1257,"title":{},"body":{"components/JoinQuizComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts",{"_index":1278,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/app/components/login/login.component.ts:119",{"_index":1288,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:134",{"_index":1298,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:144",{"_index":1300,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:25",{"_index":1301,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:30",{"_index":1302,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:35",{"_index":1287,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:52",{"_index":1305,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:61",{"_index":1307,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:71",{"_index":1296,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:79",{"_index":1295,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/login/login.component.ts:87",{"_index":1292,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts",{"_index":1435,"title":{},"body":{"components/NavbarComponent.html":{},"coverage.html":{}}}],["src/app/components/navbar/navbar.component.ts:18",{"_index":1458,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:23",{"_index":1459,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:28",{"_index":1461,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:33",{"_index":1460,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:38",{"_index":1445,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:54",{"_index":1450,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:72",{"_index":1449,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:80",{"_index":1453,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:84",{"_index":1446,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/navbar/navbar.component.ts:91",{"_index":1447,"title":{},"body":{"components/NavbarComponent.html":{}}}],["src/app/components/preview",{"_index":1508,"title":{},"body":{"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"coverage.html":{}}}],["src/app/components/profile",{"_index":1627,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"coverage.html":{}}}],["src/app/components/registration/registration.component.ts",{"_index":1721,"title":{},"body":{"components/RegistrationComponent.html":{},"coverage.html":{}}}],["src/app/components/registration/registration.component.ts:104",{"_index":1731,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:115",{"_index":1730,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:123",{"_index":1734,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:150",{"_index":1732,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:164",{"_index":1733,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:23",{"_index":1735,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:28",{"_index":1737,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:30",{"_index":1736,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:35",{"_index":1729,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:50",{"_index":1742,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:59",{"_index":1743,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:68",{"_index":1744,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:77",{"_index":1745,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:86",{"_index":1746,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/registration/registration.component.ts:95",{"_index":1748,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["src/app/components/task",{"_index":753,"title":{},"body":{"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"coverage.html":{}}}],["src/app/components/tasks/scenes/muzeum_extended/scene.component.ts",{"_index":1794,"title":{},"body":{"components/SceneComponent.html":{},"coverage.html":{}}}],["src/app/components/tasks/scenes/muzeum_extended/scene.component.ts:28",{"_index":1798,"title":{},"body":{"components/SceneComponent.html":{}}}],["src/app/components/tasks/scenes/muzeum_extended/scene.component.ts:31",{"_index":1800,"title":{},"body":{"components/SceneComponent.html":{}}}],["src/app/components/tasks/scenes/muzeum_extended/scene.component.ts:32",{"_index":1797,"title":{},"body":{"components/SceneComponent.html":{}}}],["src/app/components/tasks/scenes/muzeum_extended/scene.component.ts:34",{"_index":1799,"title":{},"body":{"components/SceneComponent.html":{}}}],["src/app/components/tasks/scenes/muzeum_extended/scene.component.ts:35",{"_index":1795,"title":{},"body":{"components/SceneComponent.html":{}}}],["src/app/components/tasks/scenes/muzeum_extended/scene.component.ts:53",{"_index":1796,"title":{},"body":{"components/SceneComponent.html":{}}}],["src/app/components/tasks/scenes/muzeum_extended/scripts/scenescript.ts",{"_index":2191,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/tasks/scenes/muzeum_habsbourg/muzeum_habsbourg.component.ts",{"_index":1387,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"coverage.html":{}}}],["src/app/components/tasks/scenes/muzeum_habsbourg/muzeum_habsbourg.component.ts:28",{"_index":1399,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{}}}],["src/app/components/tasks/scenes/muzeum_habsbourg/muzeum_habsbourg.component.ts:31",{"_index":1401,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{}}}],["src/app/components/tasks/scenes/muzeum_habsbourg/muzeum_habsbourg.component.ts:32",{"_index":1396,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{}}}],["src/app/components/tasks/scenes/muzeum_habsbourg/muzeum_habsbourg.component.ts:34",{"_index":1400,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{}}}],["src/app/components/tasks/scenes/muzeum_habsbourg/muzeum_habsbourg.component.ts:35",{"_index":1394,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{}}}],["src/app/components/tasks/scenes/muzeum_habsbourg/muzeum_habsbourg.component.ts:53",{"_index":1395,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{}}}],["src/app/components/tasks/scenes/muzeum_habsbourg/scripts/scenescript.ts",{"_index":2202,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/components/user",{"_index":1962,"title":{},"body":{"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"coverage.html":{}}}],["src/app/components/users",{"_index":2083,"title":{},"body":{"components/UsersDashboardComponent.html":{},"coverage.html":{}}}],["src/app/constants.ts",{"_index":2206,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/app/models/group",{"_index":1044,"title":{},"body":{"classes/GroupTasks.html":{},"coverage.html":{}}}],["src/app/models/group.model",{"_index":2063,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["src/app/models/group.model.ts",{"_index":924,"title":{},"body":{"classes/Group.html":{},"coverage.html":{}}}],["src/app/models/group.model.ts:2",{"_index":928,"title":{},"body":{"classes/Group.html":{}}}],["src/app/models/group.model.ts:3",{"_index":927,"title":{},"body":{"classes/Group.html":{}}}],["src/app/models/login",{"_index":1380,"title":{},"body":{"classes/LoginRequest.html":{},"coverage.html":{}}}],["src/app/models/profile",{"_index":1708,"title":{},"body":{"classes/ProfileUpdate.html":{},"coverage.html":{}}}],["src/app/models/registration",{"_index":1769,"title":{},"body":{"classes/RegistrationRequest.html":{},"coverage.html":{}}}],["src/app/models/scenario",{"_index":1786,"title":{},"body":{"classes/ScenarioPreview.html":{},"coverage.html":{}}}],["src/app/models/scene",{"_index":1803,"title":{},"body":{"classes/ScenePreview.html":{},"coverage.html":{}}}],["src/app/models/task",{"_index":1805,"title":{},"body":{"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"coverage.html":{}}}],["src/app/models/user",{"_index":1953,"title":{},"body":{"classes/UserProfile.html":{},"coverage.html":{}}}],["src/app/services/backend.service.ts",{"_index":2209,"title":{},"body":{"coverage.html":{}}}],["src/app/services/transfer.service.ts",{"_index":1897,"title":{},"body":{"injectables/TransferService.html":{},"coverage.html":{}}}],["src/app/services/transfer.service.ts:14",{"_index":1935,"title":{},"body":{"injectables/TransferService.html":{}}}],["src/app/services/transfer.service.ts:15",{"_index":1934,"title":{},"body":{"injectables/TransferService.html":{}}}],["src/app/services/transfer.service.ts:17",{"_index":1938,"title":{},"body":{"injectables/TransferService.html":{}}}],["src/app/services/transfer.service.ts:18",{"_index":1937,"title":{},"body":{"injectables/TransferService.html":{}}}],["src/app/services/transfer.service.ts:20",{"_index":1941,"title":{},"body":{"injectables/TransferService.html":{}}}],["src/app/services/transfer.service.ts:21",{"_index":1940,"title":{},"body":{"injectables/TransferService.html":{}}}],["src/app/services/transfer.service.ts:23",{"_index":1946,"title":{},"body":{"injectables/TransferService.html":{}}}],["src/app/services/transfer.service.ts:24",{"_index":1945,"title":{},"body":{"injectables/TransferService.html":{}}}],["src/app/services/transfer.service.ts:26",{"_index":1932,"title":{},"body":{"injectables/TransferService.html":{}}}],["src/app/services/transfer.service.ts:27",{"_index":1930,"title":{},"body":{"injectables/TransferService.html":{}}}],["src/app/services/transfer.service.ts:29",{"_index":1943,"title":{},"body":{"injectables/TransferService.html":{}}}],["src/app/services/transfer.service.ts:30",{"_index":1916,"title":{},"body":{"injectables/TransferService.html":{}}}],["src/app/services/transfer.service.ts:35",{"_index":1924,"title":{},"body":{"injectables/TransferService.html":{}}}],["src/app/services/transfer.service.ts:39",{"_index":1920,"title":{},"body":{"injectables/TransferService.html":{}}}],["src/app/services/transfer.service.ts:43",{"_index":1922,"title":{},"body":{"injectables/TransferService.html":{}}}],["src/app/services/transfer.service.ts:47",{"_index":1928,"title":{},"body":{"injectables/TransferService.html":{}}}],["src/app/services/transfer.service.ts:51",{"_index":1918,"title":{},"body":{"injectables/TransferService.html":{}}}],["src/app/services/transfer.service.ts:55",{"_index":1926,"title":{},"body":{"injectables/TransferService.html":{}}}],["src/app/services/utils.service.ts",{"_index":2120,"title":{},"body":{"injectables/UtilsService.html":{},"coverage.html":{}}}],["src/app/services/utils.service.ts:10",{"_index":2127,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/services/utils.service.ts:19",{"_index":2135,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/services/utils.service.ts:26",{"_index":2133,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/services/utils.service.ts:35",{"_index":2132,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/services/utils.service.ts:47",{"_index":2131,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/services/utils.service.ts:55",{"_index":2129,"title":{},"body":{"injectables/UtilsService.html":{}}}],["src/app/services/utils.service.ts:67",{"_index":2137,"title":{},"body":{"injectables/UtilsService.html":{}}}],["stage",{"_index":608,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["stages",{"_index":650,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["start",{"_index":698,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{}}}],["started",{"_index":1561,"title":{"index.html":{}},"body":{"components/PreviewTasksComponent.html":{}}}],["startedat",{"_index":808,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{},"classes/TaskSessionInfo.html":{}}}],["starttask",{"_index":1557,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["starttask(i",{"_index":1577,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["state",{"_index":328,"title":{},"body":{"guards/AuthGuard.html":{},"components/GroupSessionsComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{}}}],["state.url",{"_index":347,"title":{},"body":{"guards/AuthGuard.html":{}}}],["statements",{"_index":2154,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":1812,"title":{},"body":{"classes/TaskFiles.html":{}}}],["statistics",{"_index":827,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["statistics'},{'name",{"_index":91,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["statistics.component",{"_index":270,"title":{},"body":{"modules/AppModule.html":{}}}],["statistics.component.css",{"_index":862,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["statistics.component.html",{"_index":861,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["statistics.component.ts",{"_index":859,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{},"coverage.html":{}}}],["statistics.component.ts:25",{"_index":1873,"title":{},"body":{"components/TaskHistoryStatisticsComponent.html":{}}}],["statistics.component.ts:30",{"_index":1878,"title":{},"body":{"components/TaskHistoryStatisticsComponent.html":{}}}],["statistics.component.ts:35",{"_index":1875,"title":{},"body":{"components/TaskHistoryStatisticsComponent.html":{}}}],["statistics.component.ts:40",{"_index":1876,"title":{},"body":{"components/TaskHistoryStatisticsComponent.html":{}}}],["statistics.component.ts:45",{"_index":1877,"title":{},"body":{"components/TaskHistoryStatisticsComponent.html":{}}}],["statistics.component.ts:50",{"_index":1874,"title":{},"body":{"components/TaskHistoryStatisticsComponent.html":{}}}],["statistics/task",{"_index":269,"title":{},"body":{"modules/AppModule.html":{},"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{},"coverage.html":{}}}],["status",{"_index":826,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["storage",{"_index":316,"title":{},"body":{"guards/AuthGuard.html":{},"components/HistoryQuizComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/UserProfileComponent.html":{},"injectables/UtilsService.html":{}}}],["stored",{"_index":2278,"title":{},"body":{"index.html":{}}}],["string",{"_index":121,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"classes/Group.html":{},"classes/GroupTasks.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"classes/RegistrationRequest.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserSettingsComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["string(!taskpanel.getattribute('visible",{"_index":2359,"title":{},"body":{"miscellaneous/variables.html":{}}}],["student",{"_index":1172,"title":{},"body":{"components/GroupsModificationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["style=\"display",{"_index":1622,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["styles",{"_index":6,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["styleurls",{"_index":19,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["subject",{"_index":1931,"title":{},"body":{"injectables/TransferService.html":{}}}],["submits",{"_index":475,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{}}}],["subscribe",{"_index":1080,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["subscription",{"_index":489,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["success",{"_index":1036,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["successful",{"_index":471,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["successfull",{"_index":769,"title":{},"body":{"interfaces/FiringAttempt.html":{},"components/TaskHistoryComponent.html":{}}}],["successfully",{"_index":535,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["super",{"_index":1053,"title":{},"body":{"classes/GroupTasks.html":{},"dependencies.html":{}}}],["super(init",{"_index":1720,"title":{},"body":{"classes/ProfileUpdate.html":{}}}],["support",{"_index":2297,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":409,"title":{},"body":{"components/ConfirmationDialog.html":{}}}],["svg",{"_index":2298,"title":{},"body":{"modules.html":{}}}],["system",{"_index":15,"title":{},"body":{"components/AboutComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{},"dependencies.html":{}}}],["t.id",{"_index":1195,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["t.scenario.languages[0",{"_index":1600,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["table",{"_index":1093,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":2214,"title":{},"body":{"coverage.html":{}}}],["take",{"_index":1271,"title":{},"body":{"components/JoinQuizComponent.html":{}}}],["targets",{"_index":2364,"title":{},"body":{"miscellaneous/variables.html":{}}}],["task",{"_index":86,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["task'},{'name",{"_index":46,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["task.component",{"_index":245,"title":{},"body":{"modules/AppModule.html":{},"components/DashboardComponent.html":{}}}],["task.component.css",{"_index":604,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.html",{"_index":605,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts",{"_index":602,"title":{},"body":{"components/CreateTaskComponent.html":{},"coverage.html":{}}}],["task.component.ts:101",{"_index":626,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:117",{"_index":625,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:125",{"_index":617,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:132",{"_index":638,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:157",{"_index":637,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:166",{"_index":636,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:176",{"_index":618,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:183",{"_index":621,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:190",{"_index":623,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:198",{"_index":631,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:206",{"_index":635,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:26",{"_index":648,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:31",{"_index":644,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:36",{"_index":649,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:42",{"_index":639,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:47",{"_index":646,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:52",{"_index":640,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:57",{"_index":616,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:73",{"_index":652,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:80",{"_index":653,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:87",{"_index":655,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.component.ts:94",{"_index":657,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task.description",{"_index":1621,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["task.id",{"_index":1194,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["task.name",{"_index":1039,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["task/create",{"_index":244,"title":{},"body":{"modules/AppModule.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"coverage.html":{}}}],["task_creation_subscription",{"_index":609,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["task_files_subscription",{"_index":1390,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/PreviewTasksComponent.html":{},"components/SceneComponent.html":{}}}],["task_sessions_subscription",{"_index":937,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{}}}],["taskcreation",{"_index":661,"title":{"classes/TaskCreation.html":{}},"body":{"components/CreateTaskComponent.html":{},"classes/TaskCreation.html":{},"coverage.html":{}}}],["taskfiles",{"_index":1391,"title":{"classes/TaskFiles.html":{}},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{},"classes/TaskFiles.html":{},"coverage.html":{}}}],["taskfiles.decode(this.taskfiles",{"_index":1425,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["taskfiles.languagefile",{"_index":1823,"title":{},"body":{"classes/TaskFiles.html":{}}}],["taskfiles.pnmlfile",{"_index":1819,"title":{},"body":{"classes/TaskFiles.html":{}}}],["taskhistorycomponent",{"_index":85,"title":{"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{}}}],["taskhistoryextendedcomponent",{"_index":88,"title":{"components/TaskHistoryExtendedComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt-2.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskhistorystatisticscomponent",{"_index":90,"title":{"components/TaskHistoryStatisticsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["taskid",{"_index":1392,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{},"classes/TaskRequest.html":{}}}],["taskname",{"_index":1889,"title":{},"body":{"classes/TaskSessionInfo.html":{}}}],["tasknames",{"_index":1006,"title":{"classes/TaskNames.html":{}},"body":{"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsModificationComponent.html":{},"classes/TaskNames.html":{},"coverage.html":{}}}],["taskpanel",{"_index":2356,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskpanel.children.item(2).classlist.toggle('interactible",{"_index":2360,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskpanel.setattribute('visible",{"_index":2358,"title":{},"body":{"miscellaneous/variables.html":{}}}],["taskpreview",{"_index":1579,"title":{"classes/TaskPreview.html":{}},"body":{"components/PreviewTasksComponent.html":{},"classes/TaskPreview.html":{},"coverage.html":{}}}],["taskrequest",{"_index":1411,"title":{"classes/TaskRequest.html":{}},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{},"classes/TaskRequest.html":{},"coverage.html":{}}}],["tasks",{"_index":603,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{}}}],["tasks'},{'name",{"_index":79,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["tasks.component",{"_index":252,"title":{},"body":{"modules/AppModule.html":{},"components/UserProfileComponent.html":{}}}],["tasks.component.css",{"_index":1548,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.html",{"_index":1549,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts",{"_index":1546,"title":{},"body":{"components/PreviewTasksComponent.html":{},"coverage.html":{}}}],["tasks.component.ts:107",{"_index":1562,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:114",{"_index":1576,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:123",{"_index":1566,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:133",{"_index":1573,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:141",{"_index":1575,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:149",{"_index":1578,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:161",{"_index":1570,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:169",{"_index":1564,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:181",{"_index":1560,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:25",{"_index":1592,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:30",{"_index":1580,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:35",{"_index":1587,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:40",{"_index":1593,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:45",{"_index":1590,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:50",{"_index":1581,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:56",{"_index":1586,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:61",{"_index":1584,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:66",{"_index":1585,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:71",{"_index":1558,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:88",{"_index":1568,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.component.ts:99",{"_index":1567,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasks.model",{"_index":1016,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"injectables/TransferService.html":{}}}],["tasks.model.ts",{"_index":1045,"title":{},"body":{"classes/GroupTasks.html":{},"coverage.html":{}}}],["tasks.model.ts:5",{"_index":1048,"title":{},"body":{"classes/GroupTasks.html":{}}}],["tasks/preview",{"_index":251,"title":{},"body":{"modules/AppModule.html":{},"components/PreviewTasksComponent.html":{},"components/UserProfileComponent.html":{},"coverage.html":{}}}],["tasks_preview_subscription",{"_index":1553,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["tasksessionfinishrequest",{"_index":1594,"title":{"classes/TaskSessionFinishRequest.html":{}},"body":{"components/PreviewTasksComponent.html":{},"classes/TaskSessionFinishRequest.html":{},"coverage.html":{}}}],["tasksessionid",{"_index":1615,"title":{},"body":{"components/PreviewTasksComponent.html":{},"classes/TaskSessionFinishRequest.html":{}}}],["tasksessioninfo",{"_index":781,"title":{"classes/TaskSessionInfo.html":{}},"body":{"interfaces/FiringAttempt-1.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/TaskHistoryComponent-1.html":{},"classes/TaskSessionInfo.html":{},"coverage.html":{}}}],["taskssubscription",{"_index":995,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{}}}],["td",{"_index":1835,"title":{},"body":{"components/TaskHistoryComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["teacher",{"_index":302,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/GroupsModificationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["teachers",{"_index":2028,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["technick",{"_index":913,"title":{},"body":{"components/FooterComponent.html":{}}}],["technológie",{"_index":904,"title":{},"body":{"components/FooterComponent.html":{},"components/UserProfileComponent.html":{}}}],["tefan",{"_index":892,"title":{},"body":{"components/FooterComponent.html":{}}}],["template",{"_index":5,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["templateurl",{"_index":21,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["tento",{"_index":895,"title":{},"body":{"components/FooterComponent.html":{}}}],["test",{"_index":1264,"title":{},"body":{"components/JoinQuizComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"index.html":{}}}],["testik",{"_index":1480,"title":{},"body":{"components/NavbarComponent.html":{}}}],["testing",{"_index":2291,"title":{},"body":{"index.html":{}}}],["tests",{"_index":2281,"title":{},"body":{"index.html":{}}}],["text",{"_index":734,"title":{},"body":{"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/UserProfileComponent.html":{}}}],["th",{"_index":1836,"title":{},"body":{"components/TaskHistoryComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["this._client.creategroup(group).subscribe",{"_index":1029,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["this._client.deletegroupbyid(id).subscribe",{"_index":1139,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["this._client.fetchgroupswithtasks().subscribe(data",{"_index":1110,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["this._client.fetchprofile().subscribe(profile",{"_index":1325,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._client.fetchtasknames().subscribe(data",{"_index":1021,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{}}}],["this._client.finishtasksession(request).subscribe",{"_index":1619,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["this._client.getallusers().subscribe(users",{"_index":2109,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["this._client.getfiringattempts(this.sessiondata.id).subscribe(data",{"_index":801,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["this._client.getfiringattempts(this.sessionid).subscribe(data",{"_index":776,"title":{},"body":{"interfaces/FiringAttempt.html":{},"components/TaskHistoryComponent.html":{}}}],["this._client.getgroups().subscribe(data",{"_index":2070,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this._client.getscenariospreview().subscribe(data",{"_index":670,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this._client.getscenespreview().subscribe(data",{"_index":667,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this._client.gettaskfiles(request).subscribe(data",{"_index":1423,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["this._client.gettasksessionsinfo(this.profile.id).subscribe(data",{"_index":1245,"title":{},"body":{"components/HistoryQuizComponent.html":{}}}],["this._client.gettasksessionsinfobygroups(this.groupid).subscribe(data",{"_index":967,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["this._client.gettaskspreview(this.profile.id).subscribe(data",{"_index":1596,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["this._client.login(request).subscribe",{"_index":1320,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._client.register(request).subscribe",{"_index":1759,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this._client.savescenario(formdata).subscribe",{"_index":521,"title":{},"body":{"components/CreateQuizComponent.html":{}}}],["this._client.savescene(formdata).subscribe",{"_index":600,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["this._client.savetask(task).subscribe",{"_index":679,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this._client.updategroupfromdashboard(group).subscribe",{"_index":1186,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["this._client.updateprofile(profile).subscribe",{"_index":1690,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["this._client.updateuserfromdashboard(profile).subscribe",{"_index":2075,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this._dialog.open(confirmationdialog",{"_index":1133,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["this._dialog.open(groupsmodificationcomponent",{"_index":1132,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["this._groups",{"_index":2071,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this._groups.foreach((group",{"_index":2078,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this._route.navigate([\"/dashboard\"]).then",{"_index":1225,"title":{},"body":{"components/GroupsPreviewComponent.html":{}}}],["this._route.navigate([\"/dashboard/group/sessions",{"_index":1223,"title":{},"body":{"components/GroupsPreviewComponent.html":{}}}],["this._route.params.subscribe(params",{"_index":771,"title":{},"body":{"interfaces/FiringAttempt.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{}}}],["this._router.getcurrentnavigation().extras.state.data",{"_index":965,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["this._router.navigate([\"/history/session",{"_index":974,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{}}}],["this._router.navigate([\"/login\"]).then(r",{"_index":1765,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this._router.navigate(['/dashboard/groups",{"_index":726,"title":{},"body":{"components/DashboardComponent.html":{},"components/GroupSessionsComponent.html":{}}}],["this._router.navigate(['/dashboard/groups']).then",{"_index":725,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this._router.navigate(['/dashboard/users']).then",{"_index":724,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this._router.navigate(['/login']).then(r",{"_index":353,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._router.navigate(['/user/profile']).then(r",{"_index":348,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._router.navigate([`/${this.tasks[i].scene.foldername}/task/${this.tasks[i].id}/${this.selectedlanguages[i]}`]).then",{"_index":1611,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["this._router.navigatebyurl(link).then(r",{"_index":1330,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._snackbar.dismiss",{"_index":1766,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this._snackbar.open(\"scenario",{"_index":534,"title":{},"body":{"components/CreateQuizComponent.html":{}}}],["this._snackbar.open(\"scene",{"_index":601,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["this._snackbar.open(\"task",{"_index":680,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this._snackbar.open('error",{"_index":1037,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["this._snackbar.open('group",{"_index":1033,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{}}}],["this._snackbar.open('profile",{"_index":2082,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this._snackbar.open('registration",{"_index":1760,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this._snackbar.open('user",{"_index":1767,"title":{},"body":{"components/RegistrationComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["this._snackbar.open('your",{"_index":1701,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["this._snackbar.open(message",{"_index":531,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this._tasks",{"_index":1022,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{}}}],["this._tasks.foreach((task",{"_index":1192,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["this._transfer.changecreatedgroup(response",{"_index":1030,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["this._transfer.changeprofile(profile",{"_index":1694,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["this._transfer.changerole(profile.role",{"_index":1328,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._transfer.changestatus(false",{"_index":1478,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileSettingsComponent.html":{}}}],["this._transfer.changestatus(true",{"_index":1329,"title":{},"body":{"components/LoginComponent.html":{}}}],["this._transfer.changeupdatedgroup(group",{"_index":1187,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["this._transfer.changeupdateduser(profile",{"_index":2076,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this._transfer.createdgroupstatus$.subscribe(group",{"_index":1117,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["this._transfer.loginstatus$.subscribe(value",{"_index":1469,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._transfer.profilestatus$.subscribe(profile",{"_index":1986,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this._transfer.rolestatus$.subscribe(role",{"_index":1471,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this._transfer.updatedgroupstatus$.subscribe(group",{"_index":1121,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["this._transfer.updateduserstatus$.subscribe(user",{"_index":2113,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["this._utils.gettoken",{"_index":381,"title":{},"body":{"interceptors/AuthInterceptor.html":{}}}],["this._utils.isloggedin",{"_index":346,"title":{},"body":{"guards/AuthGuard.html":{}}}],["this._utils.savetoken(response.headers.get(\"authorization",{"_index":1321,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.admin_id",{"_index":2106,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["this.autocompletegroups(group",{"_index":1182,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["this.autocompletegroups(profile",{"_index":2072,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this.cancelbuttontext",{"_index":420,"title":{},"body":{"components/ConfirmationDialog.html":{}}}],["this.checkprofileupdate",{"_index":1313,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.closedialog",{"_index":1247,"title":{},"body":{"components/HistoryQuizComponent.html":{},"components/ProfileSettingsComponent.html":{}}}],["this.collapse",{"_index":1474,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.confirmation_dialog_subscription",{"_index":1134,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["this.confirmation_dialog_subscription.unsubscribe",{"_index":1126,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["this.confirmbuttontext",{"_index":419,"title":{},"body":{"components/ConfirmationDialog.html":{}}}],["this.confirmpassword?.value",{"_index":1755,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.correctattempts",{"_index":877,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["this.countduration",{"_index":800,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["this.create_group_subscription",{"_index":1028,"title":{},"body":{"components/GroupSettingsComponent.html":{}}}],["this.created_group_subscription",{"_index":1116,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["this.created_group_subscription.unsubscribe",{"_index":1127,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["this.createdgroupstatussource.asobservable",{"_index":1929,"title":{},"body":{"injectables/TransferService.html":{}}}],["this.createdgroupstatussource.next(group",{"_index":1951,"title":{},"body":{"injectables/TransferService.html":{}}}],["this.current_attempts",{"_index":852,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["this.current_photo",{"_index":1534,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["this.current_photo_index",{"_index":1532,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["this.current_sessions",{"_index":970,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{}}}],["this.currentpassword?.value",{"_index":1680,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["this.currenttasks",{"_index":1602,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["this.data",{"_index":1179,"title":{},"body":{"components/GroupsModificationComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.data.email",{"_index":1685,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["this.data.id",{"_index":1184,"title":{},"body":{"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.data.role",{"_index":1679,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["this.datasource",{"_index":1112,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["this.datasource.data",{"_index":1141,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["this.datasource.paginator",{"_index":1114,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["this.delete_group_subscription",{"_index":1138,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["this.delete_group_subscription.unsubscribe",{"_index":1129,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["this.deletegroup(id",{"_index":1137,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["this.deleteuser(id",{"_index":2114,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["this.description.value",{"_index":516,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{}}}],["this.dialogref.close(true",{"_index":421,"title":{},"body":{"components/ConfirmationDialog.html":{}}}],["this.duration",{"_index":822,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["this.email",{"_index":1385,"title":{},"body":{"classes/LoginRequest.html":{},"classes/RegistrationRequest.html":{}}}],["this.email?.value",{"_index":1675,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.extended_open",{"_index":829,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["this.file.value",{"_index":518,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{}}}],["this.file.value.name",{"_index":519,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{}}}],["this.finish_session_subscription",{"_index":1618,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["this.finish_session_subscription.unsubscribe",{"_index":1606,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["this.firring_attempts_subscription",{"_index":775,"title":{},"body":{"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{}}}],["this.firring_attempts_subscription.unsubscribe",{"_index":774,"title":{},"body":{"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{}}}],["this.firringattempts",{"_index":777,"title":{},"body":{"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{}}}],["this.firringattempts.foreach(f",{"_index":875,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["this.firringattempts.length",{"_index":874,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["this.firringattempts.slice(0",{"_index":853,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["this.firringattempts.slice(this.page",{"_index":857,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["this.firstname",{"_index":1775,"title":{},"body":{"classes/RegistrationRequest.html":{}}}],["this.firstname?.value",{"_index":1677,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.folder.value",{"_index":598,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["this.form",{"_index":506,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.form.controls['confirmpassword",{"_index":1752,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.form.controls['currentpassword",{"_index":1668,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["this.form.controls['description",{"_index":504,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{}}}],["this.form.controls['email",{"_index":1311,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.form.controls['email'].disable",{"_index":2068,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this.form.controls['file",{"_index":505,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{}}}],["this.form.controls['firstname",{"_index":1666,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.form.controls['folder",{"_index":595,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["this.form.controls['groups",{"_index":2065,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this.form.controls['groups'].setvalue(gr",{"_index":2081,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this.form.controls['lastname",{"_index":1667,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.form.controls['name",{"_index":503,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{}}}],["this.form.controls['newpassword",{"_index":1669,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["this.form.controls['nickname",{"_index":1665,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.form.controls['password",{"_index":1312,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.form.controls['repeatnewpassword",{"_index":1670,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["this.form.controls['role",{"_index":2064,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this.form.controls['scenario",{"_index":664,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.form.controls['scene",{"_index":665,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.form.controls['tasks",{"_index":1018,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{}}}],["this.form.controls['tasks'].setvalue(ts",{"_index":1197,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["this.form.controls['username",{"_index":1751,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.form.patchvalue",{"_index":510,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{}}}],["this.form.reset",{"_index":681,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.form.setvalue",{"_index":1696,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["this.from",{"_index":798,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["this.getdecodedaccesstoken(token",{"_index":2147,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this.gettaskfiles",{"_index":1419,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["this.gettoken",{"_index":2141,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this.groupid",{"_index":964,"title":{},"body":{"components/GroupSessionsComponent.html":{}}}],["this.groups",{"_index":1111,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/GroupsPreviewComponent.html":{}}}],["this.groups.findindex(g",{"_index":1122,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["this.groups.push(group",{"_index":1118,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["this.groups.splice(index",{"_index":1125,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["this.groups?.value",{"_index":2074,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this.groups_subscription",{"_index":1109,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["this.groupssubscription",{"_index":2069,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this.groupssubscription.unsubscribe",{"_index":1754,"title":{},"body":{"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.incorrectattempts",{"_index":878,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["this.isloaded",{"_index":1984,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.islogged",{"_index":1463,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.items_per_page",{"_index":851,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["this.language",{"_index":1417,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["this.lastname",{"_index":1776,"title":{},"body":{"classes/RegistrationRequest.html":{}}}],["this.lastname?.value",{"_index":1678,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.loaded",{"_index":802,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["this.loggedsubscription",{"_index":1468,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loggedsubscription.unsubscribe",{"_index":1472,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.loginstatussource.asobservable",{"_index":1933,"title":{},"body":{"injectables/TransferService.html":{}}}],["this.loginstatussource.next(islogged",{"_index":1947,"title":{},"body":{"injectables/TransferService.html":{}}}],["this.loginsubscription",{"_index":1319,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.loginsubscription.unsubscribe",{"_index":1315,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.logout",{"_index":1693,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"injectables/UtilsService.html":{}}}],["this.matdialog.open(createquizcomponent",{"_index":721,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.matdialog.open(createscenecomponent",{"_index":722,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.matdialog.open(createtaskcomponent",{"_index":723,"title":{},"body":{"components/DashboardComponent.html":{}}}],["this.matdialog.open(historyquizcomponent",{"_index":1988,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.matdialog.open(joinquizcomponent",{"_index":1987,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.matdialog.open(previewscenarioscomponent",{"_index":683,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["this.matdialog.open(previewscenecomponent",{"_index":685,"title":{},"body":{"components/CreateTaskComponent.html":{},"components/PreviewTasksComponent.html":{}}}],["this.matdialog.open(previewtaskscomponent",{"_index":1990,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.matdialog.open(profilesettingscomponent",{"_index":1989,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.matdialogref.close",{"_index":509,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.max_pages",{"_index":849,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["this.message",{"_index":416,"title":{},"body":{"components/ConfirmationDialog.html":{}}}],["this.name.value",{"_index":514,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{}}}],["this.name?.value",{"_index":1025,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{}}}],["this.newpassword?.value",{"_index":1681,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["this.nickname",{"_index":1774,"title":{},"body":{"classes/RegistrationRequest.html":{}}}],["this.nickname?.value",{"_index":1676,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.opensuccessfulsnackbar",{"_index":522,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.openunsuccessfuldeletebar",{"_index":1140,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["this.openunsuccessfulsnackbar",{"_index":1032,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.openunsuccessfulsnackbar(\"an",{"_index":528,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.openunsuccessfulsnackbar(err.error",{"_index":1190,"title":{},"body":{"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.openunsuccessfulsnackbar(response.error",{"_index":527,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/LoginComponent.html":{}}}],["this.openupdatedprofilebar(\"your",{"_index":1335,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.page",{"_index":856,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["this.paginator",{"_index":1115,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["this.password",{"_index":1386,"title":{},"body":{"classes/LoginRequest.html":{},"classes/RegistrationRequest.html":{}}}],["this.password?.value",{"_index":1318,"title":{},"body":{"components/LoginComponent.html":{},"components/RegistrationComponent.html":{}}}],["this.passwordsmatch",{"_index":1756,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.percentage",{"_index":879,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["this.profile",{"_index":1220,"title":{},"body":{"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/UserProfileComponent.html":{}}}],["this.profile.groups",{"_index":1222,"title":{},"body":{"components/GroupsPreviewComponent.html":{}}}],["this.profile_update_subscription",{"_index":1185,"title":{},"body":{"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.profile_update_subscription.unsubscribe",{"_index":1183,"title":{},"body":{"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["this.profilechangessubscription",{"_index":1985,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["this.profilestatussource.asobservable",{"_index":1936,"title":{},"body":{"injectables/TransferService.html":{}}}],["this.profilestatussource.next(profile",{"_index":1948,"title":{},"body":{"injectables/TransferService.html":{}}}],["this.profilesubscription",{"_index":1324,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.profilesubscription.unsubscribe",{"_index":1316,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.registrationusersubscription",{"_index":1758,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.registrationusersubscription.unsubscribe",{"_index":1753,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.repeatnewpassword?.value",{"_index":1682,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["this.role",{"_index":1466,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.role?.value",{"_index":2073,"title":{},"body":{"components/UserSettingsComponent.html":{}}}],["this.rolestatussource.asobservable",{"_index":1939,"title":{},"body":{"injectables/TransferService.html":{}}}],["this.rolestatussource.next(role",{"_index":1949,"title":{},"body":{"injectables/TransferService.html":{}}}],["this.rolesubscription",{"_index":1470,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.rolesubscription.unsubscribe",{"_index":1473,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.router",{"_index":131,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.events.subscribe(event",{"_index":132,"title":{},"body":{"components/AppComponent.html":{}}}],["this.router.getcurrentnavigation().extras.state.data",{"_index":797,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["this.router.getcurrentnavigation().extras.state.from",{"_index":799,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["this.router.navigate([\"/dashboard/groups",{"_index":834,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["this.router.navigate([\"/login\"]).then(r",{"_index":1479,"title":{},"body":{"components/NavbarComponent.html":{},"components/ProfileSettingsComponent.html":{}}}],["this.router.navigate([\"/user/profile\"]).then",{"_index":833,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["this.router.navigate(['/home']).then(r",{"_index":1785,"title":{},"body":{"guards/RoleGuard.html":{}}}],["this.router.url",{"_index":1475,"title":{},"body":{"components/NavbarComponent.html":{}}}],["this.scenario",{"_index":1530,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["this.scenario.photos.length",{"_index":1533,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["this.scenario.photos[this.current_photo_index",{"_index":1535,"title":{},"body":{"components/PreviewScenariosComponent.html":{}}}],["this.scenario_creation_subscription",{"_index":520,"title":{},"body":{"components/CreateQuizComponent.html":{}}}],["this.scenario_creation_subscription.unsubscribe",{"_index":508,"title":{},"body":{"components/CreateQuizComponent.html":{}}}],["this.scenario_subscription",{"_index":669,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.scenario_subscription.unsubscribe",{"_index":672,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.scenarios",{"_index":671,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.scene",{"_index":1542,"title":{},"body":{"components/PreviewSceneComponent.html":{}}}],["this.scene.nativeelement.setattribute('language",{"_index":1432,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["this.scene.nativeelement.setattribute('petri",{"_index":1431,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["this.scene.photo",{"_index":1543,"title":{},"body":{"components/PreviewSceneComponent.html":{}}}],["this.scene_creation_subscription",{"_index":599,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["this.scene_creation_subscription.unsubscribe",{"_index":596,"title":{},"body":{"components/CreateSceneComponent.html":{}}}],["this.scene_subscription",{"_index":666,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.scene_subscription.unsubscribe",{"_index":673,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.scenes",{"_index":668,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.selectedlanguages",{"_index":1598,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["this.selectedlanguages[index",{"_index":1612,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["this.sessiondata",{"_index":796,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["this.sessiondata.finishedat",{"_index":811,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["this.sessiondata.startedat",{"_index":809,"title":{},"body":{"interfaces/FiringAttempt-1.html":{},"components/TaskHistoryComponent-1.html":{}}}],["this.sessionid",{"_index":772,"title":{},"body":{"interfaces/FiringAttempt.html":{},"components/TaskHistoryComponent.html":{}}}],["this.sessions",{"_index":968,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{}}}],["this.sessions.slice(0",{"_index":971,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{}}}],["this.sessions.slice(this.page",{"_index":973,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{}}}],["this.showscene",{"_index":135,"title":{},"body":{"components/AppComponent.html":{}}}],["this.stage",{"_index":682,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.task_creation_subscription",{"_index":678,"title":{},"body":{"components/CreateTaskComponent.html":{}}}],["this.task_files_subscription",{"_index":1422,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["this.task_sessions_subscription",{"_index":966,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{}}}],["this.taskfiles",{"_index":1424,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["this.taskfiles.languagefile",{"_index":1434,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["this.taskfiles.pnmlfile",{"_index":1430,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["this.taskid",{"_index":1415,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["this.tasks",{"_index":1597,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["this.tasks.map(t",{"_index":1599,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["this.tasks.slice(0",{"_index":1603,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["this.tasks.slice(this.page",{"_index":1607,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["this.tasks?.value",{"_index":1027,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{}}}],["this.tasks[i].opensessions[0",{"_index":1616,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["this.tasks[i].opensessions[0].tostring",{"_index":1614,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["this.tasks_preview_subscription",{"_index":1595,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["this.tasks_preview_subscription.unsubscribe",{"_index":1605,"title":{},"body":{"components/PreviewTasksComponent.html":{}}}],["this.taskssubscription",{"_index":1020,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{}}}],["this.taskssubscription.unsubscribe",{"_index":1023,"title":{},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{}}}],["this.tokenexpired(token",{"_index":2142,"title":{},"body":{"injectables/UtilsService.html":{}}}],["this.totalattempts",{"_index":873,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["this.updated_group_subscription",{"_index":1120,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["this.updated_group_subscription.unsubscribe",{"_index":1128,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["this.updated_user_subscription",{"_index":2112,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["this.updatedatasource",{"_index":1119,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["this.updatedgroupstatussource.asobservable",{"_index":1942,"title":{},"body":{"injectables/TransferService.html":{}}}],["this.updatedgroupstatussource.next(group",{"_index":1952,"title":{},"body":{"injectables/TransferService.html":{}}}],["this.updateduserstatussource.asobservable",{"_index":1944,"title":{},"body":{"injectables/TransferService.html":{}}}],["this.updateduserstatussource.next(user",{"_index":1950,"title":{},"body":{"injectables/TransferService.html":{}}}],["this.updateform(profile",{"_index":1695,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["this.username?.value",{"_index":1757,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["this.users",{"_index":2110,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["this.users_subscription",{"_index":2108,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["three",{"_index":2248,"title":{},"body":{"dependencies.html":{}}}],["time",{"_index":759,"title":{},"body":{"interfaces/FiringAttempt.html":{},"components/TaskHistoryComponent.html":{}}}],["title",{"_index":109,"title":{},"body":{"components/AppComponent.html":{},"components/DashboardComponent.html":{}}}],["todo",{"_index":376,"title":{},"body":{"interceptors/AuthInterceptor.html":{},"interfaces/FiringAttempt.html":{},"components/TaskHistoryComponent.html":{}}}],["together",{"_index":482,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["token",{"_index":314,"title":{},"body":{"guards/AuthGuard.html":{},"components/NavbarComponent.html":{},"components/ProfileSettingsComponent.html":{},"injectables/UtilsService.html":{}}}],["tokenexpired",{"_index":2126,"title":{},"body":{"injectables/UtilsService.html":{}}}],["tokenexpired(token",{"_index":2136,"title":{},"body":{"injectables/UtilsService.html":{}}}],["tokeninfo",{"_index":2146,"title":{},"body":{"injectables/UtilsService.html":{}}}],["tokeninfo.exp",{"_index":2150,"title":{},"body":{"injectables/UtilsService.html":{}}}],["took",{"_index":2031,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["top",{"_index":743,"title":{},"body":{"components/DashboardComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{}}}],["total",{"_index":841,"title":{},"body":{"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/HistoryQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["totalattempts",{"_index":864,"title":{},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{}}}],["transfer",{"_index":399,"title":{},"body":{"components/ConfirmationDialog.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/ProfileSettingsComponent.html":{},"injectables/TransferService.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["transferservice",{"_index":998,"title":{"injectables/TransferService.html":{}},"body":{"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/ProfileSettingsComponent.html":{},"injectables/TransferService.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{}}}],["transition",{"_index":761,"title":{},"body":{"interfaces/FiringAttempt.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["transitionname",{"_index":2361,"title":{},"body":{"miscellaneous/variables.html":{}}}],["transitions",{"_index":1413,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["tree",{"_index":8,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["tries",{"_index":1452,"title":{},"body":{"components/NavbarComponent.html":{}}}],["true",{"_index":278,"title":{},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interfaces/FiringAttempt-1.html":{},"components/NavbarComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{},"injectables/UtilsService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":2143,"title":{},"body":{"injectables/UtilsService.html":{}}}],["ts",{"_index":128,"title":{},"body":{"components/AppComponent.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskPreview.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["ts.push(task.id",{"_index":1196,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["tslib",{"_index":2250,"title":{},"body":{"dependencies.html":{}}}],["type",{"_index":116,"title":{},"body":{"components/AppComponent.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"classes/LoginRequest.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/RegistrationRequest.html":{},"guards/RoleGuard.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["types/aframe",{"_index":2224,"title":{},"body":{"dependencies.html":{}}}],["tých",{"_index":2006,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["ui",{"_index":123,"title":{},"body":{"components/AppComponent.html":{}}}],["unexpected",{"_index":529,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["unit",{"_index":488,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{},"index.html":{}}}],["univerzita",{"_index":914,"title":{},"body":{"components/FooterComponent.html":{}}}],["unsuccessful",{"_index":468,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["update",{"_index":1090,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["update.model",{"_index":1664,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["update.model.ts",{"_index":1709,"title":{},"body":{"classes/ProfileUpdate.html":{},"coverage.html":{}}}],["update.model.ts:4",{"_index":1711,"title":{},"body":{"classes/ProfileUpdate.html":{}}}],["update.model.ts:5",{"_index":1712,"title":{},"body":{"classes/ProfileUpdate.html":{}}}],["update.model.ts:6",{"_index":1710,"title":{},"body":{"classes/ProfileUpdate.html":{}}}],["update/refresh",{"_index":1092,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["updated",{"_index":1191,"title":{},"body":{"components/GroupsModificationComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["updated_group_subscription",{"_index":1066,"title":{},"body":{"components/GroupsDashboardComponent.html":{}}}],["updated_user_subscription",{"_index":2085,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["updatedatasource",{"_index":1072,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["updatedgroupstatus",{"_index":1906,"title":{},"body":{"injectables/TransferService.html":{}}}],["updatedgroupstatussource",{"_index":1907,"title":{},"body":{"injectables/TransferService.html":{}}}],["updateduserstatus",{"_index":1908,"title":{},"body":{"injectables/TransferService.html":{}}}],["updateduserstatussource",{"_index":1909,"title":{},"body":{"injectables/TransferService.html":{}}}],["updateform",{"_index":1628,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["updateform(profile",{"_index":1643,"title":{},"body":{"components/ProfileSettingsComponent.html":{}}}],["updategroup",{"_index":1155,"title":{},"body":{"components/GroupsModificationComponent.html":{}}}],["updateprofile",{"_index":1629,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/UserSettingsComponent.html":{}}}],["updates",{"_index":463,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/GroupsModificationComponent.html":{}}}],["updatevisualprogres",{"_index":2201,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["updatevisualprogres(targets[1",{"_index":2381,"title":{},"body":{"miscellaneous/variables.html":{}}}],["url",{"_index":352,"title":{},"body":{"guards/AuthGuard.html":{},"components/DashboardComponent.html":{},"components/LoginComponent.html":{}}}],["url(\"src/assets/coverphoto.svg",{"_index":2035,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["use",{"_index":2274,"title":{},"body":{"index.html":{}}}],["useclass",{"_index":276,"title":{},"body":{"modules/AppModule.html":{}}}],["used",{"_index":12,"title":{},"body":{"components/AboutComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"interfaces/FiringAttempt-3.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["user",{"_index":93,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"guards/AuthGuard.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt-1.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"injectables/TransferService.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{}}}],["user/profile",{"_index":294,"title":{},"body":{"modules/AppRoutingModule.html":{},"components/LoginComponent.html":{}}}],["user_profile_presents",{"_index":1464,"title":{},"body":{"components/NavbarComponent.html":{}}}],["username",{"_index":1705,"title":{},"body":{"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"classes/TaskSessionInfo.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["userprofile",{"_index":1214,"title":{"classes/UserProfile.html":{}},"body":{"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"guards/RoleGuard.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{}}}],["userprofile:10",{"_index":1715,"title":{},"body":{"classes/ProfileUpdate.html":{}}}],["userprofile:4",{"_index":1716,"title":{},"body":{"classes/ProfileUpdate.html":{}}}],["userprofile:5",{"_index":1718,"title":{},"body":{"classes/ProfileUpdate.html":{}}}],["userprofile:6",{"_index":1713,"title":{},"body":{"classes/ProfileUpdate.html":{}}}],["userprofile:7",{"_index":1719,"title":{},"body":{"classes/ProfileUpdate.html":{}}}],["userprofile:8",{"_index":1714,"title":{},"body":{"classes/ProfileUpdate.html":{}}}],["userprofile:9",{"_index":1717,"title":{},"body":{"classes/ProfileUpdate.html":{}}}],["userprofilecomponent",{"_index":92,"title":{"components/UserProfileComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["users",{"_index":48,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["users_subscription",{"_index":2086,"title":{},"body":{"components/UsersDashboardComponent.html":{}}}],["usersdashboardcomponent",{"_index":95,"title":{"components/UsersDashboardComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"modules/AppRoutingModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["usersdashboardopen",{"_index":710,"title":{},"body":{"components/DashboardComponent.html":{}}}],["usersettingscomponent",{"_index":96,"title":{"components/UserSettingsComponent.html":{}},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":447,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["utils",{"_index":323,"title":{},"body":{"guards/AuthGuard.html":{},"components/LoginComponent.html":{}}}],["utilsservice",{"_index":166,"title":{"injectables/UtilsService.html":{}},"body":{"modules/AppModule.html":{},"guards/AuthGuard.html":{},"interceptors/AuthInterceptor.html":{},"components/LoginComponent.html":{},"injectables/UtilsService.html":{},"coverage.html":{},"overview.html":{}}}],["v",{"_index":915,"title":{},"body":{"components/FooterComponent.html":{}}}],["validate",{"_index":308,"title":{},"body":{"guards/AuthGuard.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/UserSettingsComponent.html":{},"injectables/UtilsService.html":{}}}],["validators",{"_index":502,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["validators.email",{"_index":1314,"title":{},"body":{"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["validators.required",{"_index":507,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["value",{"_index":119,"title":{},"body":{"components/AppComponent.html":{},"interceptors/AuthInterceptor.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"classes/Group.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"classes/GroupTasks.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"classes/ProfileUpdate.html":{},"components/RegistrationComponent.html":{},"classes/ScenarioPreview.html":{},"components/SceneComponent.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"injectables/TransferService.html":{},"classes/UserProfile.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":33,"title":{},"body":{"components/AboutComponent.html":{},"components/AppComponent.html":{},"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["variable",{"_index":2192,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":872,"title":{"miscellaneous/variables.html":{}},"body":{"interfaces/FiringAttempt-3.html":{},"components/TaskHistoryStatisticsComponent.html":{},"miscellaneous/variables.html":{}}}],["vedia",{"_index":1999,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["verify",{"_index":1762,"title":{},"body":{"components/RegistrationComponent.html":{}}}],["version",{"_index":2260,"title":{},"body":{"index.html":{},"properties.html":{}}}],["vertical",{"_index":1273,"title":{},"body":{"components/JoinQuizComponent.html":{},"components/PreviewTasksComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryExtendedComponent.html":{}}}],["via",{"_index":2283,"title":{},"body":{"index.html":{}}}],["view",{"_index":1859,"title":{},"body":{"components/TaskHistoryComponent-1.html":{}}}],["viewchild",{"_index":1107,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["viewchild('paginator",{"_index":1105,"title":{},"body":{"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["viewchild('scene",{"_index":1398,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["virtuálna",{"_index":1994,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["virtuálnej",{"_index":888,"title":{},"body":{"components/FooterComponent.html":{},"components/UserProfileComponent.html":{}}}],["vo",{"_index":887,"title":{},"body":{"components/FooterComponent.html":{},"components/UserProfileComponent.html":{}}}],["void",{"_index":405,"title":{},"body":{"components/ConfirmationDialog.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"interfaces/FiringAttempt.html":{},"interfaces/FiringAttempt-1.html":{},"interfaces/FiringAttempt-2.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/GroupsPreviewComponent.html":{},"components/HistoryQuizComponent.html":{},"components/HomeComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/Muzeum_habsbourgComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewScenariosComponent.html":{},"components/PreviewSceneComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/SceneComponent.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"injectables/TransferService.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{},"injectables/UtilsService.html":{}}}],["vr",{"_index":1998,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["vzdelávacom",{"_index":907,"title":{},"body":{"components/FooterComponent.html":{}}}],["vzdelávanie",{"_index":1997,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["vznikol",{"_index":897,"title":{},"body":{"components/FooterComponent.html":{}}}],["významnejších",{"_index":2008,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["want",{"_index":410,"title":{},"body":{"components/ConfirmationDialog.html":{},"components/GroupsDashboardComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["watch",{"_index":728,"title":{},"body":{"components/DashboardComponent.html":{}}}],["way",{"_index":484,"title":{},"body":{"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsModificationComponent.html":{},"components/LoginComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/UserSettingsComponent.html":{}}}],["webov",{"_index":1993,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["webpack",{"_index":2253,"title":{},"body":{"dependencies.html":{}}}],["webworkify",{"_index":2252,"title":{},"body":{"dependencies.html":{}}}],["weight",{"_index":1275,"title":{},"body":{"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/RegistrationComponent.html":{}}}],["welcome",{"_index":1992,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["welcomeandprofile",{"_index":1838,"title":{},"body":{"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{}}}],["whether",{"_index":309,"title":{},"body":{"guards/AuthGuard.html":{},"interfaces/FiringAttempt-1.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{},"guards/RoleGuard.html":{},"components/TaskHistoryComponent-1.html":{},"components/UserProfileComponent.html":{},"injectables/UtilsService.html":{}}}],["white",{"_index":1351,"title":{},"body":{"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/RegistrationComponent.html":{},"components/UserProfileComponent.html":{}}}],["width",{"_index":138,"title":{},"body":{"components/AppComponent.html":{},"components/CreateQuizComponent.html":{},"components/CreateSceneComponent.html":{},"components/CreateTaskComponent.html":{},"components/DashboardComponent.html":{},"components/FooterComponent.html":{},"components/GroupSessionsComponent.html":{},"components/GroupSettingsComponent.html":{},"components/GroupsDashboardComponent.html":{},"components/GroupsModificationComponent.html":{},"components/HistoryQuizComponent.html":{},"components/JoinQuizComponent.html":{},"components/LoginComponent.html":{},"components/NavbarComponent.html":{},"components/PreviewTasksComponent.html":{},"components/ProfileSettingsComponent.html":{},"components/RegistrationComponent.html":{},"components/TaskHistoryComponent.html":{},"components/TaskHistoryComponent-1.html":{},"components/TaskHistoryExtendedComponent.html":{},"components/TaskHistoryStatisticsComponent.html":{},"components/UserProfileComponent.html":{},"components/UserSettingsComponent.html":{},"components/UsersDashboardComponent.html":{}}}],["window.places",{"_index":1421,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["window.router",{"_index":130,"title":{},"body":{"components/AppComponent.html":{}}}],["window.transitions",{"_index":1420,"title":{},"body":{"components/Muzeum_habsbourgComponent.html":{},"components/SceneComponent.html":{}}}],["works",{"_index":28,"title":{},"body":{"components/AboutComponent.html":{}}}],["wrap",{"_index":1879,"title":{},"body":{"components/TaskHistoryStatisticsComponent.html":{}}}],["yes",{"_index":407,"title":{},"body":{"components/ConfirmationDialog.html":{},"classes/Group.html":{},"classes/GroupTasks.html":{},"classes/ProfileUpdate.html":{},"classes/ScenarioPreview.html":{},"classes/ScenePreview.html":{},"classes/TaskCreation.html":{},"classes/TaskFiles.html":{},"components/TaskHistoryComponent-1.html":{},"classes/TaskNames.html":{},"classes/TaskPreview.html":{},"classes/TaskRequest.html":{},"classes/TaskSessionFinishRequest.html":{},"classes/TaskSessionInfo.html":{},"classes/UserProfile.html":{}}}],["yyyy",{"_index":978,"title":{},"body":{"components/GroupSessionsComponent.html":{},"components/HistoryQuizComponent.html":{}}}],["z",{"_index":1482,"title":{},"body":{"components/NavbarComponent.html":{},"components/UserProfileComponent.html":{}}}],["zdieľanej",{"_index":905,"title":{},"body":{"components/FooterComponent.html":{}}}],["zip",{"_index":459,"title":{},"body":{"components/CreateQuizComponent.html":{}}}],["zone.js",{"_index":2255,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":167,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["zážitky",{"_index":2003,"title":{},"body":{"components/UserProfileComponent.html":{}}}],["zážitok",{"_index":886,"title":{},"body":{"components/FooterComponent.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"components/AboutComponent.html":{"url":"components/AboutComponent.html","title":"component - AboutComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AboutComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/about/about.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used to display information about the system\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-about\n            \n\n\n\n            \n                styleUrls\n                ./about.component.css\n            \n\n\n\n            \n                templateUrl\n                ./about.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Component that is used to display information about the system\n */\n@Component({\n  selector: 'app-about',\n  templateUrl: './about.component.html',\n  styleUrls: ['./about.component.css']\n})\nexport class AboutComponent {\n\n}\n\n    \n\n    \n        about works!\n\n    \n\n    \n                \n                    ./about.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'about works!'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AboutComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/app.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-root\n            \n\n\n\n            \n                styleUrls\n                ./app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                showScene\n                            \n                            \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/app.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        showScene\n                        \n                    \n                \n            \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:11\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'LirkisEduVePn-UI'\n                    \n                \n                    \n                        \n                                Defined in src/app/app.component.ts:10\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {NavigationEnd, Router} from '@angular/router';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'LirkisEduVePn-UI';\n  showScene = false;\n\n  constructor(private router: Router) {\n    // @ts-ignore\n    window.router = this.router;\n    this.router.events.subscribe(event => {\n      if (event instanceof NavigationEnd) {\n        this.showScene = /^\\/(muzeum_extended|muzeum_habsbourg).*$/.test(event.url);\n      }\n    });\n  }\n}\n\n    \n\n    \n        \n  \n  \n  \n\n-->\n\n-->\n-->\n\n    \n\n    \n                \n                    ./app.component.css\n                \n                .main{\n    width: 100%;\n    height: 100vh;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n    gap: 2rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      -->-->-->-->'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nConfirmationDialog\n\nConfirmationDialog\n\nAppModule -->\n\nConfirmationDialog->AppModule\n\n\n\n\n\nCreateQuizComponent\n\nCreateQuizComponent\n\nAppModule -->\n\nCreateQuizComponent->AppModule\n\n\n\n\n\nCreateSceneComponent\n\nCreateSceneComponent\n\nAppModule -->\n\nCreateSceneComponent->AppModule\n\n\n\n\n\nCreateTaskComponent\n\nCreateTaskComponent\n\nAppModule -->\n\nCreateTaskComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nGroupSessionsComponent\n\nGroupSessionsComponent\n\nAppModule -->\n\nGroupSessionsComponent->AppModule\n\n\n\n\n\nGroupSettingsComponent\n\nGroupSettingsComponent\n\nAppModule -->\n\nGroupSettingsComponent->AppModule\n\n\n\n\n\nGroupsDashboardComponent\n\nGroupsDashboardComponent\n\nAppModule -->\n\nGroupsDashboardComponent->AppModule\n\n\n\n\n\nGroupsModificationComponent\n\nGroupsModificationComponent\n\nAppModule -->\n\nGroupsModificationComponent->AppModule\n\n\n\n\n\nGroupsPreviewComponent\n\nGroupsPreviewComponent\n\nAppModule -->\n\nGroupsPreviewComponent->AppModule\n\n\n\n\n\nHistoryQuizComponent\n\nHistoryQuizComponent\n\nAppModule -->\n\nHistoryQuizComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nJoinQuizComponent\n\nJoinQuizComponent\n\nAppModule -->\n\nJoinQuizComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMuzeum_habsbourgComponent\n\nMuzeum_habsbourgComponent\n\nAppModule -->\n\nMuzeum_habsbourgComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPreviewScenariosComponent\n\nPreviewScenariosComponent\n\nAppModule -->\n\nPreviewScenariosComponent->AppModule\n\n\n\n\n\nPreviewSceneComponent\n\nPreviewSceneComponent\n\nAppModule -->\n\nPreviewSceneComponent->AppModule\n\n\n\n\n\nPreviewTasksComponent\n\nPreviewTasksComponent\n\nAppModule -->\n\nPreviewTasksComponent->AppModule\n\n\n\n\n\nProfileSettingsComponent\n\nProfileSettingsComponent\n\nAppModule -->\n\nProfileSettingsComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAppModule -->\n\nSceneComponent->AppModule\n\n\n\n\n\nTaskHistoryExtendedComponent\n\nTaskHistoryExtendedComponent\n\nAppModule -->\n\nTaskHistoryExtendedComponent->AppModule\n\n\n\n\n\nTaskHistoryStatisticsComponent\n\nTaskHistoryStatisticsComponent\n\nAppModule -->\n\nTaskHistoryStatisticsComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nUserSettingsComponent\n\nUserSettingsComponent\n\nAppModule -->\n\nUserSettingsComponent->AppModule\n\n\n\n\n\nUsersDashboardComponent\n\nUsersDashboardComponent\n\nAppModule -->\n\nUsersDashboardComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nUtilsService\n\nUtilsService\n\nAppModule -->\n\nUtilsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Declarations\n                    \n                        \n                            AboutComponent\n                        \n                        \n                            AppComponent\n                        \n                        \n                            ConfirmationDialog\n                        \n                        \n                            CreateQuizComponent\n                        \n                        \n                            CreateSceneComponent\n                        \n                        \n                            CreateTaskComponent\n                        \n                        \n                            DashboardComponent\n                        \n                        \n                            FooterComponent\n                        \n                        \n                            GroupSessionsComponent\n                        \n                        \n                            GroupSettingsComponent\n                        \n                        \n                            GroupsDashboardComponent\n                        \n                        \n                            GroupsModificationComponent\n                        \n                        \n                            GroupsPreviewComponent\n                        \n                        \n                            HistoryQuizComponent\n                        \n                        \n                            HomeComponent\n                        \n                        \n                            JoinQuizComponent\n                        \n                        \n                            LoginComponent\n                        \n                        \n                            Muzeum_habsbourgComponent\n                        \n                        \n                            NavbarComponent\n                        \n                        \n                            PreviewScenariosComponent\n                        \n                        \n                            PreviewSceneComponent\n                        \n                        \n                            PreviewTasksComponent\n                        \n                        \n                            ProfileSettingsComponent\n                        \n                        \n                            RegistrationComponent\n                        \n                        \n                            RegistrationComponent\n                        \n                        \n                            SceneComponent\n                        \n                        \n                            TaskHistoryExtendedComponent\n                        \n                        \n                            TaskHistoryStatisticsComponent\n                        \n                        \n                            UserProfileComponent\n                        \n                        \n                            UserSettingsComponent\n                        \n                        \n                            UsersDashboardComponent\n                        \n                    \n                \n                \n                    Providers\n                    \n                        \n                            AuthInterceptor\n                        \n                        \n                            UtilsService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AppRoutingModule\n                        \n                    \n                \n                \n                    Bootstrap\n                    \n                        \n                            AppComponent\n                        \n                    \n                \n                \n                    Schemas\n                    \n                        \n                            CUSTOM_ELEMENTS_SCHEMA\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import {CUSTOM_ELEMENTS_SCHEMA, NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\n\nimport {AppRoutingModule} from './app-routing.module';\nimport {AppComponent} from './app.component';\nimport {NavbarComponent} from './components/navbar/navbar.component';\nimport {HomeComponent} from './components/home/home.component';\nimport {AboutComponent} from './components/about/about.component';\nimport {LoginComponent} from './components/login/login.component';\nimport {RegistrationComponent} from './components/registration/registration.component';\nimport {FooterComponent} from './components/footer/footer.component';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {MatFormFieldModule} from \"@angular/material/form-field\";\nimport {FormsModule, ReactiveFormsModule} from \"@angular/forms\";\nimport {MatInputModule} from \"@angular/material/input\";\nimport {MatCardModule} from \"@angular/material/card\";\nimport {HTTP_INTERCEPTORS, HttpClientModule} from \"@angular/common/http\";\nimport {MatSnackBarModule} from \"@angular/material/snack-bar\";\nimport {MatButtonModule} from \"@angular/material/button\";\nimport {UtilsService} from \"./services/utils.service\";\nimport {AuthGuard} from \"./components/auth/auth.guard\";\nimport {AuthInterceptor} from \"./components/auth/auth.interceptor\";\nimport {UserProfileComponent} from './components/user-profile/user-profile.component';\nimport {MatIconModule} from '@angular/material/icon';\nimport {MatDialogModule} from '@angular/material/dialog';\nimport {JoinQuizComponent} from './components/join-quiz/join-quiz.component';\nimport {CreateQuizComponent} from './components/create-quiz/create-quiz.component';\nimport {HistoryQuizComponent} from './components/history-quiz/history-quiz.component';\nimport {ProfileSettingsComponent} from './components/profile-settings/profile-settings.component';\nimport {DashboardComponent} from './components/dashboard/dashboard.component';\nimport {MatTableModule} from \"@angular/material/table\";\nimport {MatPaginatorModule} from \"@angular/material/paginator\";\nimport {ConfirmationDialog} from \"./components/dialogs/confirmation-dialog/confirmation-dialog.component\";\nimport {UserSettingsComponent} from './components/user-settings/user-settings.component';\nimport {MatSelectModule} from \"@angular/material/select\";\nimport {PreviewScenariosComponent} from './components/preview-scenarios/preview-scenarios.component';\nimport {SceneComponent} from './components/tasks/scenes/muzeum_extended/scene.component';\nimport {CreateSceneComponent} from './components/create-scene/create-scene.component';\nimport {CreateTaskComponent} from './components/create-task/create-task.component';\nimport {MatCheckboxModule} from \"@angular/material/checkbox\";\nimport {MatRadioModule} from \"@angular/material/radio\";\nimport {PreviewSceneComponent} from './components/preview-scene/preview-scene.component';\nimport {PreviewTasksComponent} from './components/preview-tasks/preview-tasks.component';\nimport {Muzeum_habsbourgComponent} from './components/tasks/scenes/muzeum_habsbourg/muzeum_habsbourg.component';\nimport {UsersDashboardComponent} from './components/users-dashboard/users-dashboard.component';\nimport {GroupsDashboardComponent} from './components/groups-dashboard/groups-dashboard.component';\nimport {GroupSettingsComponent} from './components/group-settings/group-settings.component';\nimport {GroupsModificationComponent} from './components/groups-modification/groups-modification.component';\nimport {TaskHistoryComponent} from './components/task-his/task-history/task-history.component';\nimport {\n  TaskHistoryExtendedComponent\n} from './components/task-his/task-history-extended/task-history-extended.component';\nimport {\n  TaskHistoryStatisticsComponent\n} from './components/task-his/task-history-statistics/task-history-statistics.component';\nimport {GroupsPreviewComponent} from './components/groups-preview/groups-preview.component';\nimport {GroupSessionsComponent} from './components/group-sessions/group-sessions.component';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    NavbarComponent,\n    AboutComponent,\n    LoginComponent,\n    RegistrationComponent,\n    FooterComponent,\n    RegistrationComponent,\n    UserProfileComponent,\n    JoinQuizComponent,\n    CreateQuizComponent,\n    HistoryQuizComponent,\n    ProfileSettingsComponent,\n    DashboardComponent,\n    ConfirmationDialog,\n    UserSettingsComponent,\n    PreviewScenariosComponent,\n    SceneComponent,\n    CreateSceneComponent,\n    CreateTaskComponent,\n    PreviewSceneComponent,\n    PreviewTasksComponent,\n    Muzeum_habsbourgComponent,\n    UsersDashboardComponent,\n    GroupsDashboardComponent,\n    GroupSettingsComponent,\n    GroupsModificationComponent,\n    TaskHistoryComponent,\n    TaskHistoryExtendedComponent,\n    TaskHistoryStatisticsComponent,\n    GroupsPreviewComponent,\n    GroupSessionsComponent\n  ],\n    imports: [\n        BrowserModule,\n        AppRoutingModule,\n        BrowserAnimationsModule,\n        MatFormFieldModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatCardModule,\n        HttpClientModule,\n        MatSnackBarModule,\n        MatButtonModule,\n        MatIconModule,\n        MatDialogModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSelectModule,\n        MatCheckboxModule,\n        MatRadioModule,\n        FormsModule\n    ],\n  providers: [UtilsService, AuthGuard,\n    {provide: HTTP_INTERCEPTORS, useClass: AuthInterceptor, multi: true}],\n  bootstrap: [AppComponent],\n  schemas: [CUSTOM_ELEMENTS_SCHEMA]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppRoutingModule.html":{"url":"modules/AppRoutingModule.html","title":"module - AppRoutingModule","body":"\n                   \n\n\n\n\n    Modules\n    AppRoutingModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app/app-routing.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import {NgModule} from '@angular/core';\nimport {RouterModule, Routes} from '@angular/router';\nimport {HomeComponent} from \"./components/home/home.component\";\nimport {AboutComponent} from \"./components/about/about.component\";\nimport {LoginComponent} from \"./components/login/login.component\";\nimport {RegistrationComponent} from \"./components/registration/registration.component\";\nimport {AuthGuard} from \"./components/auth/auth.guard\";\nimport {UserProfileComponent} from \"./components/user-profile/user-profile.component\";\nimport {DashboardComponent} from \"./components/dashboard/dashboard.component\";\nimport {RoleGuard} from \"./components/auth/role.guard\";\nimport {SceneComponent} from \"./components/tasks/scenes/muzeum_extended/scene.component\";\nimport {Muzeum_habsbourgComponent} from \"./components/tasks/scenes/muzeum_habsbourg/muzeum_habsbourg.component\";\nimport {UsersDashboardComponent} from \"./components/users-dashboard/users-dashboard.component\";\nimport {GroupsDashboardComponent} from \"./components/groups-dashboard/groups-dashboard.component\";\nimport {TaskHistoryComponent} from \"./components/task-his/task-history/task-history.component\";\nimport {GroupsPreviewComponent} from \"./components/groups-preview/groups-preview.component\";\nimport {GroupSessionsComponent} from \"./components/group-sessions/group-sessions.component\";\n\nconst routes: Routes = [\n  {\n    path: '',\n    redirectTo: 'home',\n    pathMatch: 'full'\n  },\n  {\n    path: \"home\",\n    component: HomeComponent\n  },\n  {\n    path: \"about\",\n    component: AboutComponent\n  },\n  {\n    path: \"login\",\n    component: LoginComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"register\",\n    component: RegistrationComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"user/profile\",\n    component: UserProfileComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"muzeum_extended/task/:taskId/:language\",\n    component: SceneComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"history/session\",\n    component: TaskHistoryComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"muzeum_habsbourg/task/:taskId/:language\",\n    component: Muzeum_habsbourgComponent,\n    canActivate: [AuthGuard]\n  },\n  {\n    path: \"dashboard\",\n    component: DashboardComponent,\n    canActivate: [AuthGuard, RoleGuard],\n    data: {\n      expectedRoles: [\"ADMIN\", \"TEACHER\"]\n    }\n  },\n  {\n    path: \"dashboard/users\",\n    component: UsersDashboardComponent,\n    canActivate: [AuthGuard, RoleGuard],\n    data: {\n      expectedRoles: [\"ADMIN\", \"TEACHER\"]\n    }\n  },\n  {\n    path: \"dashboard/groups\",\n    component: GroupsDashboardComponent,\n    canActivate: [AuthGuard, RoleGuard],\n    data: {\n      expectedRoles: [\"ADMIN\", \"TEACHER\"]\n    }\n  },\n  {\n    path: \"dashboard/groups-history\",\n    component: GroupsPreviewComponent,\n    canActivate: [AuthGuard, RoleGuard],\n    data: {\n      expectedRoles: [\"ADMIN\", \"TEACHER\"]\n    }\n  },\n  {\n    path: \"dashboard/group/sessions\",\n    component: GroupSessionsComponent,\n    canActivate: [AuthGuard, RoleGuard],\n    data: {\n      expectedRoles: [\"ADMIN\", \"TEACHER\"]\n    }\n  },\n  {\n    path: \"**\",\n    redirectTo: 'home',\n    pathMatch: 'full'\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/AuthGuard.html":{"url":"guards/AuthGuard.html","title":"guard - AuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    AuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/auth/auth.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard to validate whether resource is available or not (user logged in or not) with JWT token\nin a local storage\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _utils: UtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/auth.guard.ts:12\n                            \n                        \n\n                \n                    \n                            Constructor for a guard\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router field to route between components\n\n                                                        \n                                                \n                                                \n                                                        _utils\n                                                  \n                                                        \n                                                                        UtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Utils field that provides some help methods\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/auth/auth.guard.ts:28\n                \n            \n\n\n            \n                \n                    Override method that checks whether the component can be activated or not based on\nJWT token inside local storage\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                            ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ActivatedRouteSnapshot instance\n\n                                    \n                                \n                                \n                                    state\n                                    \n                                            RouterStateSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        RouterStateSnapshot instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router, RouterStateSnapshot} from '@angular/router';\nimport {UtilsService} from \"../../services/utils.service\";\n\n/**\n * Guard to validate whether resource is available or not (user logged in or not) with JWT token\n * in a local storage\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n\n  /**\n   * Constructor for a guard\n   * @param _router Router field to route between components\n   * @param _utils Utils field that provides some help methods\n   */\n  constructor(private _router: Router, private _utils: UtilsService) {\n  }\n\n  /**\n   * Override method that checks whether the component can be activated or not based on\n   * JWT token inside local storage\n   * @param route ActivatedRouteSnapshot instance\n   * @param state RouterStateSnapshot instance\n   */\n  canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean {\n\n    let isLogged: boolean = this._utils.isLoggedIn();\n\n    if (isLogged && (state.url === '/login' || state.url === '/register')) {\n      this._router.navigate(['/user/profile']).then(r => r);\n      return false;\n    }\n    if (!isLogged && (state.url === '/login' || state.url === '/register'))\n      return true;\n\n    if (isLogged)\n      return true;\n\n    localStorage.setItem(\"redirect-url\", state.url);\n    this._router.navigate(['/login']).then(r => r);\n    return false;\n  }\n\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interceptors/AuthInterceptor.html":{"url":"interceptors/AuthInterceptor.html","title":"interceptor - AuthInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Interceptors\n  AuthInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/auth/auth.interceptor.ts\n        \n\n\n            \n                Description\n            \n            \n                Interceptor for an HTTP requests (not used in the project)\n\n            \n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                API_URL\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _utils: UtilsService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/auth.interceptor.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _utils\n                                                  \n                                                        \n                                                                        UtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        intercept\n                        \n                    \n                \n            \n            \n                \nintercept(request: HttpRequest<>, next: HttpHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/auth/auth.interceptor.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            HttpRequest<>\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            HttpHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable>\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        API_URL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"http://localhost:8080/api/v1/safa\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/auth/auth.interceptor.ts:13\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {HttpEvent, HttpHandler, HttpInterceptor, HttpRequest} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {Router} from \"@angular/router\";\nimport {UtilsService} from \"../../services/utils.service\";\n\n/**\n * Interceptor for an HTTP requests (not used in the project)\n */\n@Injectable()\nexport class AuthInterceptor implements HttpInterceptor {\n\n  private API_URL: string = \"http://localhost:8080/api/v1/safa\";\n\n  constructor(private _router: Router, private _utils: UtilsService) {\n\n  }\n\n  intercept(request: HttpRequest, next: HttpHandler): Observable> {\n    if (request.url.includes(this.API_URL + \"/login\") ||\n      request.url.includes(this.API_URL + \"/register\")) {\n      return next.handle(request)\n    }\n\n    // TODO fix interceptor\n    const reqWithToken = request.clone({setHeaders: {Authorization: this._utils.getToken()}})\n    return next.handle(request);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ConfirmationDialog.html":{"url":"components/ConfirmationDialog.html","title":"component - ConfirmationDialog","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ConfirmationDialog\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dialogs/confirmation-dialog/confirmation-dialog.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that defines a confirmation dialog component to accept or decline some actions\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n            \n                templateUrl\n                confirmation.dialog.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                cancelButtonText\n                            \n                            \n                                confirmButtonText\n                            \n                            \n                                message\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onConfirmClick\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(data: any, dialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dialogs/confirmation-dialog/confirmation-dialog.component.ts:13\n                            \n                        \n\n                \n                    \n                            Constructor for a component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data that was transfer to this component\n\n                                                        \n                                                \n                                                \n                                                        dialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that defines that this component is dialog\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onConfirmClick\n                        \n                    \n                \n            \n            \n                \nonConfirmClick()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dialogs/confirmation-dialog/confirmation-dialog.component.ts:33\n                \n            \n\n\n            \n                \n                    Closes dialog on confirm\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Cancel\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/confirmation-dialog/confirmation-dialog.component.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        confirmButtonText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Yes\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/confirmation-dialog/confirmation-dialog.component.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        message\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"Are you sure you want to delete?\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/dialogs/confirmation-dialog/confirmation-dialog.component.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject} from \"@angular/core\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\n\n/**\n * Component that defines a confirmation dialog component to accept or decline some actions\n */\n@Component({\n  templateUrl: 'confirmation.dialog.component.html'\n})\nexport class ConfirmationDialog {\n  message = \"Are you sure you want to delete?\";\n  confirmButtonText = \"Yes\";\n  cancelButtonText = \"Cancel\";\n\n  /**\n   * Constructor for a component\n   * @param data data that was transfer to this component\n   * @param dialogRef Angular Material component that defines that this component is dialog\n   */\n  constructor(@Inject(MAT_DIALOG_DATA) private data: any, private dialogRef: MatDialogRef) {\n    if (data) {\n      this.message = data.message || this.message;\n      if (data.buttonText) {\n        this.confirmButtonText = data.buttonText || this.confirmButtonText;\n        this.cancelButtonText = data.buttonText || this.cancelButtonText;\n      }\n    }\n  }\n\n  /**\n   * Closes dialog on confirm\n   */\n  onConfirmClick(): void {\n    this.dialogRef.close(true);\n  }\n}\n\n    \n\n    \n        \n  {{message}}\n\n\n  {{confirmButtonText}}\n  {{cancelButtonText}}\n\n\n    \n\n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  {{message}}  {{confirmButtonText}}  {{cancelButtonText}}'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ConfirmationDialog'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateQuizComponent.html":{"url":"components/CreateQuizComponent.html","title":"component - CreateQuizComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateQuizComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/create-quiz/create-quiz.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as a form for creating scenarios\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-quiz\n            \n\n\n\n            \n                styleUrls\n                ./create-quiz.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-quiz.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                scenario_creation_subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                openSuccessfulSnackbar\n                            \n                            \n                                openUnsuccessfulSnackbar\n                            \n                            \n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    description\n                                \n                                \n                                    file\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialogRef: MatDialogRef, _client: BackendService, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/create-quiz/create-quiz.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor for a component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matDialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening dialogs\n\n                                                        \n                                                \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BackendService instance that sends requests to a server\n\n                                                        \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening snack bars\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-quiz/create-quiz.component.ts:78\n                \n            \n\n\n            \n                \n                    While this component is a dialog, this method closes this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-quiz/create-quiz.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-quiz/create-quiz.component.ts:63\n                \n            \n\n\n            \n                \n                    Method that inits a form group for creating a scenario with name, description and a zip file\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-quiz/create-quiz.component.ts:86\n                \n            \n\n\n            \n                \n                    When user chooses the file in the form, this method updates the form with the chosen file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        event that contains a file that was chosen\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSuccessfulSnackbar\n                        \n                    \n                \n            \n            \n                \nopenSuccessfulSnackbar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-quiz/create-quiz.component.ts:127\n                \n            \n\n\n            \n                \n                    Opens unsuccessful snack bar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUnsuccessfulSnackbar\n                        \n                    \n                \n            \n            \n                \nopenUnsuccessfulSnackbar(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-quiz/create-quiz.component.ts:118\n                \n            \n\n\n            \n                \n                    Opens successful snack bar with a provided message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        message to show\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        send\n                        \n                    \n                \n            \n            \n                \nsend()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-quiz/create-quiz.component.ts:95\n                \n            \n\n\n            \n                \n                    Submits the form with the scenario to create\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/create-quiz/create-quiz.component.ts:27\n                        \n                    \n\n            \n                \n                    Represents a collection of form controls that are logically grouped together. It provides a convenient way to manage and validate multiple form controls as a single unit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scenario_creation_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/create-quiz/create-quiz.component.ts:21\n                        \n                    \n\n            \n                \n                    Subscription for creation of scenario\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/create-quiz/create-quiz.component.ts:42\n                                \n                            \n                    \n                        \n                                Gets a name field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/create-quiz/create-quiz.component.ts:49\n                                \n                            \n                    \n                        \n                                Gets a description field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        file\n                    \n                \n\n                \n                    \n                        getfile()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/create-quiz/create-quiz.component.ts:56\n                                \n                            \n                    \n                        \n                                Gets a file field from a form group\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {Subscription} from \"rxjs\";\nimport {BackendService} from \"../../services/backend.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\n\n/**\n * Component that is used as a form for creating scenarios\n */\n@Component({\n  selector: 'app-create-quiz',\n  templateUrl: './create-quiz.component.html',\n  styleUrls: ['./create-quiz.component.css']\n})\nexport class CreateQuizComponent implements OnInit, OnDestroy {\n\n  /**\n   * Subscription for creation of scenario\n   */\n  scenario_creation_subscription: Subscription = new Subscription();\n\n  /**\n   * Represents a collection of form controls that are logically grouped together. It provides a convenient way to manage and validate multiple form controls as a single unit.\n   */\n  // @ts-ignore\n  form: FormGroup;\n\n  /**\n   * Constructor for a component\n   * @param matDialogRef Angular Material component that uses for opening dialogs\n   * @param _client BackendService instance that sends requests to a server\n   * @param _snackBar Angular Material component that uses for opening snack bars\n   */\n  constructor(private matDialogRef: MatDialogRef, private _client: BackendService,\n              private _snackBar: MatSnackBar) {\n  }\n\n  /**\n   * Gets a name field from a form group\n   */\n  get name() {\n    return this.form.controls['name'];\n  }\n\n  /**\n   * Gets a description field from a form group\n   */\n  get description() {\n    return this.form.controls['description'];\n  }\n\n  /**\n   * Gets a file field from a form group\n   */\n  get file() {\n    return this.form.controls['file'];\n  }\n\n  /**\n   * Method that inits a form group for creating a scenario with name, description and a zip file\n   */\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      description: new FormControl('', [Validators.required]),\n      file: new FormControl('', [Validators.required])\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.scenario_creation_subscription.unsubscribe();\n  }\n\n  /**\n   * While this component is a dialog, this method closes this component\n   */\n  closeDialog() {\n    this.matDialogRef.close();\n  }\n\n  /**\n   * When user chooses the file in the form, this method updates the form with the chosen file\n   * @param event event that contains a file that was chosen\n   */\n  onFileSelected(event: any) {\n    this.form.patchValue({\n      file: event.target.files[0]\n    })\n  }\n\n  /**\n   * Submits the form with the scenario to create\n   */\n  send() {\n    const formData = new FormData();\n    formData.append(\"name\", this.name.value);\n    formData.append(\"description\", this.description.value);\n    formData.append('file', this.file.value, this.file.value.name);\n    this.scenario_creation_subscription = this._client.saveScenario(formData).subscribe({\n      next: () => {\n        this.openSuccessfulSnackbar();\n      },\n      error: (response) => {\n        if (response.status === 400) {\n          this.openUnsuccessfulSnackbar(response.error);\n        } else {\n          this.openUnsuccessfulSnackbar(\"An unexpected error occurred\");\n        }\n      }\n    });\n  }\n\n  /**\n   * Opens successful snack bar with a provided message\n   * @param message message to show\n   */\n  openUnsuccessfulSnackbar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 5000,\n    });\n  }\n\n  /**\n   * Opens unsuccessful snack bar\n   */\n  openSuccessfulSnackbar() {\n    this._snackBar.open(\"Scenario was successfully sent to a server\", '', {\n      duration: 5000,\n    });\n  }\n}\n\n    \n\n    \n        \n  close\n\nCreate scenario\n\n  \n  \n  Import petri net scenario\n  \n    \n      \n    \n  \n  Create Scenario\n  \n\n\n    \n\n    \n                \n                    ./create-quiz.component.css\n                \n                .groups p{\n    font-size: 0.5rem;\n    opacity: 0.6;\n    border: 0.5px solid rgba(30, 30, 30, 0.6);\n    padding: 0.2rem 0.5rem !important;\n    border-radius: 3rem;\n}\n\n.active{\n    color: #44953D;\n    border-color: #44953D !important;\n}\n\n.petriNet{\n    display: flex;\n    width: 100%;\n    justify-content: center;\n    gap: 2rem;\n}\n\n.file {\n    display: flex;\n    align-items: center;\n    color: black !important;\n    padding: 0.5rem 1rem;\n    border-radius: 0.5rem;\n}\n\n.profileSettings{\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n    min-width: 20vw;\n    padding: 0 2rem;\n    justify-content: center;\n    align-items: center;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  closeCreate scenario      Import petri net scenario                    Create Scenario  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateQuizComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateSceneComponent.html":{"url":"components/CreateSceneComponent.html","title":"component - CreateSceneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateSceneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/create-scene/create-scene.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as a form for defining scenes in a system\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-scene\n            \n\n\n\n            \n                styleUrls\n                ./create-scene.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-scene.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                scene_creation_subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onFileSelected\n                            \n                            \n                                openSuccessfulSnackbar\n                            \n                            \n                                openUnsuccessfulSnackbar\n                            \n                            \n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    description\n                                \n                                \n                                    file\n                                \n                                \n                                    folder\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialogRef: MatDialogRef, _client: BackendService, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/create-scene/create-scene.component.ts:27\n                            \n                        \n\n                \n                    \n                            Constructor for a component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matDialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that defines that this component is dialog\n\n                                                        \n                                                \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BackendService instance that sends requests to a server\n\n                                                        \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening snack bars\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-scene/create-scene.component.ts:86\n                \n            \n\n\n            \n                \n                    While this component is a dialog, this method closes this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-scene/create-scene.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-scene/create-scene.component.ts:70\n                \n            \n\n\n            \n                \n                    Method that inits a form group for creating a scene with name, description, photo file and folder name\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onFileSelected\n                        \n                    \n                \n            \n            \n                \nonFileSelected(event: any)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-scene/create-scene.component.ts:94\n                \n            \n\n\n            \n                \n                    When user chooses the file in the form, this method updates the form with the chosen file\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        event when photo was chosen\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSuccessfulSnackbar\n                        \n                    \n                \n            \n            \n                \nopenSuccessfulSnackbar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-scene/create-scene.component.ts:136\n                \n            \n\n\n            \n                \n                    Opens unsuccessful snack bar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUnsuccessfulSnackbar\n                        \n                    \n                \n            \n            \n                \nopenUnsuccessfulSnackbar(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-scene/create-scene.component.ts:127\n                \n            \n\n\n            \n                \n                    Opens successful snack bar with a provided message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        message to show\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        send\n                        \n                    \n                \n            \n            \n                \nsend()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-scene/create-scene.component.ts:103\n                \n            \n\n\n            \n                \n                    Submits the form with the scene to define in system\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/create-scene/create-scene.component.ts:27\n                        \n                    \n\n            \n                \n                    Represents a collection of form controls that are logically grouped together. It provides a convenient way to manage and validate multiple form controls as a single unit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scene_creation_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/create-scene/create-scene.component.ts:21\n                        \n                    \n\n            \n                \n                    Subscription for defining a scene\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/create-scene/create-scene.component.ts:42\n                                \n                            \n                    \n                        \n                                Gets a name field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/create-scene/create-scene.component.ts:49\n                                \n                            \n                    \n                        \n                                Gets a name description from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        file\n                    \n                \n\n                \n                    \n                        getfile()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/create-scene/create-scene.component.ts:56\n                                \n                            \n                    \n                        \n                                Gets a file field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        folder\n                    \n                \n\n                \n                    \n                        getfolder()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/create-scene/create-scene.component.ts:63\n                                \n                            \n                    \n                        \n                                Gets a folder name from a form group\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {Subscription} from \"rxjs\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {MatDialogRef} from \"@angular/material/dialog\";\nimport {BackendService} from \"../../services/backend.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n/**\n * Component that is used as a form for defining scenes in a system\n */\n@Component({\n  selector: 'app-create-scene',\n  templateUrl: './create-scene.component.html',\n  styleUrls: ['./create-scene.component.css']\n})\nexport class CreateSceneComponent {\n\n  /**\n   * Subscription for defining a scene\n   */\n  scene_creation_subscription: Subscription = new Subscription();\n\n  /**\n   * Represents a collection of form controls that are logically grouped together. It provides a convenient way to manage and validate multiple form controls as a single unit.\n   */\n  // @ts-ignore\n  form: FormGroup;\n\n  /**\n   * Constructor for a component\n   * @param matDialogRef Angular Material component that defines that this component is dialog\n   * @param _client BackendService instance that sends requests to a server\n   * @param _snackBar Angular Material component that uses for opening snack bars\n   */\n  constructor(private matDialogRef: MatDialogRef, private _client: BackendService,\n              private _snackBar: MatSnackBar) {\n  }\n\n  /**\n   * Gets a name field from a form group\n   */\n  get name() {\n    return this.form.controls['name'];\n  }\n\n  /**\n   * Gets a name description from a form group\n   */\n  get description() {\n    return this.form.controls['description'];\n  }\n\n  /**\n   * Gets a file field from a form group\n   */\n  get file() {\n    return this.form.controls['file'];\n  }\n\n  /**\n   * Gets a folder name from a form group\n   */\n  get folder() {\n    return this.form.controls['folder']\n  }\n\n  /**\n   * Method that inits a form group for creating a scene with name, description, photo file and folder name\n   */\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      description: new FormControl('', [Validators.required]),\n      folder: new FormControl('', [Validators.required]),\n      file: new FormControl('', [Validators.required])\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.scene_creation_subscription.unsubscribe();\n  }\n\n  /**\n   * While this component is a dialog, this method closes this component\n   */\n  closeDialog() {\n    this.matDialogRef.close();\n  }\n\n  /**\n   * When user chooses the file in the form, this method updates the form with the chosen file\n   * @param event event when photo was chosen\n   */\n  onFileSelected(event: any) {\n    this.form.patchValue({\n      file: event.target.files[0]\n    })\n  }\n\n  /**\n   * Submits the form with the scene to define in system\n   */\n  send() {\n    const formData = new FormData();\n    formData.append(\"name\", this.name.value);\n    formData.append(\"description\", this.description.value);\n    formData.append(\"folder\", this.folder.value)\n    formData.append('file', this.file.value, this.file.value.name);\n    this.scene_creation_subscription = this._client.saveScene(formData).subscribe({\n      next: () => {\n        this.openSuccessfulSnackbar();\n      },\n      error: (response) => {\n        if (response.status === 400) {\n          this.openUnsuccessfulSnackbar(response.error);\n        } else {\n          this.openUnsuccessfulSnackbar(\"An unexpected error occurred\");\n        }\n      }\n    });\n  }\n\n  /**\n   * Opens successful snack bar with a provided message\n   * @param message message to show\n   */\n  openUnsuccessfulSnackbar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 5000,\n    });\n  }\n\n  /**\n   * Opens unsuccessful snack bar\n   */\n  openSuccessfulSnackbar() {\n    this._snackBar.open(\"Scene was successfully sent to a server\", '', {\n      duration: 5000,\n    });\n  }\n}\n\n    \n\n    \n        \n  close\n\nCreate scene\n\n  \n  \n  \n  Import scene photo\n  \n    \n      \n    \n  \n  Create scene\n  \n\n\n    \n\n    \n                \n                    ./create-scene.component.css\n                \n                .groups p {\n  font-size: 0.5rem;\n  opacity: 0.6;\n  border: 0.5px solid rgba(30, 30, 30, 0.6);\n  padding: 0.2rem 0.5rem !important;\n  border-radius: 3rem;\n}\n\n.active {\n  color: #44953D;\n  border-color: #44953D !important;\n}\n\n.petriNet {\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  gap: 2rem;\n}\n\n.file {\n  display: flex;\n  align-items: center;\n  color: black !important;\n  padding: 0.5rem 1rem;\n  border-radius: 0.5rem;\n}\n\n.profileSettings {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  min-width: 20vw;\n  padding: 0 2rem;\n  justify-content: center;\n  align-items: center;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  closeCreate scene        Import scene photo                    Create scene  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateSceneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/CreateTaskComponent.html":{"url":"components/CreateTaskComponent.html","title":"component - CreateTaskComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  CreateTaskComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/create-task/create-task.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as a form for creating tasks in a system\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-create-task\n            \n\n\n\n            \n                styleUrls\n                ./create-task.component.css\n            \n\n\n\n            \n                templateUrl\n                ./create-task.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                scenario_subscription\n                            \n                            \n                                scenarios\n                            \n                            \n                                scene_subscription\n                            \n                            \n                                scenes\n                            \n                            \n                                stage\n                            \n                            \n                                task_creation_subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                goToStage1\n                            \n                            \n                                goToStage2\n                            \n                            \n                                goToStage3\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openScenarioPreview\n                            \n                            \n                                openScenePreview\n                            \n                            \n                                openSuccessfulSnackbar\n                            \n                            \n                                openUnsuccessfulSnackbar\n                            \n                            \n                                send\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    name\n                                \n                                \n                                    description\n                                \n                                \n                                    scenario\n                                \n                                \n                                    scene\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialogRef: MatDialogRef, _client: BackendService, _snackBar: MatSnackBar, matDialog: MatDialog)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/create-task/create-task.component.ts:57\n                            \n                        \n\n                \n                    \n                            Constructor for a component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matDialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that defines that this component is dialog\n\n                                                        \n                                                \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BackendService instance that sends requests to a server\n\n                                                        \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening snack bars\n\n                                                        \n                                                \n                                                \n                                                        matDialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening dialogs\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-task/create-task.component.ts:125\n                \n            \n\n\n            \n                \n                    While this component is a dialog, this method closes this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToStage1\n                        \n                    \n                \n            \n            \n                \ngoToStage1()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-task/create-task.component.ts:176\n                \n            \n\n\n            \n                \n                    Moves to the 1 stage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToStage2\n                        \n                    \n                \n            \n            \n                \ngoToStage2()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-task/create-task.component.ts:183\n                \n            \n\n\n            \n                \n                    Moves to the 2 stage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        goToStage3\n                        \n                    \n                \n            \n            \n                \ngoToStage3()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-task/create-task.component.ts:190\n                \n            \n\n\n            \n                \n                    Moves to the 3 stage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-task/create-task.component.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-task/create-task.component.ts:101\n                \n            \n\n\n            \n                \n                    Reads all scenarios and scenes from a database, inits a form group for creating a task\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openScenarioPreview\n                        \n                    \n                \n            \n            \n                \nopenScenarioPreview(i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-task/create-task.component.ts:198\n                \n            \n\n\n            \n                \n                    Opens preview for a scenario in additional dialog\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of a scenario to preview\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openScenePreview\n                        \n                    \n                \n            \n            \n                \nopenScenePreview(i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-task/create-task.component.ts:206\n                \n            \n\n\n            \n                \n                    Opens preview for a scene in additional dialog\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of a scene to preview\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSuccessfulSnackbar\n                        \n                    \n                \n            \n            \n                \nopenSuccessfulSnackbar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-task/create-task.component.ts:166\n                \n            \n\n\n            \n                \n                    Opens successful snack bar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUnsuccessfulSnackbar\n                        \n                    \n                \n            \n            \n                \nopenUnsuccessfulSnackbar(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-task/create-task.component.ts:157\n                \n            \n\n\n            \n                \n                    Opens unsuccessful snack bar with a provided message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        message to show\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        send\n                        \n                    \n                \n            \n            \n                \nsend()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/create-task/create-task.component.ts:132\n                \n            \n\n\n            \n                \n                    Submits the form with the task to create\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/create-task/create-task.component.ts:42\n                        \n                    \n\n            \n                \n                    Represents a collection of form controls that are logically grouped together. It provides a convenient way to manage and validate multiple form controls as a single unit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scenario_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/create-task/create-task.component.ts:52\n                        \n                    \n\n            \n                \n                    Subscription for getting list of available scenarios\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scenarios\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScenarioPreview[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/create-task/create-task.component.ts:31\n                        \n                    \n\n            \n                \n                    List of scenarios from which tasks can be created\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scene_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/create-task/create-task.component.ts:47\n                        \n                    \n\n            \n                \n                    Subscription for getting list of available scenes\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scenes\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScenePreview[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/create-task/create-task.component.ts:26\n                        \n                    \n\n            \n                \n                    List of scenes from which tasks can be created\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        stage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 1\n                    \n                \n                    \n                        \n                                Defined in src/app/components/create-task/create-task.component.ts:36\n                        \n                    \n\n            \n                \n                    Stage of task creation. There are 3 stages: define task info, choose scenario and choose scene\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task_creation_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/create-task/create-task.component.ts:57\n                        \n                    \n\n            \n                \n                    Subscription for creating a task\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/create-task/create-task.component.ts:73\n                                \n                            \n                    \n                        \n                                Gets a name field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        description\n                    \n                \n\n                \n                    \n                        getdescription()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/create-task/create-task.component.ts:80\n                                \n                            \n                    \n                        \n                                Gets a description field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        scenario\n                    \n                \n\n                \n                    \n                        getscenario()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/create-task/create-task.component.ts:87\n                                \n                            \n                    \n                        \n                                Gets a scenario field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        scene\n                    \n                \n\n                \n                    \n                        getscene()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/create-task/create-task.component.ts:94\n                                \n                            \n                    \n                        \n                                Gets a scene field from a form group\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {ScenePreview} from \"../../models/scene-preview.model\";\nimport {Subscription} from \"rxjs\";\nimport {BackendService} from \"../../services/backend.service\";\nimport {ScenarioPreview} from \"../../models/scenario-preview.model\";\nimport {MatDialog, MatDialogRef} from \"@angular/material/dialog\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {PreviewScenariosComponent} from \"../preview-scenarios/preview-scenarios.component\";\nimport {PreviewSceneComponent} from \"../preview-scene/preview-scene.component\";\nimport {TaskCreation} from \"../../models/task-creation.model\";\n\n/**\n * Component that is used as a form for creating tasks in a system\n */\n@Component({\n  selector: 'app-create-task',\n  templateUrl: './create-task.component.html',\n  styleUrls: ['./create-task.component.css']\n})\nexport class CreateTaskComponent implements OnInit, OnDestroy {\n\n  /**\n   * List of scenes from which tasks can be created\n   */\n  scenes: ScenePreview[] = [];\n\n  /**\n   * List of scenarios from which tasks can be created\n   */\n  scenarios: ScenarioPreview[] = [];\n\n  /**\n   * Stage of task creation. There are 3 stages: define task info, choose scenario and choose scene\n   */\n  stage: number = 1;\n\n  /**\n   * Represents a collection of form controls that are logically grouped together. It provides a convenient way to manage and validate multiple form controls as a single unit.\n   */\n  // @ts-ignore\n  form: FormGroup;\n\n  /**\n   * Subscription for getting list of available scenes\n   */\n  scene_subscription: Subscription = new Subscription();\n\n  /**\n   * Subscription for getting list of available scenarios\n   */\n  scenario_subscription: Subscription = new Subscription();\n\n  /**\n   * Subscription for creating a task\n   */\n  task_creation_subscription: Subscription = new Subscription();\n\n  /**\n   * Constructor for a component\n   * @param matDialogRef Angular Material component that defines that this component is dialog\n   * @param _client BackendService instance that sends requests to a server\n   * @param _snackBar Angular Material component that uses for opening snack bars\n   * @param matDialog Angular Material component that uses for opening dialogs\n   */\n  constructor(private matDialogRef: MatDialogRef, private _client: BackendService,\n              private _snackBar: MatSnackBar, private matDialog: MatDialog) {\n  }\n\n  /**\n   * Gets a name field from a form group\n   */\n  get name() {\n    return this.form.controls['name'];\n  }\n\n  /**\n   * Gets a description field from a form group\n   */\n  get description() {\n    return this.form.controls['description'];\n  }\n\n  /**\n   * Gets a scenario field from a form group\n   */\n  get scenario() {\n    return this.form.controls['scenario'];\n  }\n\n  /**\n   * Gets a scene field from a form group\n   */\n  get scene() {\n    return this.form.controls['scene'];\n  }\n\n  /**\n   * Reads all scenarios and scenes from a database, inits a form group for creating a task\n   */\n  ngOnInit() {\n    this.scene_subscription = this._client.getScenesPreview().subscribe(data => {\n      this.scenes = data as ScenePreview[];\n    })\n    this.scenario_subscription = this._client.getScenariosPreview().subscribe(data => {\n      this.scenarios = data as ScenarioPreview[];\n    })\n\n    this.form = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      description: new FormControl('', [Validators.required]),\n      scenario: new FormControl('', [Validators.required]),\n      scene: new FormControl('', [Validators.required])\n    });\n  }\n\n  ngOnDestroy() {\n    this.scenario_subscription.unsubscribe();\n    this.scene_subscription.unsubscribe();\n  }\n\n  /**\n   * While this component is a dialog, this method closes this component\n   */\n  closeDialog() {\n    this.matDialogRef.close();\n  }\n\n  /**\n   * Submits the form with the task to create\n   */\n  send() {\n    let task: TaskCreation = new TaskCreation({\n      name: this.name.value,\n      description: this.description.value,\n      scenarioId: Number(this.scenario.value),\n      sceneId: Number(this.scene.value)\n    });\n    this.task_creation_subscription = this._client.saveTask(task).subscribe({\n      next: () => {\n        this.openSuccessfulSnackbar();\n      },\n      error: (response) => {\n        if (response.status === 400) {\n          this.openUnsuccessfulSnackbar(response.error);\n        } else {\n          this.openUnsuccessfulSnackbar(\"An unexpected error occurred\");\n        }\n      }\n    });\n  }\n\n  /**\n   * Opens unsuccessful snack bar with a provided message\n   * @param message message to show\n   */\n  openUnsuccessfulSnackbar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 5000,\n    });\n  }\n\n  /**\n   * Opens successful snack bar\n   */\n  openSuccessfulSnackbar() {\n    this._snackBar.open(\"Task was successfully created\", '', {\n      duration: 5000,\n    });\n    this.form.reset();\n  }\n\n  /**\n   * Moves to the 1 stage\n   */\n  goToStage1() {\n    this.stage = 1;\n  }\n\n  /**\n   * Moves to the 2 stage\n   */\n  goToStage2() {\n    this.stage = 2;\n  }\n\n  /**\n   * Moves to the 3 stage\n   */\n  goToStage3() {\n    this.stage = 3;\n  }\n\n  /**\n   * Opens preview for a scenario in additional dialog\n   * @param i id of a scenario to preview\n   */\n  openScenarioPreview(i: number) {\n    this.matDialog.open(PreviewScenariosComponent, {data: JSON.parse(JSON.stringify(this.scenarios[i]))});\n  }\n\n  /**\n   * Opens preview for a scene in additional dialog\n   * @param i id of a scene to preview\n   */\n  openScenePreview(i: number) {\n    this.matDialog.open(PreviewSceneComponent, {data: JSON.parse(JSON.stringify(this.scenes[i]))})\n  }\n}\n\n    \n\n    \n        \n  close\n\n\n  \n    Add name and description of a task\n    \n    \n    Next stage\n  \n\n\n  \n    Choose scenario\n    \n      \n        \n          \n            {{scenario.name}}\n            Preview\n          \n        \n      \n    \n    Previous stage\n    Next stage\n  \n\n\n  \n    Choose scene\n    \n      \n        \n          \n            {{scene.name}}\n            Preview\n          \n        \n      \n    \n    Previous stage\n    Create task\n    \n  \n\n\n    \n\n    \n                \n                    ./create-task.component.css\n                \n                .groups p {\n  font-size: 0.5rem;\n  opacity: 0.6;\n  border: 0.5px solid rgba(30, 30, 30, 0.6);\n  padding: 0.2rem 0.5rem !important;\n  border-radius: 3rem;\n}\n\n.active {\n  color: #44953D;\n  border-color: #44953D !important;\n}\n\n.petriNet {\n  display: flex;\n  width: 100%;\n  justify-content: center;\n  gap: 2rem;\n}\n\n.file {\n  display: flex;\n  align-items: center;\n  color: black !important;\n  padding: 0.5rem 1rem;\n  border-radius: 0.5rem;\n}\n\n.profileSettings {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  min-width: 20vw;\n  padding: 0 2rem;\n  justify-content: center;\n  align-items: center;\n}\n\n.slide-box {\n  width: 350px;\n  height: 250px;\n  overflow: scroll;\n  display: flex;\n  /*flex-direction: row;*/\n  /*justify-content: flex-start;*/\n}\n\nmat-radio-button {\n  display: flex;\n  flex-direction: column;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  close      Add name and description of a task            Next stage        Choose scenario                                        {{scenario.name}}            Preview                                Previous stage    Next stage        Choose scene                                        {{scene.name}}            Preview                                Previous stage    Create task      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'CreateTaskComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/DashboardComponent.html":{"url":"components/DashboardComponent.html","title":"component - DashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  DashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/dashboard/dashboard.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as a form for creating tasks in a system\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users-dashboard\n            \n\n\n\n            \n                styleUrls\n                ./dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                CreateScenarioDialogOpen\n                            \n                            \n                                CreateSceneDialogOpen\n                            \n                            \n                                CreateTaskDialogOpen\n                            \n                            \n                                GroupsHistoryOpen\n                            \n                            \n                                GroupsTasksOpen\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                UsersDashboardOpen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialog: MatDialog, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/dashboard/dashboard.component.ts:16\n                            \n                        \n\n                \n                    \n                            Constructor for a component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matDialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening dialogs\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router field to route between components\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        CreateScenarioDialogOpen\n                        \n                    \n                \n            \n            \n                \nCreateScenarioDialogOpen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:37\n                \n            \n\n\n            \n                \n                    Opens CreateQuizComponent dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateSceneDialogOpen\n                        \n                    \n                \n            \n            \n                \nCreateSceneDialogOpen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:45\n                \n            \n\n\n            \n                \n                    Opens CreateSceneComponent dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        CreateTaskDialogOpen\n                        \n                    \n                \n            \n            \n                \nCreateTaskDialogOpen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:53\n                \n            \n\n\n            \n                \n                    Opens CreateTaskComponent dialog\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GroupsHistoryOpen\n                        \n                    \n                \n            \n            \n                \nGroupsHistoryOpen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:77\n                \n            \n\n\n            \n                \n                    Routes to a '/dashboard/groups-history' URL\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        GroupsTasksOpen\n                        \n                    \n                \n            \n            \n                \nGroupsTasksOpen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:69\n                \n            \n\n\n            \n                \n                    Routes to a '/dashboard/groups' URL\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:30\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        UsersDashboardOpen\n                        \n                    \n                \n            \n            \n                \nUsersDashboardOpen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/dashboard/dashboard.component.ts:61\n                \n            \n\n\n            \n                \n                    Routes to a '/dashboard/users' URL\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {CreateQuizComponent} from \"../create-quiz/create-quiz.component\";\nimport {CreateSceneComponent} from \"../create-scene/create-scene.component\";\nimport {CreateTaskComponent} from \"../create-task/create-task.component\";\nimport {Router} from \"@angular/router\";\n\n/**\n * Component that is used as a form for creating tasks in a system\n */\n@Component({\n  selector: 'app-users-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n\n  /**\n   * Constructor for a component\n   * @param matDialog Angular Material component that uses for opening dialogs\n   * @param _router Router field to route between components\n   */\n  constructor(private matDialog: MatDialog, private _router: Router) {\n  }\n\n  ngOnInit(): void {\n\n  }\n\n  ngOnDestroy(): void {\n  }\n\n  /**\n   * Opens CreateQuizComponent dialog\n   * @constructor\n   */\n  CreateScenarioDialogOpen() {\n    this.matDialog.open(CreateQuizComponent);\n  }\n\n  /**\n   * Opens CreateSceneComponent dialog\n   * @constructor\n   */\n  CreateSceneDialogOpen() {\n    this.matDialog.open(CreateSceneComponent);\n  }\n\n  /**\n   * Opens CreateTaskComponent dialog\n   * @constructor\n   */\n  CreateTaskDialogOpen() {\n    this.matDialog.open(CreateTaskComponent);\n  }\n\n  /**\n   * Routes to a '/dashboard/users' URL\n   * @constructor\n   */\n  UsersDashboardOpen() {\n    this._router.navigate(['/dashboard/users']).then();\n  }\n\n  /**\n   * Routes to a '/dashboard/groups' URL\n   * @constructor\n   */\n  GroupsTasksOpen() {\n    this._router.navigate(['/dashboard/groups']).then();\n  }\n\n  /**\n   * Routes to a '/dashboard/groups-history' URL\n   * @constructor\n   */\n  GroupsHistoryOpen() {\n    this._router.navigate(['/dashboard/groups-history']).then();\n  }\n}\n\n    \n\n    \n        \n  \n    Create Scenario\n    \n      This is where you can create a new scenario.\n    \n  \n\n  \n    Create Scene\n    \n      This is where you can create a new scene.\n    \n  \n\n  \n    Create Task\n    \n      This is where you can create a new task.\n    \n  \n\n\n\n  \n    Manage Users\n    \n      This is where you can manage users.\n    \n  \n\n  \n    Manage Groups Tasks\n    \n      This is where you can manage groups tasks.\n    \n  \n\n  \n    Groups Task History\n    \n      Watch task history of users in different groups\n    \n  \n\n\n    \n\n    \n                \n                    ./dashboard.component.css\n                \n                .my-card {\n  cursor: pointer;\n  width: 200px;\n  height: 200px;\n  text-align: center;\n  background-color: #f5f5f5;\n  box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);\n}\n\n.my-card-title {\n  margin-top: 15px;\n  text-align: center;\n}\n\n.my-card-content {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n}\n\n.column-block {\n  display: inline-block;\n  margin-left: 20px;\n  margin-right: 20px;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Create Scenario          This is where you can create a new scenario.            Create Scene          This is where you can create a new scene.            Create Task          This is where you can create a new task.            Manage Users          This is where you can manage users.            Manage Groups Tasks          This is where you can manage groups tasks.            Groups Task History          Watch task history of users in different groups      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'DashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FiringAttempt.html":{"url":"interfaces/FiringAttempt.html","title":"interface - FiringAttempt","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FiringAttempt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/task-history/task-history.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            actionFound\n                                        \n                                \n                                \n                                        \n                                            actionTargets\n                                        \n                                \n                                \n                                        \n                                            successful\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionFound\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionFound:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionTargets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionTargets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        successful\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        successful:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {BackendService} from \"../../services/backend.service\";\nimport {Subscription} from \"rxjs\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n// TODO: add get also time when each transition was fired\ninterface FiringAttempt {\n  action: string;\n  actionFound: boolean;\n  successful: boolean;\n  actionTargets: string[];\n}\n\n@Component({\n  selector: 'app-task-history',\n  templateUrl: './task-history.component.html',\n  styleUrls: ['./task-history.component.css']\n})\nexport class TaskHistoryComponent implements OnInit, OnDestroy{\n\n  firring_attempts_subscription: Subscription = new Subscription();\n  // @ts-ignore\n  firringAttempts: FiringAttempt[];\n  // @ts-ignore\n  sessionId: number;\n\n  // TODO: get info about task (task name)\n  // TODO: get session duration and if session was successfull or not\n\n  constructor(private _route: ActivatedRoute, private _client: BackendService,) {\n    this._route.params.subscribe(params => {\n      this.sessionId = params['sessionId'];\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.firring_attempts_subscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.firring_attempts_subscription = this._client.getFiringAttempts(this.sessionId).subscribe(data => {\n      this.firringAttempts = data as [];\n    })\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FiringAttempt-1.html":{"url":"interfaces/FiringAttempt-1.html","title":"interface - FiringAttempt-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FiringAttempt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/task-his/task-history/task-history.component.ts\n        \n\n\n            \n                Description\n            \n            \n                Object that defines actions of user in tasks\n\n            \n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            actionFound\n                                        \n                                \n                                \n                                        \n                                            actionTargets\n                                        \n                                \n                                \n                                        \n                                            firedAt\n                                        \n                                \n                                \n                                        \n                                            successful\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionFound\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionFound:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionTargets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionTargets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        successful\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        successful:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {BackendService} from \"../../../services/backend.service\";\nimport {Router} from \"@angular/router\";\nimport {TaskSessionInfo} from \"../../../models/task-session-info.model\";\nimport {Subscription} from \"rxjs\";\n\n/**\n * Object that defines actions of user in tasks\n */\ninterface FiringAttempt {\n  action: string;\n  actionFound: boolean;\n  successful: boolean;\n  actionTargets: string[];\n  firedAt: Date;\n}\n\n/**\n * Component that is used as a page contains history of a completed task\n */\n@Component({\n  selector: 'app-task-history',\n  templateUrl: './task-history.component.html',\n  styleUrls: ['./task-history.component.css']\n})\nexport class TaskHistoryComponent implements OnInit, OnDestroy {\n\n  /**\n   * List of firing attempts\n   */\n  // @ts-ignore\n  firringAttempts: FiringAttempt[];\n\n  /**\n   * Subscription to fetch firing attempts of a current task session\n   */\n  firring_attempts_subscription: Subscription = new Subscription();\n  // @ts-ignore\n\n  /**\n   * Information about completed session\n   */\n  sessionData: TaskSessionInfo;\n\n  /**\n   * Duration of a session\n   */\n  duration: string = \"\";\n\n  /**\n   * Whether extended page of a session was open\n   */\n  extended_open: boolean = false;\n\n  /**\n   * Whether data was already loaded\n   */\n  loaded: boolean = false;\n\n  /**\n   * Contains information from which component this component was opened\n   */\n  from: string = \"\";\n\n  /**\n   * Constructor for a component\n   * @param _client BackendService instance that sends requests to a server\n   * @param router Router field to route between components\n   */\n  constructor(private router: Router, private _client: BackendService,) {\n    // @ts-ignore\n    this.sessionData = this.router.getCurrentNavigation().extras.state.data as TaskSessionInfo;\n    // @ts-ignore\n    this.from = this.router.getCurrentNavigation().extras.state.from as string;\n    this.countDuration()\n  }\n\n  /**\n   * Method that fetch firing attempts of a current session\n   */\n  ngOnInit(): void {\n    this.firring_attempts_subscription = this._client.getFiringAttempts(this.sessionData.id).subscribe(data => {\n      this.firringAttempts = data as [];\n      this.loaded = true;\n    })\n  }\n\n  /**\n   * Method to count duration of a session from milliseconds to a \"hh:MM:ss\" format\n   */\n  countDuration(): void {\n    const startedAt = this.sessionData.startedAt;\n    const finishedAt = this.sessionData.finishedAt;\n\n    const durationInMs = new Date(finishedAt).getTime() - new Date(startedAt).getTime();\n    const hours = Math.floor(durationInMs / (1000 * 60 * 60));\n    const minutes = Math.floor((durationInMs % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((durationInMs % (1000 * 60)) / 1000);\n\n    if (hours > 0) {\n      this.duration += `${hours} h `;\n    }\n    if (minutes > 0 || hours === 0) {\n      this.duration += `${minutes} min `;\n    }\n    this.duration += `${seconds} sec`;\n  }\n\n  ngOnDestroy(): void {\n    this.firring_attempts_subscription.unsubscribe();\n  }\n\n  /**\n   * Changes status whether extended statistics was opened or not\n   */\n  change_status() {\n    this.extended_open = !this.extended_open;\n  }\n\n  /**\n   * Close current page and redirects to the previous one depends on \"from\" field\n   */\n  close() {\n    if (this.from === 'profile') {\n      this.router.navigate([\"/user/profile\"]).then();\n    } else if (this.from === 'dashboard') {\n      this.router.navigate([\"/dashboard/groups-history\"]).then();\n    }\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FiringAttempt-2.html":{"url":"interfaces/FiringAttempt-2.html","title":"interface - FiringAttempt-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FiringAttempt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/task-his/task-history-extended/task-history-extended.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            actionFound\n                                        \n                                \n                                \n                                        \n                                            actionTargets\n                                        \n                                \n                                \n                                        \n                                            firedAt\n                                        \n                                \n                                \n                                        \n                                            successful\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionFound\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionFound:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionTargets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionTargets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        successful\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        successful:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\n\ninterface FiringAttempt {\n  action: string;\n  actionFound: boolean;\n  successful: boolean;\n  actionTargets: string[];\n  firedAt: Date;\n}\n\n/**\n * Component that is used as extended page with statistics of a task session\n */\n@Component({\n  selector: 'app-task-history-extended',\n  templateUrl: './task-history-extended.component.html',\n  styleUrls: ['./task-history-extended.component.css']\n})\nexport class TaskHistoryExtendedComponent implements OnInit, OnDestroy {\n\n  /**\n   * List with a firing attempts of a task session\n   */\n  // @ts-ignore\n  @Input() firringAttempts: FiringAttempt[];\n\n  /**\n   * List with a current firing attempts on the current page\n   */\n  current_attempts: FiringAttempt[] = [];\n\n  /**\n   * Total pages of the firing attempts\n   */\n  max_pages: number = 0;\n\n  /**\n   * Current page\n   */\n  page: number = 0;\n\n  /**\n   * Items per page\n   */\n  items_per_page: number = 10;\n\n  /**\n   * Method to init max_pages and current_attempts fields\n   */\n  ngOnInit(): void {\n    this.max_pages = Math.ceil(this.firringAttempts.length / this.items_per_page);\n    this.current_attempts = this.firringAttempts.slice(0, Math.min(this.firringAttempts.length, this.items_per_page));\n  }\n\n  /**\n   * Moves to the previous page\n   */\n  prev_attempts() {\n    this.page--;\n    this.current_attempts = this.firringAttempts.slice(this.page * this.items_per_page,\n      Math.min(this.firringAttempts.length, (this.page + 1) * this.items_per_page));\n  }\n\n  /**\n   * Moves to the next page\n   */\n  next_attempts() {\n    this.page++;\n    this.current_attempts = this.firringAttempts.slice(this.page * this.items_per_page,\n      Math.min(this.firringAttempts.length, (this.page + 1) * this.items_per_page));\n  }\n\n  ngOnDestroy(): void {\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/FiringAttempt-3.html":{"url":"interfaces/FiringAttempt-3.html","title":"interface - FiringAttempt-3","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  FiringAttempt\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/components/task-his/task-history-statistics/task-history-statistics.component.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            action\n                                        \n                                \n                                \n                                        \n                                            actionFound\n                                        \n                                \n                                \n                                        \n                                            actionTargets\n                                        \n                                \n                                \n                                        \n                                            firedAt\n                                        \n                                \n                                \n                                        \n                                            successful\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        action\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        action:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionFound\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionFound:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        actionTargets\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        actionTargets:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        successful\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        successful:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\ninterface FiringAttempt {\n  action: string;\n  actionFound: boolean;\n  successful: boolean;\n  actionTargets: string[];\n  firedAt: Date;\n}\n\n/**\n * Component that is used as basic page with a task session statistics\n */\n@Component({\n  selector: 'app-task-history-statistics',\n  templateUrl: './task-history-statistics.component.html',\n  styleUrls: ['./task-history-statistics.component.css']\n})\nexport class TaskHistoryStatisticsComponent implements OnInit {\n\n  /**\n   * List with a firing attempts of a task session\n   */\n  // @ts-ignore\n  @Input() firringAttempts: FiringAttempt[];\n\n  /**\n   * Total attempts (Amount of firing attempts)\n   */\n  totalAttempts: number = 0;\n\n  /**\n   * Amount of correct attempts\n   */\n  correctAttempts: number = 0;\n\n  /**\n   * Amount of incorrect attempts\n   */\n  incorrectAttempts: number = 0;\n\n  /**\n   * Percentage of correct attempts\n   */\n  percentage: number = 0;\n\n  /**\n   * Method that counts necessary statistics variables\n   */\n  ngOnInit() {\n    this.totalAttempts = this.firringAttempts.length;\n    this.firringAttempts.forEach(f => {\n      if (f.successful) {\n        this.correctAttempts++;\n      } else {\n        this.incorrectAttempts++;\n      }\n    })\n    this.percentage = this.correctAttempts / this.totalAttempts * 100;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/FooterComponent.html":{"url":"components/FooterComponent.html","title":"component - FooterComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  FooterComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/footer/footer.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as a footer in application\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-footer\n            \n\n\n\n            \n                styleUrls\n                ./footer.component.css\n            \n\n\n\n            \n                templateUrl\n                ./footer.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * Component that is used as a footer in application\n */\n@Component({\n  selector: 'app-footer',\n  templateUrl: './footer.component.html',\n  styleUrls: ['./footer.component.css']\n})\nexport class FooterComponent {\n\n}\n\n    \n\n    \n        \n    \n    Copyright © Zážitok vo virtuálnej realite - Adam Kašela & Štefan Korečko, 2022\n    Tento produkt vznikol s podporou projektu KEGA č. 048TUKE-4/2022: Technológie zdieľanej virtuálnej reality vo vzdelávacom procese.\n    Laboratórium LIRKIS, KPI FEI, Technická univerzita v Košiciach\n    \n\n    \n\n    \n                \n                    ./footer.component.css\n                \n                .footer{\n    background-color: var(--footer-color);\n    width: 100%;\n    padding:2rem 0;\n    text-align: center;\n    color: var(--purple-color);\n    font-size: 0.7rem;\n}\n\n.footer p{\n    max-width: 80%;\n    opacity: 0.6;\n    margin: 0 auto !important;\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '        Copyright © Zážitok vo virtuálnej realite - Adam Kašela & Štefan Korečko, 2022    Tento produkt vznikol s podporou projektu KEGA č. 048TUKE-4/2022: Technológie zdieľanej virtuálnej reality vo vzdelávacom procese.    Laboratórium LIRKIS, KPI FEI, Technická univerzita v Košiciach    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'FooterComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Group.html":{"url":"classes/Group.html","title":"class - Group","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Group\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/group.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(init?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/group.model.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/group.model.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/group.model.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Group {\n  id: number = 0;\n  name: string = \"\";\n\n  constructor(init?: Partial) {\n    Object.assign(this, init);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupSessionsComponent.html":{"url":"components/GroupSessionsComponent.html","title":"component - GroupSessionsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupSessionsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/group-sessions/group-sessions.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used to show a list of a task sessions of current group\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-sessions\n            \n\n\n\n            \n                styleUrls\n                ./group-sessions.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-sessions.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                current_sessions\n                            \n                            \n                                groupId\n                            \n                            \n                                items_per_page\n                            \n                            \n                                max_pages\n                            \n                            \n                                page\n                            \n                            \n                                sessions\n                            \n                            \n                                task_sessions_subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                navigateBack\n                            \n                            \n                                next_sessions\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open_preview\n                            \n                            \n                                prev_sessions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_router: Router, _client: BackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/group-sessions/group-sessions.component.ts:50\n                            \n                        \n\n                \n                    \n                            Constructor for a component. Retrieves group id from a link on which this page was opened\nand loads all task sessions belongs to this group.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router field to route between components\n\n                                                        \n                                                \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BackendService instance that sends requests to a server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        navigateBack\n                        \n                    \n                \n            \n            \n                \nnavigateBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/group-sessions/group-sessions.component.ts:77\n                \n            \n\n\n            \n                \n                    Navigates back to a component where this component was chosen\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        next_sessions\n                        \n                    \n                \n            \n            \n                \nnext_sessions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/group-sessions/group-sessions.component.ts:93\n                \n            \n\n\n            \n                \n                    Loads next page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/group-sessions/group-sessions.component.ts:71\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/group-sessions/group-sessions.component.ts:68\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open_preview\n                        \n                    \n                \n            \n            \n                \nopen_preview(session: TaskSessionInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/group-sessions/group-sessions.component.ts:103\n                \n            \n\n\n            \n                \n                    Opens chosen session for a preview\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                                TaskSessionInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        chosen session\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prev_sessions\n                        \n                    \n                \n            \n            \n                \nprev_sessions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/group-sessions/group-sessions.component.ts:84\n                \n            \n\n\n            \n                \n                    Loads previous page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        current_sessions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskSessionInfo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/group-sessions/group-sessions.component.ts:35\n                        \n                    \n\n            \n                \n                    List of sessions that are in the current page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/group-sessions/group-sessions.component.ts:20\n                        \n                    \n\n            \n                \n                    Id of a group to load sessions from\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items_per_page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/components/group-sessions/group-sessions.component.ts:50\n                        \n                    \n\n            \n                \n                    Items per page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        max_pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/group-sessions/group-sessions.component.ts:40\n                        \n                    \n\n            \n                \n                    Pages number\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/group-sessions/group-sessions.component.ts:45\n                        \n                    \n\n            \n                \n                    Current page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sessions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskSessionInfo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/group-sessions/group-sessions.component.ts:30\n                        \n                    \n\n            \n                \n                    List of loaded sessions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task_sessions_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/group-sessions/group-sessions.component.ts:25\n                        \n                    \n\n            \n                \n                    Subscription to load task sessions for a current group\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from \"@angular/router\";\nimport {Subscription} from \"rxjs\";\nimport {TaskSessionInfo} from \"../../models/task-session-info.model\";\nimport {BackendService} from \"../../services/backend.service\";\n\n/**\n * Component that is used to show a list of a task sessions of current group\n */\n@Component({\n  selector: 'app-group-sessions',\n  templateUrl: './group-sessions.component.html',\n  styleUrls: ['./group-sessions.component.css']\n})\nexport class GroupSessionsComponent implements OnInit, OnDestroy {\n\n  /**\n   * Id of a group to load sessions from\n   */\n  groupId: number = 0;\n\n  /**\n   * Subscription to load task sessions for a current group\n   */\n  task_sessions_subscription: Subscription = new Subscription();\n\n  /**\n   * List of loaded sessions\n   */\n  sessions: TaskSessionInfo[] = [];\n\n  /**\n   * List of sessions that are in the current page\n   */\n  current_sessions: TaskSessionInfo[] = [];\n\n  /**\n   * Pages number\n   */\n  max_pages: number = 0;\n\n  /**\n   * Current page\n   */\n  page: number = 0;\n\n  /**\n   * Items per page\n   */\n  items_per_page: number = 5;\n\n  /**\n   * Constructor for a component. Retrieves group id from a link on which this page was opened\n   * and loads all task sessions belongs to this group.\n   * @param _router Router field to route between components\n   * @param _client BackendService instance that sends requests to a server\n   */\n  constructor(private _router: Router, private _client: BackendService) {\n    // @ts-ignore\n    this.groupId = this._router.getCurrentNavigation().extras.state.data as number;\n    this.task_sessions_subscription = this._client.getTaskSessionsInfoByGroups(this.groupId).subscribe(data => {\n      this.sessions = data as TaskSessionInfo[];\n      this.max_pages = Math.ceil(this.sessions.length / this.items_per_page);\n      this.current_sessions = this.sessions.slice(0, Math.min(this.sessions.length, this.items_per_page));\n    })\n  }\n\n  ngOnInit(): void {\n  }\n\n  ngOnDestroy(): void {\n  }\n\n  /**\n   * Navigates back to a component where this component was chosen\n   */\n  navigateBack() {\n    this._router.navigate(['/dashboard/groups-history']).then();\n  }\n\n  /**\n   * Loads previous page\n   */\n  prev_sessions() {\n    this.page--;\n    this.current_sessions = this.sessions.slice(this.page * this.items_per_page,\n      Math.min(this.sessions.length, (this.page + 1) * this.items_per_page));\n  }\n\n  /**\n   * Loads next page\n   */\n  next_sessions() {\n    this.page++;\n    this.current_sessions = this.sessions.slice(this.page * this.items_per_page,\n      Math.min(this.sessions.length, (this.page + 1) * this.items_per_page));\n  }\n\n  /**\n   * Opens chosen session for a preview\n   * @param session chosen session\n   */\n  open_preview(session: TaskSessionInfo) {\n    this._router.navigate([\"/history/session\"], {state: {data: session, from: \"dashboard\"}}).then();\n  }\n}\n\n    \n\n    \n        \n  \n    Sessions in the group\n    \n      \n        \n          {{session.taskName}}\n          {{session.finishedAt | date: 'yyyy-MM-dd'}}\n          {{session.userName}}\n        \n      \n      preview\n    \n    \n      \n        \n          navigate_before\n        \n\n        = max_pages - 1\" mat-icon-button>\n          navigate_next\n        \n      \n    \n    \n       Back \n    \n  \n\n\n    \n\n    \n                \n                    ./group-sessions.component.css\n                \n                .buttons {\n  width: 100%;\n  margin: 0 2rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-content: center;\n  gap: 1rem;\n}\n\n.quizOption {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 1rem 1.5rem;\n  align-items: center;\n  gap: 2rem;\n  border-bottom: 0.5px solid rgba(30, 30, 30, 0.1);\n}\n\n.quizOption .secondaryText {\n  text-align: left;\n  width: 80%;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      Sessions in the group                            {{session.taskName}}          {{session.finishedAt | date: \\'yyyy-MM-dd\\'}}          {{session.userName}}                    preview                                navigate_before                = max_pages - 1\" mat-icon-button>          navigate_next                             Back       '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupSessionsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupSettingsComponent.html":{"url":"components/GroupSettingsComponent.html","title":"component - GroupSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/group-settings/group-settings.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as a form for creating groups\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-group-settings\n            \n\n\n\n            \n                styleUrls\n                ./group-settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./group-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _tasks\n                            \n                            \n                                create_group_subscription\n                            \n                            \n                                form\n                            \n                            \n                                tasksSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openSuccessfulSnackbar\n                            \n                            \n                                openUnsuccessfulSnackbar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tasks\n                                \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, _transfer: TransferService, _client: BackendService, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/group-settings/group-settings.component.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor for a component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router field to route between components\n\n                                                        \n                                                \n                                                \n                                                        _transfer\n                                                  \n                                                        \n                                                                        TransferService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Service to transfer data between components\n\n                                                        \n                                                \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BackendService instance that sends requests to a server\n\n                                                        \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening snack bars\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        createGroup\n                        \n                    \n                \n            \n            \n                \ncreateGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/group-settings/group-settings.component.ts:94\n                \n            \n\n\n            \n                \n                    Submits the form with the group to create\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/group-settings/group-settings.component.ts:87\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/group-settings/group-settings.component.ts:77\n                \n            \n\n\n            \n                \n                    Method that fetch all tasks from a database and then inits a\nform group for creating a scenario with name and list of tasks\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSuccessfulSnackbar\n                        \n                    \n                \n            \n            \n                \nopenSuccessfulSnackbar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/group-settings/group-settings.component.ts:116\n                \n            \n\n\n            \n                \n                    Opens successful snack bar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUnsuccessfulSnackbar\n                        \n                    \n                \n            \n            \n                \nopenUnsuccessfulSnackbar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/group-settings/group-settings.component.ts:126\n                \n            \n\n\n            \n                \n                    Opens unsuccessful snack bar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskNames[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/group-settings/group-settings.component.ts:53\n                        \n                    \n\n            \n                \n                    List of tasks\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        create_group_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/group-settings/group-settings.component.ts:35\n                        \n                    \n\n            \n                \n                    Subscription for creation of groups\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/group-settings/group-settings.component.ts:25\n                        \n                    \n\n            \n                \n                    Represents a collection of form controls that are logically grouped together. It provides a convenient way to manage and validate multiple form controls as a single unit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasksSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/group-settings/group-settings.component.ts:30\n                        \n                    \n\n            \n                \n                    Subscription to get a list of tasks\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tasks\n                    \n                \n\n                \n                    \n                        gettasks()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/group-settings/group-settings.component.ts:58\n                                \n                            \n                    \n                        \n                                Gets a list of tasks from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/group-settings/group-settings.component.ts:67\n                                \n                            \n                    \n                        \n                                Gets a name field from a form group\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {Router} from \"@angular/router\";\nimport {TransferService} from \"../../services/transfer.service\";\nimport {BackendService} from \"../../services/backend.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {GroupTasks} from \"../../models/group-tasks.model\";\nimport {TaskNames} from \"../../models/task-names.model\";\n\n/**\n * Component that is used as a form for creating groups\n */\n@Component({\n  selector: 'app-group-settings',\n  templateUrl: './group-settings.component.html',\n  styleUrls: ['./group-settings.component.css']\n})\nexport class GroupSettingsComponent implements OnInit, OnDestroy {\n\n  /**\n   * Represents a collection of form controls that are logically grouped together. It provides a convenient way to manage and validate multiple form controls as a single unit.\n   */\n  // @ts-ignore\n  form: FormGroup;\n\n  /**\n   * Subscription to get a list of tasks\n   */\n  tasksSubscription: Subscription = new Subscription();\n\n  /**\n   * Subscription for creation of groups\n   */\n  create_group_subscription: Subscription = new Subscription();\n\n  /**\n   * Constructor for a component\n   * @param router Router field to route between components\n   * @param _transfer Service to transfer data between components\n   * @param _client BackendService instance that sends requests to a server\n   * @param _snackBar Angular Material component that uses for opening snack bars\n   */\n  constructor(private router: Router,\n              private _transfer: TransferService,\n              private _client: BackendService,\n              private _snackBar: MatSnackBar) {\n  }\n\n  /**\n   * List of tasks\n   */\n  _tasks: TaskNames[] = [];\n\n  /**\n   * Gets a list of tasks from a form group\n   */\n  get tasks() {\n    if (this.form)\n      return this.form.controls['tasks'];\n    return null;\n  }\n\n  /**\n   * Gets a name field from a form group\n   */\n  get name() {\n    if (this.form)\n      return this.form.controls['name'];\n    return null;\n  }\n\n  /**\n   * Method that fetch all tasks from a database and then inits a\n   * form group for creating a scenario with name and list of tasks\n   */\n  ngOnInit(): void {\n    this.tasksSubscription = this._client.fetchTaskNames().subscribe(data => {\n      this._tasks = data as TaskNames[];\n    })\n    this.form = new FormGroup({\n      name: new FormControl('', [Validators.required]),\n      tasks: new FormControl('', []),\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.tasksSubscription.unsubscribe();\n  }\n\n  /**\n   * Submits the form with the group to create\n   */\n  createGroup() {\n    let group: GroupTasks = new GroupTasks();\n    group.name = this.name?.value;\n    group.tasks = this.tasks?.value;\n\n    this.create_group_subscription = this._client.createGroup(group).subscribe({\n      next: (response) => {\n        this._transfer.changeCreatedGroup(response);\n      },\n      complete: () => {\n        this.openSuccessfulSnackbar();\n        this.form.reset({});\n      },\n      error: () => {\n        this.openUnsuccessfulSnackbar();\n      }\n    });\n  }\n\n  /**\n   * Opens successful snack bar\n   */\n  openSuccessfulSnackbar() {\n    this._snackBar.open('Group was successfully created', '', {\n      duration: 5000,\n      panelClass: ['snackbar-success']\n    });\n  }\n\n  /**\n   * Opens unsuccessful snack bar\n   */\n  openUnsuccessfulSnackbar() {\n    this._snackBar.open('Error occurred when creating a new group', '', {\n      duration: 5000,\n      panelClass: ['snackbar-success']\n    });\n  }\n\n}\n\n    \n\n    \n        \n  Create a new group\n  \n    \n      name\n      change\n    \n    \n  \n\n  \n    \n      tasks\n      change\n    \n    \n      \n        {{task.name}}\n      \n    \n  \n\n  Create\n\n\n    \n\n    \n                \n                    ./group-settings.component.css\n                \n                .profileSettings {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  min-width: 20vw;\n  padding: 0 2rem;\n  justify-content: center;\n  align-items: center;\n}\n\n.label {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n}\n\n.logout {\n  color: #FF0A0A !important;\n  display: flex;\n  gap: 1rem;\n  margin: 1.5rem 0;\n}\n\n.logout p, .logout mat-icon {\n  opacity: 0.6;\n}\n\n.error-content {\n  color: red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Create a new group            name      change                      tasks      change                      {{task.name}}              Create'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GroupTasks.html":{"url":"classes/GroupTasks.html","title":"class - GroupTasks","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GroupTasks\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/group-tasks.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        Group\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                tasks\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(init?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/group-tasks.model.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                    Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskNames[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/group-tasks.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                Inherited from         Group\n\n                            \n                        \n                    \n                        \n                                Defined in         Group:2\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                Inherited from         Group\n\n                            \n                        \n                    \n                        \n                                Defined in         Group:3\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Group} from \"./group.model\";\nimport {TaskNames} from \"./task-names.model\";\n\nexport class GroupTasks extends Group {\n  tasks: TaskNames[] = [];\n\n  public constructor(init?: Partial) {\n    // @ts-ignore\n    super({\n      id: init?.id,\n      name: init?.name\n    });\n    Object.assign(this, init);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupsDashboardComponent.html":{"url":"components/GroupsDashboardComponent.html","title":"component - GroupsDashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupsDashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/groups-dashboard/groups-dashboard.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as a dashboard for management groups\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-groups-dashboard\n            \n\n\n\n            \n                styleUrls\n                ./groups-dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./groups-dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmation_dialog_subscription\n                            \n                            \n                                created_group_subscription\n                            \n                            \n                                dataSource\n                            \n                            \n                                delete_group_subscription\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                groups\n                            \n                            \n                                groups_subscription\n                            \n                            \n                                    \n                                paginator\n                            \n                            \n                                updated_group_subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteGroup\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDeleteDialog\n                            \n                            \n                                openSuccessfulDeleteBar\n                            \n                            \n                                openUnsuccessfulDeleteBar\n                            \n                            \n                                openUpdateDialog\n                            \n                            \n                                updateDataSource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_client: BackendService, _snackBar: MatSnackBar, _dialog: MatDialog, _transfer: TransferService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/groups-dashboard/groups-dashboard.component.ts:69\n                            \n                        \n\n                \n                    \n                            Constructor for a component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BackendService instance that sends requests to a server\n\n                                                        \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening snack bars\n\n                                                        \n                                                \n                                                \n                                                        _dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening dialogs\n\n                                                        \n                                                \n                                                \n                                                        _transfer\n                                                  \n                                                        \n                                                                        TransferService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Field to transfer data between components\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteGroup\n                        \n                    \n                \n            \n            \n                \ndeleteGroup(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/groups-dashboard/groups-dashboard.component.ts:153\n                \n            \n\n\n            \n                \n                    Method to delete a group\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of a group to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/groups-dashboard/groups-dashboard.component.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/groups-dashboard/groups-dashboard.component.ts:89\n                \n            \n\n\n            \n                \n                    Method to fetch all groups, subscribe to a creation and transfer of a group from another component\nand subscribe to a modification of a group\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDeleteDialog\n                        \n                    \n                \n            \n            \n                \nopenDeleteDialog(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/groups-dashboard/groups-dashboard.component.ts:135\n                \n            \n\n\n            \n                \n                    Opens a delete dialog\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        group id to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSuccessfulDeleteBar\n                        \n                    \n                \n            \n            \n                \nopenSuccessfulDeleteBar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/groups-dashboard/groups-dashboard.component.ts:180\n                \n            \n\n\n            \n                \n                    Opens successful snack bar after deleting a group\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUnsuccessfulDeleteBar\n                        \n                    \n                \n            \n            \n                \nopenUnsuccessfulDeleteBar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/groups-dashboard/groups-dashboard.component.ts:189\n                \n            \n\n\n            \n                \n                    Opens unsuccessful snack bar after deleting a group\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUpdateDialog\n                        \n                    \n                \n            \n            \n                \nopenUpdateDialog(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/groups-dashboard/groups-dashboard.component.ts:118\n                \n            \n\n\n            \n                \n                    Opens a dialog to update a group\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        group id to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDataSource\n                        \n                    \n                \n            \n            \n                \nupdateDataSource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/groups-dashboard/groups-dashboard.component.ts:172\n                \n            \n\n\n            \n                \n                    Method to update/refresh a table\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmation_dialog_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/groups-dashboard/groups-dashboard.component.ts:47\n                        \n                    \n\n            \n                \n                    Subscription for a confirmation dialog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        created_group_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/groups-dashboard/groups-dashboard.component.ts:57\n                        \n                    \n\n            \n                \n                    Subscription to create a group\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/groups-dashboard/groups-dashboard.component.ts:27\n                        \n                    \n\n            \n                \n                    Field to manage groups as a table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_group_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/groups-dashboard/groups-dashboard.component.ts:52\n                        \n                    \n\n            \n                \n                    Subscription to delete a group\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"name\", \"tasks\", \"actions\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/groups-dashboard/groups-dashboard.component.ts:32\n                        \n                    \n\n            \n                \n                    Columns for a table to display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :     GroupTasks[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/groups-dashboard/groups-dashboard.component.ts:37\n                        \n                    \n\n            \n                \n                    List of groups to display in a table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groups_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/groups-dashboard/groups-dashboard.component.ts:42\n                        \n                    \n\n            \n                \n                    Subscription to load all groups from a database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('paginator')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/groups-dashboard/groups-dashboard.component.ts:69\n                        \n                    \n\n            \n                \n                    Paginator to a table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_group_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/groups-dashboard/groups-dashboard.component.ts:62\n                        \n                    \n\n            \n                \n                    Subscription to update a group\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {Subscription} from \"rxjs\";\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {BackendService} from \"../../services/backend.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {TransferService} from \"../../services/transfer.service\";\nimport {GroupTasks} from \"../../models/group-tasks.model\";\nimport {GroupsModificationComponent} from \"../groups-modification/groups-modification.component\";\nimport {ConfirmationDialog} from '../dialogs/confirmation-dialog/confirmation-dialog.component';\n\n/**\n * Component that is used as a dashboard for management groups\n */\n@Component({\n  selector: 'app-groups-dashboard',\n  templateUrl: './groups-dashboard.component.html',\n  styleUrls: ['./groups-dashboard.component.css']\n})\nexport class GroupsDashboardComponent implements OnInit, OnDestroy {\n\n  /**\n   * Field to manage groups as a table\n   */\n  // @ts-ignore\n  dataSource: MatTableDataSource;\n\n  /**\n   * Columns for a table to display\n   */\n  displayedColumns = [\"name\", \"tasks\", \"actions\"];\n\n  /**\n   * List of groups to display in a table\n   */\n  groups: GroupTasks[] = [];\n\n  /**\n   * Subscription to load all groups from a database\n   */\n  groups_subscription: Subscription = new Subscription();\n\n  /**\n   * Subscription for a confirmation dialog\n   */\n  confirmation_dialog_subscription: Subscription = new Subscription();\n\n  /**\n   * Subscription to delete a group\n   */\n  delete_group_subscription: Subscription = new Subscription();\n\n  /**\n   * Subscription to create a group\n   */\n  created_group_subscription: Subscription = new Subscription();\n\n  /**\n   * Subscription to update a group\n   */\n  updated_group_subscription: Subscription = new Subscription();\n\n\n  /**\n   * Paginator to a table\n   */\n    // @ts-ignore\n  @ViewChild('paginator') paginator: MatPaginator;\n\n  /**\n   * Constructor for a component\n   * @param _dialog Angular Material component that uses for opening dialogs\n   * @param _client BackendService instance that sends requests to a server\n   * @param _snackBar Angular Material component that uses for opening snack bars\n   * @param _transfer Field to transfer data between components\n   */\n  constructor(private _client: BackendService,\n              private _snackBar: MatSnackBar,\n              private _dialog: MatDialog,\n              private _transfer: TransferService) {\n\n  }\n\n  /**\n   * Method to fetch all groups, subscribe to a creation and transfer of a group from another component\n   * and subscribe to a modification of a group\n   */\n  ngOnInit(): void {\n    this.groups_subscription = this._client.fetchGroupsWithTasks().subscribe(data => {\n        this.groups = data as GroupTasks[];\n        this.dataSource = new MatTableDataSource(this.groups);\n        this.dataSource.paginator = this.paginator;\n      }\n    )\n    this.created_group_subscription = this._transfer.createdGroupStatus$.subscribe(group => {\n      this.groups.push(group);\n      this.updateDataSource();\n    });\n    this.updated_group_subscription = this._transfer.updatedGroupStatus$.subscribe(group => {\n      const index = this.groups.findIndex(g => g.id === group.id);\n      this.groups.splice(index, 1, group);\n      this.updateDataSource();\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.confirmation_dialog_subscription.unsubscribe();\n    this.created_group_subscription.unsubscribe();\n    this.updated_group_subscription.unsubscribe();\n    this.delete_group_subscription.unsubscribe();\n  }\n\n  /**\n   * Opens a dialog to update a group\n   * @param id group id to update\n   */\n  openUpdateDialog(id: number) {\n    let groupTasks: GroupTasks = new GroupTasks();\n    for (const element of this.groups) {\n      if (element.id === id) {\n        groupTasks = element;\n        break;\n      }\n    }\n    this._dialog.open(GroupsModificationComponent, {\n      data: groupTasks\n    });\n  }\n\n  /**\n   * Opens a delete dialog\n   * @param id group id to delete\n   */\n  openDeleteDialog(id: number) {\n    const dialogRef = this._dialog.open(ConfirmationDialog, {\n      data: {\n        message: \"Do you want to delete this group?\"\n      }\n    })\n\n    this.confirmation_dialog_subscription = dialogRef.afterClosed().subscribe((confirmed: boolean) => {\n      if (confirmed) {\n        this.deleteGroup(id);\n      }\n    })\n  }\n\n  /**\n   * Method to delete a group\n   * @param id id of a group to delete\n   */\n  deleteGroup(id: number) {\n    this.delete_group_subscription = this._client.deleteGroupById(id).subscribe({\n      complete: () => {\n        for (let i = 0; i  {\n        this.openUnsuccessfulDeleteBar();\n      }\n    })\n  }\n\n  /**\n   * Method to update/refresh a table\n   */\n  updateDataSource() {\n    this.dataSource.data = this.groups;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  /**\n   * Opens successful snack bar after deleting a group\n   */\n  openSuccessfulDeleteBar() {\n    this._snackBar.open('Group was successfully deleted', \"OK\", {\n      duration: 3000\n    })\n  }\n\n  /**\n   * Opens unsuccessful snack bar after deleting a group\n   */\n  openUnsuccessfulDeleteBar() {\n    this._snackBar.open('Error occurred when deleting group', \"OK\", {\n      duration: 3000\n    })\n  }\n\n}\n\n    \n\n    \n        \n  \n    \n      Firstname\n       {{row.name}} \n    \n\n    \n      Groups\n      \n        \n          {{task.name}}\n        \n      \n    \n\n    \n      Actions\n      \n        edit\n        delete\n      \n    \n\n    \n    \n  \n  \n\n\n\n  \n\n\n    \n\n    \n                \n                    ./groups-dashboard.component.css\n                \n                .content {\n  width: 70%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Firstname       {{row.name}}               Groups                        {{task.name}}                            Actions              edit        delete                        '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupsDashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupsModificationComponent.html":{"url":"components/GroupsModificationComponent.html","title":"component - GroupsModificationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupsModificationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/groups-modification/groups-modification.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as a form for group modification\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-groups-modification\n            \n\n\n\n            \n                styleUrls\n                ./groups-modification.component.css\n            \n\n\n\n            \n                templateUrl\n                ./groups-modification.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _tasks\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                form\n                            \n                            \n                                profile_update_subscription\n                            \n                            \n                                roles\n                            \n                            \n                                tasksSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                autocompleteGroups\n                            \n                            \n                                closeDialog\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openSuccessfulSnackbar\n                            \n                            \n                                openUnsuccessfulSnackbar\n                            \n                            \n                                updateGroup\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    tasks\n                                \n                                \n                                    name\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialogRef: MatDialogRef, data: GroupTasks, router: Router, _transfer: TransferService, _client: BackendService, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/groups-modification/groups-modification.component.ts:40\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matDialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening dialogs\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        GroupTasks\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data that was transfer to this component\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router field to route between components\n\n                                                        \n                                                \n                                                \n                                                        _transfer\n                                                  \n                                                        \n                                                                        TransferService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Field to transfer data between components\n\n                                                        \n                                                \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BackendService instance that sends requests to a server\n\n                                                        \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening snack bars\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        autocompleteGroups\n                        \n                    \n                \n            \n            \n                \n                    \n                    autocompleteGroups(group: GroupTasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/groups-modification/groups-modification.component.ts:162\n                \n            \n\n\n            \n                \n                    Autocompletes form with groups tasks\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                GroupTasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        group to autocomplete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/groups-modification/groups-modification.component.ts:85\n                \n            \n\n\n            \n                \n                    While this component is a dialog, this method closes this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/groups-modification/groups-modification.component.ts:105\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/groups-modification/groups-modification.component.ts:92\n                \n            \n\n\n            \n                \n                    Method to retrieve a group to update from a data and fetch all tasks from a database\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSuccessfulSnackbar\n                        \n                    \n                \n            \n            \n                \nopenSuccessfulSnackbar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/groups-modification/groups-modification.component.ts:140\n                \n            \n\n\n            \n                \n                    Opens successful snack bar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUnsuccessfulSnackbar\n                        \n                    \n                \n            \n            \n                \nopenUnsuccessfulSnackbar(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/groups-modification/groups-modification.component.ts:151\n                \n            \n\n\n            \n                \n                    Opens unsuccessful snack bar\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateGroup\n                        \n                    \n                \n            \n            \n                \nupdateGroup()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/groups-modification/groups-modification.component.ts:114\n                \n            \n\n\n            \n                \n                    Updates a group\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskNames[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/groups-modification/groups-modification.component.ts:62\n                        \n                    \n\n            \n                \n                    List of tasks\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         GroupTasks\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/groups-modification/groups-modification.component.ts:52\n                        \n                    \n\n            \n                \n                    data that was transfer to this component\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/groups-modification/groups-modification.component.ts:28\n                        \n                    \n\n            \n                \n                    Represents a collection of form controls that are logically grouped together. It provides a convenient way to manage and validate multiple form controls as a single unit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile_update_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/groups-modification/groups-modification.component.ts:40\n                        \n                    \n\n            \n                \n                    Subscription to update a group\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['STUDENT', 'TEACHER', 'ADMIN']\n                    \n                \n                    \n                        \n                                Defined in src/app/components/groups-modification/groups-modification.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasksSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/groups-modification/groups-modification.component.ts:35\n                        \n                    \n\n            \n                \n                    Subscription to fetch tasks\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        tasks\n                    \n                \n\n                \n                    \n                        gettasks()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/groups-modification/groups-modification.component.ts:67\n                                \n                            \n                    \n                        \n                                Gets a tasks field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        name\n                    \n                \n\n                \n                    \n                        getname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/groups-modification/groups-modification.component.ts:76\n                                \n                            \n                    \n                        \n                                Gets a name field from a form group\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {Group} from \"../../models/group.model\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {Router} from \"@angular/router\";\nimport {TransferService} from \"../../services/transfer.service\";\nimport {BackendService} from \"../../services/backend.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {GroupTasks} from \"../../models/group-tasks.model\";\nimport {TaskNames} from \"../../models/task-names.model\";\n\n/**\n * Component that is used as a form for group modification\n */\n@Component({\n  selector: 'app-groups-modification',\n  templateUrl: './groups-modification.component.html',\n  styleUrls: ['./groups-modification.component.css']\n})\nexport class GroupsModificationComponent implements OnInit, OnDestroy {\n\n  /**\n   * Represents a collection of form controls that are logically grouped together. It provides a convenient way to manage and validate multiple form controls as a single unit.\n   */\n  // @ts-ignore\n  form: FormGroup;\n\n  roles: string[] = ['STUDENT', 'TEACHER', 'ADMIN']\n\n  /**\n   * Subscription to fetch tasks\n   */\n  tasksSubscription: Subscription = new Subscription();\n\n  /**\n   * Subscription to update a group\n   */\n  profile_update_subscription: Subscription = new Subscription();\n\n  /**\n   *\n   * @param matDialogRef Angular Material component that uses for opening dialogs\n   * @param data data that was transfer to this component\n   * @param router Router field to route between components\n   * @param _transfer Field to transfer data between components\n   * @param _client BackendService instance that sends requests to a server\n   * @param _snackBar Angular Material component that uses for opening snack bars\n   */\n  constructor(private matDialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: GroupTasks,\n              private router: Router,\n              private _transfer: TransferService,\n              private _client: BackendService,\n              private _snackBar: MatSnackBar) {\n  }\n\n  /**\n   * List of tasks\n   */\n  _tasks: TaskNames[] = [];\n\n  /**\n   * Gets a tasks field from a form group\n   */\n  get tasks() {\n    if (this.form)\n      return this.form.controls['tasks'];\n    return null;\n  }\n\n  /**\n   * Gets a name field from a form group\n   */\n  get name() {\n    if (this.form)\n      return this.form.controls['name'];\n    return null;\n  }\n\n  /**\n   * While this component is a dialog, this method closes this component\n   */\n  closeDialog() {\n    this.matDialogRef.close();\n  }\n\n  /**\n   * Method to retrieve a group to update from a data and fetch all tasks from a database\n   */\n  ngOnInit(): void {\n    let group: GroupTasks = this.data;\n    this.form = new FormGroup({\n      name: new FormControl(group.name, [Validators.required]),\n      tasks: new FormControl(group.tasks, [])\n    });\n\n    this.tasksSubscription = this._client.fetchTaskNames().subscribe(data => {\n      this._tasks = data as Group[]\n      this.autocompleteGroups(group);\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.matDialogRef.close();\n    this.profile_update_subscription.unsubscribe();\n    this.tasksSubscription.unsubscribe();\n  }\n\n  /**\n   * Updates a group\n   */\n  updateGroup() {\n    let group: GroupTasks = new GroupTasks({\n      id: this.data.id,\n      name: this.name?.value,\n      tasks: this.tasks?.value,\n    })\n\n    this.profile_update_subscription = this._client.updateGroupFromDashboard(group).subscribe({\n      next: (group) => {\n        this.openSuccessfulSnackbar();\n        this._transfer.changeUpdatedGroup(group);\n      },\n      error: (err) => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 400)\n            this.openUnsuccessfulSnackbar(err.error);\n          else\n            this.openUnsuccessfulSnackbar(\"An unexpected error occurred\");\n        }\n      }\n    })\n  }\n\n  /**\n   * Opens successful snack bar\n   */\n  openSuccessfulSnackbar() {\n    this._snackBar.open('Group was successfully updated', '', {\n      duration: 5000,\n      panelClass: ['snackbar-success']\n    });\n\n  }\n\n  /**\n   * Opens unsuccessful snack bar\n   */\n  openUnsuccessfulSnackbar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 5000,\n      panelClass: ['snackbar-unsuccessful']\n    });\n  }\n\n  /**\n   * Autocompletes form with groups tasks\n   * @param group group to autocomplete\n   */\n  private autocompleteGroups(group: GroupTasks) {\n    let ts: number[] = [];\n    this._tasks.forEach((task: TaskNames) => {\n      group.tasks.forEach((t: TaskNames) => {\n        if (task.id === t.id) {\n          ts.push(task.id);\n        }\n      });\n    });\n    this.form.controls['tasks'].setValue(ts);\n  }\n}\n\n    \n\n    \n        \n  close\n\nGroup Settings\n\n\n  \n    \n      name\n      change\n    \n    \n  \n  \n    Name is required\n  \n\n  \n    \n      tasks\n      change\n    \n    \n      \n        {{task.name}}\n      \n    \n  \n\n  Save\n\n\n    \n\n    \n                \n                    ./groups-modification.component.css\n                \n                .profileSettings {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  min-width: 20vw;\n  padding: 0 2rem;\n  justify-content: center;\n  align-items: center;\n}\n\n.label {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n}\n\n.logout {\n  color: #FF0A0A !important;\n  display: flex;\n  gap: 1rem;\n  margin: 1.5rem 0;\n}\n\n.logout p, .logout mat-icon {\n  opacity: 0.6;\n}\n\n.error-content {\n  color: red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  closeGroup Settings            name      change                Name is required              tasks      change                      {{task.name}}              Save'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupsModificationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/GroupsPreviewComponent.html":{"url":"components/GroupsPreviewComponent.html","title":"component - GroupsPreviewComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  GroupsPreviewComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/groups-preview/groups-preview.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as a form for group modification\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-groups-preview\n            \n\n\n\n            \n                styleUrls\n                ./groups-preview.component.css\n            \n\n\n\n            \n                templateUrl\n                ./groups-preview.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                groups\n                            \n                            \n                                profile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                directToTaskSessions\n                            \n                            \n                                navigateBack\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_route: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/groups-preview/groups-preview.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        directToTaskSessions\n                        \n                    \n                \n            \n            \n                \ndirectToTaskSessions(groupId: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/groups-preview/groups-preview.component.ts:49\n                \n            \n\n\n            \n                \n                    Method to redirect to a \"/dashboard/group/sessions\" component with a group id inside data\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    groupId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        groups id to send to a next component\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        navigateBack\n                        \n                    \n                \n            \n            \n                \nnavigateBack()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/groups-preview/groups-preview.component.ts:56\n                \n            \n\n\n            \n                \n                    Navigates back to a dashboard component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/groups-preview/groups-preview.component.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/groups-preview/groups-preview.component.ts:33\n                \n            \n\n\n            \n                \n                    Method to parse user groups from a user profile\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/groups-preview/groups-preview.component.ts:25\n                        \n                    \n\n            \n                \n                    List of a user groups\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserProfile\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/groups-preview/groups-preview.component.ts:20\n                        \n                    \n\n            \n                \n                    Profile of a current user\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {UserProfile} from \"../../models/user-profile.model\";\nimport {Group} from \"../../models/group.model\";\nimport {Router} from \"@angular/router\";\n\n/**\n * Component that is used as a form for group modification\n */\n@Component({\n  selector: 'app-groups-preview',\n  templateUrl: './groups-preview.component.html',\n  styleUrls: ['./groups-preview.component.css']\n})\nexport class GroupsPreviewComponent implements OnInit, OnDestroy {\n\n  /**\n   * Profile of a current user\n   */\n  // @ts-ignore\n  profile: UserProfile;\n\n  /**\n   * List of a user groups\n   */\n  groups: Group[] = [];\n\n  constructor(private _route: Router) {\n  }\n\n  /**\n   * Method to parse user groups from a user profile\n   */\n  ngOnInit() {\n    let prof = localStorage.getItem(\"user-profile\");\n    if (prof != null) {\n      this.profile = JSON.parse(prof) as UserProfile;\n      this.groups = this.profile.groups;\n    }\n  }\n\n  ngOnDestroy() {\n\n  }\n\n  /**\n   * Method to redirect to a \"/dashboard/group/sessions\" component with a group id inside data\n   * @param groupId groups id to send to a next component\n   */\n  directToTaskSessions(groupId: number) {\n    this._route.navigate([\"/dashboard/group/sessions\"], {state: {data: groupId}}).then();\n  }\n\n  /**\n   * Navigates back to a dashboard component\n   */\n  navigateBack() {\n    this._route.navigate([\"/dashboard\"]).then();\n  }\n}\n\n    \n\n    \n        \n  Available Groups\n   {{g.name}} \n  \n     Back \n  \n\n\n    \n\n    \n                \n                    ./groups-preview.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  Available Groups   {{g.name}}        Back   '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'GroupsPreviewComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HistoryQuizComponent.html":{"url":"components/HistoryQuizComponent.html","title":"component - HistoryQuizComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HistoryQuizComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/history-quiz/history-quiz.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as a dialog to represent user sessions\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-history-quiz\n            \n\n\n\n            \n                styleUrls\n                ./history-quiz.component.css\n            \n\n\n\n            \n                templateUrl\n                ./history-quiz.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                current_sessions\n                            \n                            \n                                items_per_page\n                            \n                            \n                                max_pages\n                            \n                            \n                                page\n                            \n                            \n                                profile\n                            \n                            \n                                sessions\n                            \n                            \n                                task_sessions_subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                next_sessions\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                open_preview\n                            \n                            \n                                prev_sessions\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialogRef: MatDialogRef, _client: BackendService, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/history-quiz/history-quiz.component.ts:53\n                            \n                        \n\n                \n                    \n                            Constructor for a component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matDialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening dialogs\n\n                                                        \n                                                \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BackendService instance that sends requests to a server\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router field to route between components\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/history-quiz/history-quiz.component.ts:82\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        next_sessions\n                        \n                    \n                \n            \n            \n                \nnext_sessions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/history-quiz/history-quiz.component.ts:98\n                \n            \n\n\n            \n                \n                    Moves to a next page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/history-quiz/history-quiz.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/history-quiz/history-quiz.component.ts:69\n                \n            \n\n\n            \n                \n                    Method to load profile from a local storage and read all users task sessions\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        open_preview\n                        \n                    \n                \n            \n            \n                \nopen_preview(session: TaskSessionInfo)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/history-quiz/history-quiz.component.ts:108\n                \n            \n\n\n            \n                \n                    Opens preview of a chosen session\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    session\n                                    \n                                                TaskSessionInfo\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        chosen session\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prev_sessions\n                        \n                    \n                \n            \n            \n                \nprev_sessions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/history-quiz/history-quiz.component.ts:89\n                \n            \n\n\n            \n                \n                    Moves to a previous page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        current_sessions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskSessionInfo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/history-quiz/history-quiz.component.ts:38\n                        \n                    \n\n            \n                \n                    List of a sessions represented on a current page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items_per_page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/components/history-quiz/history-quiz.component.ts:53\n                        \n                    \n\n            \n                \n                    Items per page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        max_pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/history-quiz/history-quiz.component.ts:43\n                        \n                    \n\n            \n                \n                    Total pages\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/history-quiz/history-quiz.component.ts:48\n                        \n                    \n\n            \n                \n                    Current page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserProfile\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/history-quiz/history-quiz.component.ts:28\n                        \n                    \n\n            \n                \n                    Profile of a current user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sessions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskSessionInfo[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/history-quiz/history-quiz.component.ts:33\n                        \n                    \n\n            \n                \n                    List of a user sessions\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task_sessions_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/history-quiz/history-quiz.component.ts:22\n                        \n                    \n\n            \n                \n                    Subscription to fetch task sessions\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {MatDialogRef} from '@angular/material/dialog';\nimport {Subscription} from \"rxjs\";\nimport {BackendService} from \"../../services/backend.service\";\nimport {UserProfile} from \"../../models/user-profile.model\";\nimport {TaskSessionInfo} from \"../../models/task-session-info.model\";\nimport {Router} from \"@angular/router\";\n\n/**\n * Component that is used as a dialog to represent user sessions\n */\n@Component({\n  selector: 'app-history-quiz',\n  templateUrl: './history-quiz.component.html',\n  styleUrls: ['./history-quiz.component.css']\n})\nexport class HistoryQuizComponent implements OnInit, OnDestroy {\n\n  /**\n   * Subscription to fetch task sessions\n   */\n  task_sessions_subscription: Subscription = new Subscription();\n\n  /**\n   * Profile of a current user\n   */\n  // @ts-ignore\n  profile: UserProfile;\n\n  /**\n   * List of a user sessions\n   */\n  sessions: TaskSessionInfo[] = [];\n\n  /**\n   * List of a sessions represented on a current page\n   */\n  current_sessions: TaskSessionInfo[] = [];\n\n  /**\n   * Total pages\n   */\n  max_pages: number = 0;\n\n  /**\n   * Current page\n   */\n  page: number = 0;\n\n  /**\n   * Items per page\n   */\n  items_per_page: number = 5;\n\n  /**\n   * Constructor for a component\n   * @param matDialogRef Angular Material component that uses for opening dialogs\n   * @param _client BackendService instance that sends requests to a server\n   * @param _router Router field to route between components\n   */\n  constructor(private matDialogRef: MatDialogRef,\n              private _client: BackendService,\n              private _router: Router) {\n  }\n\n  /**\n   * Method to load profile from a local storage and read all users task sessions\n   */\n  ngOnInit(): void {\n    // @ts-ignore\n    this.profile = JSON.parse(localStorage.getItem(\"user-profile\")) as UserProfile;\n    this.task_sessions_subscription = this._client.getTaskSessionsInfo(this.profile.id).subscribe(data => {\n      this.sessions = data as TaskSessionInfo[];\n      this.max_pages = Math.ceil(this.sessions.length / this.items_per_page);\n      this.current_sessions = this.sessions.slice(0, Math.min(this.sessions.length, this.items_per_page));\n    })\n  }\n\n  ngOnDestroy(): void {\n  }\n\n  closeDialog() {\n    this.matDialogRef.close();\n  }\n\n  /**\n   * Moves to a previous page\n   */\n  prev_sessions() {\n    this.page--;\n    this.current_sessions = this.sessions.slice(this.page * this.items_per_page,\n      Math.min(this.sessions.length, (this.page + 1) * this.items_per_page));\n  }\n\n  /**\n   * Moves to a next page\n   */\n  next_sessions() {\n    this.page++;\n    this.current_sessions = this.sessions.slice(this.page * this.items_per_page,\n      Math.min(this.sessions.length, (this.page + 1) * this.items_per_page));\n  }\n\n  /**\n   * Opens preview of a chosen session\n   * @param session chosen session\n   */\n  open_preview(session: TaskSessionInfo) {\n    this._router.navigate([\"/history/session\"], {state: {data: session, from: \"profile\"}}).then();\n    this.closeDialog();\n  }\n}\n\n    \n\n    \n        \n  close\n\nTasks history\n\n  \n    \n      {{session.taskName}}\n      {{session.finishedAt | date: 'yyyy-MM-dd'}}\n    \n  \n  preview\n\n\n  \n    navigate_before\n  \n\n  = max_pages - 1\" mat-icon-button>\n    navigate_next\n  \n\n\n    \n\n    \n                \n                    ./history-quiz.component.css\n                \n                .history{\n    display: flex;\n    flex-direction: row;\n    gap: 3rem;\n}\n\n.history h5{\n    padding: 0;\n    margin: 0;\n}\n\n.score, .score h5{\n    font-size: 0.7rem !important;\n}\n\n.quizOption{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    padding: 1rem 1.5rem;\n    align-items: center;\n    gap: 2rem;\n    border-bottom: 0.5px solid rgba(30, 30, 30, 0.1);\n}\n\n.quizOption .secondaryText{\n  text-align: left;\n  width: 80%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  closeTasks history            {{session.taskName}}      {{session.finishedAt | date: \\'yyyy-MM-dd\\'}}        preview      navigate_before    = max_pages - 1\" mat-icon-button>    navigate_next  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HistoryQuizComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/home/home.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n            \n                styleUrls\n                ./home.component.css\n            \n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_client: BackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/home/home.component.ts:13\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home/home.component.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/home/home.component.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {BackendService} from \"../../services/backend.service\";\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\n\n/**\n * Component that is used to display a home page\n */\nexport class HomeComponent {\n\n constructor(private _client: BackendService) {}\n\n ngOnInit(): void {\n\n }\n\n ngOnDestroy(): void {\n\n }\n}\n\n    \n\n    \n        home component\n\n    \n\n    \n                \n                    ./home.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'home component'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/JoinQuizComponent.html":{"url":"components/JoinQuizComponent.html","title":"component - JoinQuizComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  JoinQuizComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/join-quiz/join-quiz.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-join-quiz\n            \n\n\n\n            \n                styleUrls\n                ./join-quiz.component.css\n            \n\n\n\n            \n                templateUrl\n                ./join-quiz.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialogRef: MatDialogRef)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/join-quiz/join-quiz.component.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        matDialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/join-quiz/join-quiz.component.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { MatDialogRef } from '@angular/material/dialog';\nimport { SCENE_URL } from \"../../constants\";\n\n@Component({\n  selector: 'app-join-quiz',\n  templateUrl: './join-quiz.component.html',\n  styleUrls: ['./join-quiz.component.css']\n})\n\nexport class JoinQuizComponent {\n\n  constructor(private matDialogRef:MatDialogRef){}\n\n  closeDialog(){\n    this.matDialogRef.close();\n  }\n}\n\n    \n\n    \n        \n    close\n\nSelect quiz\n\n    \n        \n            History test\n            \n                language\n                SK\n            \n        \n        \n            Habsburg monarchi quiz with interactive questions\n        \n    \n    Take quiz\n\n\n    \n        \n            History test\n            \n                language\n                SK\n            \n        \n        \n            Habsburg monarchi quiz with interactive questions\n        \n    \n    Take quiz\n\n\n    \n        \n            History test\n            \n                language\n                SK\n            \n        \n        \n            Habsburg monarchi quiz with interactive questions\n        \n    \n    Take quiz\n\n\n    \n        \n            History test\n            \n                language\n                SK\n            \n        \n        \n            Habsburg monarchi quiz with interactive questions\n        \n    \n    Take quiz\n\n\n    \n        \n            History test\n            \n                language\n                SK\n            \n        \n        \n            Habsburg monarchi quiz with interactive questions\n        \n    \n    Take quiz\n\n\n    \n\n    \n                \n                    ./join-quiz.component.css\n                \n                .quizOption{\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    padding: 1rem 1.5rem;\n    align-items: center;\n    gap: 2rem;\n    border-bottom: 0.5px solid rgba(30, 30, 30, 0.1);\n}\n\n.quizOption .secondaryText{\n    text-align: left;\n    width: 70%;\n}\n\n.name{\n    display: flex;\n    gap: 1rem;\n}\n\n.language{\n    display: flex;\n    align-items: center;\n    justify-content: center;\n}\n\n.language mat-icon{\n    color: var(--purple-color) !important;\n    font-size: 1.3rem;\n    vertical-align: center;\n}\n\n.colorText{\n    color: var(--purple-color) !important;\n    font-size: 0.7rem;\n    font-weight: 700;\n}\n\n\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '    closeSelect quiz                        History test                            language                SK                                        Habsburg monarchi quiz with interactive questions                Take quiz                        History test                            language                SK                                        Habsburg monarchi quiz with interactive questions                Take quiz                        History test                            language                SK                                        Habsburg monarchi quiz with interactive questions                Take quiz                        History test                            language                SK                                        Habsburg monarchi quiz with interactive questions                Take quiz                        History test                            language                SK                                        Habsburg monarchi quiz with interactive questions                Take quiz'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'JoinQuizComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/login/login.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used to display a login page\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n\n\n            \n                styleUrls\n                ../registration/registration.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                loginSubscription\n                            \n                            \n                                profileSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                checkProfileUpdate\n                            \n                            \n                                login\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openUnsuccessfulSnackbar\n                            \n                            \n                                openUpdatedProfileBar\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_client: BackendService, _snackBar: MatSnackBar, _router: Router, _utils: UtilsService, _transfer: TransferService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/login/login.component.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor for a component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BackendService instance that sends requests to a server\n\n                                                        \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening snack bars\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router field to route between components\n\n                                                        \n                                                \n                                                \n                                                        _utils\n                                                  \n                                                        \n                                                                        UtilsService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Utils field that provides some help methods\n\n                                                        \n                                                \n                                                \n                                                        _transfer\n                                                  \n                                                        \n                                                                        TransferService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Field to transfer data between components\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        checkProfileUpdate\n                        \n                    \n                \n            \n            \n                \ncheckProfileUpdate()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:119\n                \n            \n\n\n            \n                \n                    Checks whether user was redirected cause of changing profile data or not\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        login\n                        \n                    \n                \n            \n            \n                \nlogin()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:87\n                \n            \n\n\n            \n                \n                    Method that performs signing in\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:79\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:71\n                \n            \n\n\n            \n                \n                    Method to validate whether user was redirected cause of changing profile\ndata or not and initializes signing in form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUnsuccessfulSnackbar\n                        \n                    \n                \n            \n            \n                \nopenUnsuccessfulSnackbar(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:134\n                \n            \n\n\n            \n                \n                    Opens unsuccessful snack bar with a provided message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        message to show\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUpdatedProfileBar\n                        \n                    \n                \n            \n            \n                \nopenUpdatedProfileBar(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/login/login.component.ts:144\n                \n            \n\n\n            \n                \n                    Opens successful snack bar with a provided message\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        message to show\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:25\n                        \n                    \n\n            \n                \n                    Represents a collection of form controls that are logically grouped together. It provides a convenient way to manage and validate multiple form controls as a single unit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:30\n                        \n                    \n\n            \n                \n                    Subscription to preform signing in\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/login/login.component.ts:35\n                        \n                    \n\n            \n                \n                    Subscription to load user profile\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/login/login.component.ts:52\n                                \n                            \n                    \n                        \n                                Gets a email field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/login/login.component.ts:61\n                                \n                            \n                    \n                        \n                                Gets a password field from a form group\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {BackendService} from \"../../services/backend.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {Router} from \"@angular/router\";\nimport {LoginRequest} from \"../../models/login-request.model\";\nimport {UtilsService} from \"../../services/utils.service\";\nimport {TransferService} from \"../../services/transfer.service\";\n\n/**\n * Component that is used to display a login page\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['../registration/registration.component.css']\n})\nexport class LoginComponent {\n\n  /**\n   * Represents a collection of form controls that are logically grouped together. It provides a convenient way to manage and validate multiple form controls as a single unit.\n   */\n  // @ts-ignore\n  form: FormGroup;\n\n  /**\n   * Subscription to preform signing in\n   */\n  loginSubscription: Subscription = new Subscription();\n\n  /**\n   * Subscription to load user profile\n   */\n  profileSubscription: Subscription = new Subscription();\n\n  /**\n   * Constructor for a component\n   * @param _client BackendService instance that sends requests to a server\n   * @param _snackBar Angular Material component that uses for opening snack bars\n   * @param _router Router field to route between components\n   * @param _utils Utils field that provides some help methods\n   * @param _transfer Field to transfer data between components\n   */\n  constructor(private _client: BackendService, private _snackBar: MatSnackBar,\n              private _router: Router, private _utils: UtilsService, private _transfer: TransferService) {\n  }\n\n  /**\n   * Gets a email field from a form group\n   */\n  get email() {\n    if (this.form)\n      return this.form.controls['email'];\n    return null;\n  }\n\n  /**\n   * Gets a password field from a form group\n   */\n  get password() {\n    if (this.form)\n      return this.form.controls['password'];\n    return null;\n  }\n\n  /**\n   * Method to validate whether user was redirected cause of changing profile\n   * data or not and initializes signing in form\n   */\n  ngOnInit(): void {\n    this.checkProfileUpdate();\n    this.form = new FormGroup({\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required])\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.loginSubscription.unsubscribe();\n    this.profileSubscription.unsubscribe();\n  }\n\n  /**\n   * Method that performs signing in\n   */\n  login() {\n    let request: LoginRequest = new LoginRequest(this.email?.value,\n      this.password?.value);\n\n    this.loginSubscription = this._client.login(request).subscribe({\n      next: (response) => {\n        this._utils.saveToken(response.headers.get(\"Authorization\"));\n\n        let link: string = localStorage.getItem(\"redirect-url\") as string;\n        if (link === null)\n          link = '/user/profile';\n        localStorage.removeItem(\"redirect-url\");\n\n        this.profileSubscription = this._client.fetchProfile().subscribe(profile => {\n          localStorage.setItem(\"user-profile\", JSON.stringify(profile));\n          this._transfer.changeRole(profile.role);\n          this._transfer.changeStatus(true);\n          this._router.navigateByUrl(link).then(r => r);\n        });\n      },\n      error: (response) => {\n        if (response.status === 401 || response.status === 403)\n          this.openUnsuccessfulSnackbar(response.error);\n        else\n          this.openUnsuccessfulSnackbar(\"An unexpected error occurred\");\n      }\n    })\n  }\n\n  /**\n   * Checks whether user was redirected cause of changing profile data or not\n   */\n  checkProfileUpdate() {\n    if (localStorage.getItem(\"emailChanged\") != null && localStorage.getItem(\"passwordChanged\") != null)\n      this.openUpdatedProfileBar(\"Your login data were changed.\\nConfirm your email in your mailbox\");\n    else if (localStorage.getItem(\"emailChanged\") != null)\n      this.openUpdatedProfileBar(\"Your email was changed changed.\\nConfirm it in your mailbox\");\n    else if (localStorage.getItem(\"passwordChanged\") != null)\n      this.openUpdatedProfileBar(\"Your password was changed.\\nYou can now log in\");\n    localStorage.removeItem(\"emailChanged\");\n    localStorage.removeItem(\"passwordChanged\");\n  }\n\n  /**\n   * Opens unsuccessful snack bar with a provided message\n   * @param message message to show\n   */\n  openUnsuccessfulSnackbar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 5000,\n    });\n  }\n\n  /**\n   * Opens successful snack bar with a provided message\n   * @param message message to show\n   */\n  openUpdatedProfileBar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 5000,\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Login\n        \n\n          \n            \n          \n          \n            Email is required\n            Invalid email address\n          \n\n          \n            \n          \n          \n            Password is required\n          \n        \n        Login\n      \n\n      \n        Don't have an account ?\n        Register\n      \n    \n  \n\n\n    \n\n    \n                \n                    ../registration/registration.component.css\n                \n                .container {\n  width: 80%;\n  display: flex;\n  flex-direction: column;\n  margin: 0rem auto 0;\n}\n\n/* .card {\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\n  border-radius: 2rem;\n  padding: 1.5rem;\n  background-color: white;\n  border: none;\n  min-width: 25vw;\n} */\n\n.center {\n  max-width: max-content;\n  padding: 3rem 3rem !important;\n  display: flex;\n  flex-direction: column;\n  gap: 3rem;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  align-self: center;\n  margin: 0rem auto 0;\n}\n\nh3{\n  padding: 2rem 0 !important;\n  font-size: 1.5rem !important;\n}\n\n.boldText {\n  font-weight: 700;\n}\n\n.heading {\n  font-size: 1.3rem;\n\n  /* my changes */\n  /*margin: 1rem 0 !important;*/\n  margin-bottom: 50px;\n  margin-top: 20px;\n}\n\n.flex-col {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n}\n\ninput {\n  border: none;\n  background-color: white;\n  border-radius: 3rem;\n  padding: 0.7rem 1rem;\n  font-size: 0.8rem;\n  font-weight: 400;\n  text-align: left;\n  filter: drop-shadow(0px 10px 20px rgba(0, 0, 0, 0.1));\n\n  /*my changes*/\n  width: 13rem;\n  /*margin-bottom: 15px;*/\n}\n\n.mainButton {\n  max-width: fit-content;\n  border: none;\n  background-color: white;\n  border-radius: 3rem;\n  padding: 0.7rem 3rem;\n  /*color: var(--purple-color);*/\n  color: mediumpurple;\n  font-size: 0.8rem;\n  font-weight: 700;\n  filter: drop-shadow(0px 10px 20px rgba(0, 0, 0, 0.1));\n\n  /* my changes */\n  margin-top: 30px;\n}\n\n.secondaryButton {\n  width: 85%;\n  color: white;\n  /*background-color: var(--purple-color);*/\n  background-color: mediumpurple;\n}\n\n.center-form {\n  display: grid;\n  place-items: center;\n}\n\n.error-content {\n  color: red;\n}\n\n.snackbar-custom {\n  background-color: blue;\n}\n\n.snackbar-dismiss-icon {\n  position: absolute;\n  right: 0;\n  top: 0;\n  cursor: pointer;\n  font-size: 18px;\n}\n\na{\n  color: var(--purple-color) !important;\n  padding: 0;\n}\n\np{\n  margin: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Login                                                              Email is required            Invalid email address                                                                Password is required                          Login                    Don\\'t have an account ?        Register            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginRequest.html":{"url":"classes/LoginRequest.html","title":"class - LoginRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/login-request.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(email: string, password: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/login-request.model.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/login-request.model.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/login-request.model.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginRequest {\n  email: string;\n  password: string;\n\n  constructor(email: string, password: string) {\n    this.email = email;\n    this.password = password;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/Muzeum_habsbourgComponent.html":{"url":"components/Muzeum_habsbourgComponent.html","title":"component - Muzeum_habsbourgComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  Muzeum_habsbourgComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tasks/scenes/muzeum_habsbourg/muzeum_habsbourg.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-scene\n            \n\n\n\n            \n                styleUrls\n                ./muzeum_habsbourg.component.css\n            \n\n\n\n            \n                templateUrl\n                ./muzeum_habsbourg.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                language\n                            \n                            \n                                    \n                                scene\n                            \n                            \n                                task_files_subscription\n                            \n                            \n                                taskFiles\n                            \n                            \n                                taskId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getTaskFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_route: ActivatedRoute, _client: BackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tasks/scenes/muzeum_habsbourg/muzeum_habsbourg.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getTaskFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskFiles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tasks/scenes/muzeum_habsbourg/muzeum_habsbourg.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tasks/scenes/muzeum_habsbourg/muzeum_habsbourg.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('scene')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/tasks/scenes/muzeum_habsbourg/muzeum_habsbourg.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task_files_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tasks/scenes/muzeum_habsbourg/muzeum_habsbourg.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskFiles\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tasks/scenes/muzeum_habsbourg/muzeum_habsbourg.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tasks/scenes/muzeum_habsbourg/muzeum_habsbourg.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, ElementRef, ViewChild} from '@angular/core';\n\nimport '../../js/components/collisionDetectorEventHandler.component.js';\nimport '../../js/components/toggleInfo.component.js';\nimport '../../js/components/clkMultiEventHandler.component.js';\nimport '../../js/components/clkSingleEventHandler.component.js';\nimport '../../js/components/petriNetSim.component.js';\nimport '../../js/components/sceneLanguage.component.js';\nimport '../../js/components/label.component.js';\nimport '../../js/components/toggleLabelVisibility.component.js';\nimport {TaskFiles} from \"../../../../models/task-files.model\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {BackendService} from \"../../../../services/backend.service\";\nimport {Subscription} from \"rxjs\";\n\n// @ts-ignore\nimport {TaskRequest} from \"../../../../models/task-request.model\";\nimport {places, transitions} from \"./scripts/sceneScript\";\n\n\n@Component({\n  selector: 'app-scene',\n  templateUrl: './muzeum_habsbourg.component.html',\n  styleUrls: ['./muzeum_habsbourg.component.css']\n})\nexport class Muzeum_habsbourgComponent {\n\n  @ViewChild('scene') scene!: ElementRef;\n\n  // @ts-ignore\n  taskId: number;\n  language: string = \"\";\n  // @ts-ignore\n  taskFiles: TaskFiles\n  task_files_subscription: Subscription = new Subscription();\n\n\n  constructor(private _route: ActivatedRoute, private _client: BackendService) {\n\n    this._route.params.subscribe(params => {\n      this.taskId = params['taskId'];\n      this.language = params['language'];\n\n      this.getTaskFiles();\n    })\n\n    // @ts-ignore\n    window.transitions = transitions;\n    // @ts-ignore\n    window.places = places;\n  }\n\n  private getTaskFiles() {\n    // @ts-ignore\n    let request: TaskRequest = new TaskRequest({\n      taskId: this.taskId,\n      language: this.language\n    })\n    // @ts-ignore\n    this.task_files_subscription = this._client.getTaskFiles(request).subscribe(data => {\n      this.taskFiles = data as TaskFiles;\n      TaskFiles.decode(this.taskFiles);\n\n      if (this.taskFiles) {\n        // attach petri net sim component to the scene\n        const petriNetSimAttr = {\n          pnmlFile: this.taskFiles.pnmlFile,\n          taskId: this.taskId\n        };\n\n        this.scene.nativeElement.setAttribute('petri-net-sim', petriNetSimAttr);\n\n\n        // attach language component to the scene\n        this.scene.nativeElement.setAttribute('language', `languageFile: ${this.taskFiles.languageFile}`)\n      }\n    })\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n\n    \n    \n    \n    \n    \n    \n    \n  \n\n  \n  \n  \n\n  \n  \n    \n      \n      \n    \n    \n    \n  \n\n  \n  \n  \n\n  \n\n  \n  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \n\n  \n    \n    \n    \n    \n  \n\n  \n    \n    \n    \n    \n  \n  \n  \n  \n  \n  \n\n  \n    \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n  \n  \n  \n  \n    \n    \n    \n    \n    \n    \n  \n\n  \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n  \n  \n\n  \n    \n    \n    \n    \n    \n    \n  \n\n  \n    \n    \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n    \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n    \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n    \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n  -->\n  \n  \n  \n  \n  -->\n  \n  \n  \n  \n  -->\n  \n  \n  \n  -->\n  \n  \n  \n  \n  -->\n  \n  \n  \n  \n  -->\n  \n  \n  \n  \n  -->\n  -->\n\n  \n  \n\n  \n  \n\n  \n    \n    \n    \n    \n    \n    \n  \n\n  \n  \n  \n\n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n\n\n    \n\n    \n                \n                    ./muzeum_habsbourg.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        varn    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'Muzeum_habsbourgComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NavbarComponent.html":{"url":"components/NavbarComponent.html","title":"component - NavbarComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  NavbarComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/navbar/navbar.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as navbar in the system\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-navbar\n            \n\n\n\n            \n                styleUrls\n                ./navbar.component.css\n            \n\n\n\n            \n                templateUrl\n                ./navbar.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                collapse\n                            \n                            \n                                isLogged\n                            \n                            \n                                loggedSubscription\n                            \n                            \n                                role\n                            \n                            \n                                roleSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canCollapse\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                showMenu\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, _client: BackendService, _transfer: TransferService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/navbar/navbar.component.ts:38\n                            \n                        \n\n                \n                    \n                            Constructor for a component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router field to route between components\n\n                                                        \n                                                \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BackendService instance that sends requests to a server\n\n                                                        \n                                                \n                                                \n                                                        _transfer\n                                                  \n                                                        \n                                                                        TransferService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Field to transfer data between components\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canCollapse\n                        \n                    \n                \n            \n            \n                \ncanCollapse()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:84\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:91\n                \n            \n\n\n            \n                \n                    Logs out user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:72\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:54\n                \n            \n\n\n            \n                \n                    Method to retrieve JWT token from a local storage if it exists, tries to get user\nprofile is user logged in and sends isLogged and role fields to a transfer service.\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showMenu\n                        \n                    \n                \n            \n            \n                \nshowMenu()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/navbar/navbar.component.ts:80\n                \n            \n\n\n            \n                \n                    Shows or hides side menu\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        collapse\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isLogged\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:23\n                        \n                    \n\n            \n                \n                    Whether users is logged in or not\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loggedSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:33\n                        \n                    \n\n            \n                \n                    Subscription to transfer isLogged value\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:28\n                        \n                    \n\n            \n                \n                    Role of a user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roleSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/navbar/navbar.component.ts:38\n                        \n                    \n\n            \n                \n                    Subscription to transfer role value\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Router} from '@angular/router';\nimport {Subscription} from \"rxjs\";\nimport {BackendService} from \"../../services/backend.service\";\nimport {TransferService} from \"../../services/transfer.service\";\nimport {UserProfile} from \"../../models/user-profile.model\";\n\n/**\n * Component that is used as navbar in the system\n */\n@Component({\n  selector: 'app-navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit, OnDestroy {\n\n  collapse: boolean = false;\n\n  /**\n   * Whether users is logged in or not\n   */\n  isLogged: boolean = false;\n\n  /**\n   * Role of a user\n   */\n  role: string = \"\";\n\n  /**\n   * Subscription to transfer isLogged value\n   */\n  loggedSubscription: Subscription = new Subscription();\n\n  /**\n   * Subscription to transfer role value\n   */\n  roleSubscription: Subscription = new Subscription();\n\n  /**\n   * Constructor for a component\n   * @param _client BackendService instance that sends requests to a server\n   * @param router Router field to route between components\n   * @param _transfer Field to transfer data between components\n   */\n  constructor(private router: Router, private _client: BackendService,\n              private _transfer: TransferService) {\n  }\n\n  /**\n   * Method to retrieve JWT token from a local storage if it exists, tries to get user\n   * profile is user logged in and sends isLogged and role fields to a transfer service.\n   */\n  ngOnInit(): void {\n    if (localStorage.getItem(\"jwt-token\"))\n      this.isLogged = true;\n\n    let user_profile_presents = localStorage.getItem(\"user-profile\")\n    if (user_profile_presents) {\n      let profile: UserProfile = JSON.parse(user_profile_presents);\n      this.role = profile.role;\n    }\n\n    this.loggedSubscription = this._transfer.loginStatus$.subscribe(value => {\n      this.isLogged = value;\n    });\n    this.roleSubscription = this._transfer.roleStatus$.subscribe(role => {\n      this.role = role;\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.loggedSubscription.unsubscribe();\n    this.roleSubscription.unsubscribe();\n  }\n\n  /**\n   * Shows or hides side menu\n   */\n  showMenu() {\n    this.collapse = !this.collapse\n  }\n\n  canCollapse() {\n    return this.router.url !== '/login' && this.router.url !== '/register'\n  }\n\n  /**\n   * Logs out user\n   */\n  logout() {\n    this.collapse = !this.collapse\n    localStorage.removeItem(\"jwt-token\");\n    localStorage.removeItem(\"user-profile\");\n    this._transfer.changeStatus(false);\n    this.router.navigate([\"/login\"]).then(r => r);\n  }\n}\n\n    \n\n    \n        \n  \n        \n          \n          LirkisEduVePn\n        \n      menu\n  \n\n\n\n  \n    close\n    \n      About\n      Profile\n      Dashboard\n      Login\n      Register\n    \n    \n      logout\n    \n  \n\n\n    \n\n    \n                \n                    ./navbar.component.css\n                \n                .testik{\n    width: 80%;\n    margin: 0 auto;\n    display: flex;\n    flex-direction: row;\n    justify-content: space-between;\n    align-items: center;\n    padding: 2rem 0;\n}\n\n.navbar{\n    width: 100%;\n    position: fixed;\n    background-color: white;\n    z-index: 1;\n    box-shadow: 0px 10px 20px rgba(0, 0, 0, 0.03);\n}\n\n.logo{\n    display: flex;\n    flex-direction: row;\n    gap: 1rem;\n    align-items: center;\n    justify-content: center;\n}\n\na{\n    text-decoration: none !important;\n    font-size: 0.7rem;\n}\n\nh3{\n    color: black;\n    font-size: 1.2rem;\n    font-weight: 600 !important;\n    margin: 0;\n}\n\n.sidebar{\n    display: block;\n    height: 100vh;\n    position: fixed;\n    right: -100%;\n    top: 0;\n    bottom: 0;\n    width: 25vw;\n    align-items: center;\n    justify-content: space-between;\n    background-color: var(--purple-color);\n    color: white;\n    z-index: 10;\n    animation: showMenu 400ms ease forwards;\n}\n\n.secondCol{\n    display: flex;\n    flex-direction: column;\n    text-decoration: none;\n}\n\n.sidebar a{\n    opacity: 0.6;\n    color: white !important;\n    font-weight: 400;\n    cursor: pointer;\n}\n\n.sidebar a:hover{\n    font-weight: 600;\n}\n\n.flexCol{\n    width: 100%;\n    height: 100%;\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    gap: 2rem;\n    align-items: center;\n    text-align: center;\n    font-size: 1.1rem;\n}\n\n.overlay{\n    display: none;\n    width: 100vw;\n    height: 100vh;\n    background-color: black;\n    position: fixed;\n    top: 0;\n    left: 0;\n    z-index: 9;\n    opacity: 0.7;\n}\n\n@keyframes showMenu{\n    to{\n        right: 0;\n    }\n}\n\n\n@media only screen and (max-width: 900px) {\n    .sidebar{\n        width: 60vw;\n    }\n}\n\n@media only screen and (max-width: 800px) {\n    .sidebar{\n        width: 100vw;\n    }\n}\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                              LirkisEduVePn              menu        close          About      Profile      Dashboard      Login      Register              logout      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NavbarComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PreviewScenariosComponent.html":{"url":"components/PreviewScenariosComponent.html","title":"component - PreviewScenariosComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PreviewScenariosComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/preview-scenarios/preview-scenarios.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as a dialog to preview a scenario\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-preview-scenarios\n            \n\n\n\n            \n                styleUrls\n                ./preview-scenarios.component.css\n            \n\n\n\n            \n                templateUrl\n                ./preview-scenarios.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                current_photo\n                            \n                            \n                                current_photo_index\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                scenario\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                next_photo\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                prev_photo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialogRef: MatDialogRef, _client: BackendService, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/preview-scenarios/preview-scenarios.component.ts:30\n                            \n                        \n\n                \n                    \n                            Constructor for a component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matDialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening dialogs\n\n                                                        \n                                                \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BackendService instance that sends requests to a server\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data that was transfer to this component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preview-scenarios/preview-scenarios.component.ts:85\n                \n            \n\n\n            \n                \n                    While this component is a dialog, this method closes this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        next_photo\n                        \n                    \n                \n            \n            \n                \nnext_photo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preview-scenarios/preview-scenarios.component.ts:73\n                \n            \n\n\n            \n                \n                    Move to a next photo\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preview-scenarios/preview-scenarios.component.ts:54\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preview-scenarios/preview-scenarios.component.ts:45\n                \n            \n\n\n            \n                \n                    Method to get a scenario and convert each photo to a needed format and set a current photo\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prev_photo\n                        \n                    \n                \n            \n            \n                \nprev_photo()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preview-scenarios/preview-scenarios.component.ts:61\n                \n            \n\n\n            \n                \n                    Move to a previous photo\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        current_photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/preview-scenarios/preview-scenarios.component.ts:30\n                        \n                    \n\n            \n                \n                    Base64 of a current photo\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        current_photo_index\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/preview-scenarios/preview-scenarios.component.ts:25\n                        \n                    \n\n            \n                \n                    Current photo of a scenario\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/preview-scenarios/preview-scenarios.component.ts:39\n                        \n                    \n\n            \n                \n                    data that was transfer to this component\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scenario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScenarioPreview\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/preview-scenarios/preview-scenarios.component.ts:20\n                        \n                    \n\n            \n                \n                    Scenario to preview\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {BackendService} from \"../../services/backend.service\";\nimport {ScenarioPreview} from \"../../models/scenario-preview.model\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\n\n/**\n * Component that is used as a dialog to preview a scenario\n */\n@Component({\n  selector: 'app-preview-scenarios',\n  templateUrl: './preview-scenarios.component.html',\n  styleUrls: ['./preview-scenarios.component.css']\n})\nexport class PreviewScenariosComponent implements OnInit, OnDestroy {\n\n  /**\n   * Scenario to preview\n   */\n  // @ts-ignore\n  scenario: ScenarioPreview;\n\n  /**\n   * Current photo of a scenario\n   */\n  current_photo_index = 0;\n\n  /**\n   * Base64 of a current photo\n   */\n  current_photo: string = \"\";\n\n  /**\n   * Constructor for a component\n   * @param matDialogRef Angular Material component that uses for opening dialogs\n   * @param _client BackendService instance that sends requests to a server\n   * @param data data that was transfer to this component\n   */\n  constructor(private matDialogRef: MatDialogRef,\n              private _client: BackendService, @Inject(MAT_DIALOG_DATA) public data: any) {\n  }\n\n  /**\n   * Method to get a scenario and convert each photo to a needed format and set a current photo\n   */\n  ngOnInit(): void {\n    this.scenario = this.data as ScenarioPreview;\n    for (let j = 0; j  0) {\n      this.current_photo_index--;\n    } else {\n      this.current_photo_index = this.scenario.photos.length - 1;\n    }\n    this.current_photo = this.scenario.photos[this.current_photo_index];\n  }\n\n  /**\n   * Move to a next photo\n   */\n  next_photo() {\n    if (this.current_photo_index \n    \n\n    \n        \n  close\n\n\n  {{scenario.name}}\n  {{scenario.description}}\n  \n\n\n\n  navigate_before\n  navigate_next\n\n\n    \n\n    \n                \n                    ./preview-scenarios.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  close  {{scenario.name}}  {{scenario.description}}    navigate_before  navigate_next'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PreviewScenariosComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PreviewSceneComponent.html":{"url":"components/PreviewSceneComponent.html","title":"component - PreviewSceneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PreviewSceneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/preview-scene/preview-scene.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as a dialog to preview a scene\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-preview-scene\n            \n\n\n\n            \n                styleUrls\n                ./preview-scene.component.css\n            \n\n\n\n            \n                templateUrl\n                ./preview-scene.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                scene\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialogRef: MatDialogRef, _client: BackendService, data: any)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/preview-scene/preview-scene.component.ts:20\n                            \n                        \n\n                \n                    \n                            Constructor for a component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matDialogRef\n                                                  \n                                                        \n                                                                    MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening dialogs\n\n                                                        \n                                                \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BackendService instance that sends requests to a server\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        any\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data that was transfer to this component\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preview-scene/preview-scene.component.ts:47\n                \n            \n\n\n            \n                \n                    While this component is a dialog, this method closes this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preview-scene/preview-scene.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preview-scene/preview-scene.component.ts:35\n                \n            \n\n\n            \n                \n                    Method to get a scene and convert a scene photo to a needed format\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/preview-scene/preview-scene.component.ts:29\n                        \n                    \n\n            \n                \n                    data that was transfer to this component\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScenePreview\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/preview-scene/preview-scene.component.ts:20\n                        \n                    \n\n            \n                \n                    Scene to preview\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {BackendService} from \"../../services/backend.service\";\nimport {ScenePreview} from \"../../models/scene-preview.model\";\n\n/**\n * Component that is used as a dialog to preview a scene\n */\n@Component({\n  selector: 'app-preview-scene',\n  templateUrl: './preview-scene.component.html',\n  styleUrls: ['./preview-scene.component.css']\n})\nexport class PreviewSceneComponent implements OnInit, OnDestroy {\n\n  /**\n   * Scene to preview\n   */\n  // @ts-ignore\n  scene: ScenePreview;\n\n  /**\n   * Constructor for a component\n   * @param matDialogRef Angular Material component that uses for opening dialogs\n   * @param _client BackendService instance that sends requests to a server\n   * @param data data that was transfer to this component\n   */\n  constructor(private matDialogRef: MatDialogRef,\n              private _client: BackendService, @Inject(MAT_DIALOG_DATA) public data: any) {\n  }\n\n  /**\n   * Method to get a scene and convert a scene photo to a needed format\n   */\n  ngOnInit(): void {\n    this.scene = this.data as ScenePreview;\n    this.scene.photo = `data:image/png;base64,${this.scene.photo}`\n  }\n\n  ngOnDestroy(): void {\n\n  }\n\n  /**\n   * While this component is a dialog, this method closes this component\n   */\n  closeDialog() {\n    this.matDialogRef.close();\n  }\n}\n\n    \n\n    \n        \n  close\n\n\n  {{scene.name}}\n  {{scene.description}}\n  \n\n\n    \n\n    \n                \n                    ./preview-scene.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  close  {{scene.name}}  {{scene.description}}  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PreviewSceneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/PreviewTasksComponent.html":{"url":"components/PreviewTasksComponent.html","title":"component - PreviewTasksComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  PreviewTasksComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/preview-tasks/preview-tasks.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as a dialog to preview tasks and ability to start one of them\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-preview-tasks\n            \n\n\n\n            \n                styleUrls\n                ./preview-tasks.component.css\n            \n\n\n\n            \n                templateUrl\n                ./preview-tasks.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentTasks\n                            \n                            \n                                finish_session_subscription\n                            \n                            \n                                items_per_page\n                            \n                            \n                                max_pages\n                            \n                            \n                                page\n                            \n                            \n                                profile\n                            \n                            \n                                selectedLanguages\n                            \n                            \n                                task_files_subscription\n                            \n                            \n                                tasks\n                            \n                            \n                                tasks_preview_subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                cancelTask\n                            \n                            \n                                closeDialog\n                            \n                            \n                                continueTask\n                            \n                            \n                                next_sessions\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                onLanguageChange\n                            \n                            \n                                openScenarioPreview\n                            \n                            \n                                openScenePreview\n                            \n                            \n                                prev_sessions\n                            \n                            \n                                startTask\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialogRef: MatDialogRef, _client: BackendService, matDialog: MatDialog, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/preview-tasks/preview-tasks.component.ts:71\n                            \n                        \n\n                \n                    \n                            Constructor for a component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matDialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening dialogs\n\n                                                        \n                                                \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BackendService instance that sends requests to a server\n\n                                                        \n                                                \n                                                \n                                                        matDialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening dialogs\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router field to route between components\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        cancelTask\n                        \n                    \n                \n            \n            \n                \ncancelTask(i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preview-tasks/preview-tasks.component.ts:181\n                \n            \n\n\n            \n                \n                    Method to cancel already started task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preview-tasks/preview-tasks.component.ts:107\n                \n            \n\n\n            \n                \n                    While this component is a dialog, this method closes this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        continueTask\n                        \n                    \n                \n            \n            \n                \ncontinueTask(i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preview-tasks/preview-tasks.component.ts:169\n                \n            \n\n\n            \n                \n                    Method to continue already started task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        next_sessions\n                        \n                    \n                \n            \n            \n                \nnext_sessions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preview-tasks/preview-tasks.component.ts:123\n                \n            \n\n\n            \n                \n                    Moves to the previous page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preview-tasks/preview-tasks.component.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preview-tasks/preview-tasks.component.ts:88\n                \n            \n\n\n            \n                \n                    Method to get user profile from a local storage and load all tasks\nthat are available for the current user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        onLanguageChange\n                        \n                    \n                \n            \n            \n                \nonLanguageChange(changedLanguage: string, index: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preview-tasks/preview-tasks.component.ts:161\n                \n            \n\n\n            \n                \n                    Method executes when the language of the chosen task changes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    changedLanguage\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        chosen language\n\n                                    \n                                \n                                \n                                    index\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of a task (in preview, not in database)\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openScenarioPreview\n                        \n                    \n                \n            \n            \n                \nopenScenarioPreview(i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preview-tasks/preview-tasks.component.ts:133\n                \n            \n\n\n            \n                \n                    Opens PreviewScenariosComponent of the chose task scenario\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        task id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openScenePreview\n                        \n                    \n                \n            \n            \n                \nopenScenePreview(i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preview-tasks/preview-tasks.component.ts:141\n                \n            \n\n\n            \n                \n                    Opens PreviewSceneComponent of the chose task scene\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        task id\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prev_sessions\n                        \n                    \n                \n            \n            \n                \nprev_sessions()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preview-tasks/preview-tasks.component.ts:114\n                \n            \n\n\n            \n                \n                    Moves to the next page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startTask\n                        \n                    \n                \n            \n            \n                \nstartTask(i: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/preview-tasks/preview-tasks.component.ts:149\n                \n            \n\n\n            \n                \n                    Method to start task\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    i\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of a task to start\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentTasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskPreview[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/preview-tasks/preview-tasks.component.ts:30\n                        \n                    \n\n            \n                \n                    List of tasks on the current page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        finish_session_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/preview-tasks/preview-tasks.component.ts:50\n                        \n                    \n\n            \n                \n                    Subscription to finish a session of a running task\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items_per_page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 5\n                    \n                \n                    \n                        \n                                Defined in src/app/components/preview-tasks/preview-tasks.component.ts:71\n                        \n                    \n\n            \n                \n                    Items per page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        max_pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/preview-tasks/preview-tasks.component.ts:61\n                        \n                    \n\n            \n                \n                    Total pages of tasks\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/preview-tasks/preview-tasks.component.ts:66\n                        \n                    \n\n            \n                \n                    Current page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserProfile\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/preview-tasks/preview-tasks.component.ts:56\n                        \n                    \n\n            \n                \n                    Profile of a logged-in user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        selectedLanguages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/preview-tasks/preview-tasks.component.ts:35\n                        \n                    \n\n            \n                \n                    Selected languages for a current task\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task_files_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/preview-tasks/preview-tasks.component.ts:45\n                        \n                    \n\n            \n                \n                    Subscription to get a chosen task files\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasks\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskPreview[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/preview-tasks/preview-tasks.component.ts:25\n                        \n                    \n\n            \n                \n                    List of tasks to preview\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        tasks_preview_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/preview-tasks/preview-tasks.component.ts:40\n                        \n                    \n\n            \n                \n                    Subscription to get all tasks available for a logged-in user\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {Subscription} from \"rxjs\";\nimport {BackendService} from \"../../services/backend.service\";\nimport {TaskPreview} from \"../../models/task-preview.model\";\nimport {MatDialog, MatDialogRef} from \"@angular/material/dialog\";\nimport {PreviewScenariosComponent} from \"../preview-scenarios/preview-scenarios.component\";\nimport {PreviewSceneComponent} from \"../preview-scene/preview-scene.component\";\nimport {Router} from \"@angular/router\";\nimport {UserProfile} from \"../../models/user-profile.model\";\nimport {TaskSessionFinishRequest} from \"../../models/task-session-finish-request.model\";\n\n/**\n * Component that is used as a dialog to preview tasks and ability to start one of them\n */\n@Component({\n  selector: 'app-preview-tasks',\n  templateUrl: './preview-tasks.component.html',\n  styleUrls: ['./preview-tasks.component.css']\n})\nexport class PreviewTasksComponent implements OnInit, OnDestroy {\n\n  /**\n   * List of tasks to preview\n   */\n  tasks: TaskPreview[] = [];\n\n  /**\n   * List of tasks on the current page\n   */\n  currentTasks: TaskPreview[] = [];\n\n  /**\n   * Selected languages for a current task\n   */\n  selectedLanguages: string[] = [];\n\n  /**\n   * Subscription to get all tasks available for a logged-in user\n   */\n  tasks_preview_subscription: Subscription = new Subscription();\n\n  /**\n   * Subscription to get a chosen task files\n   */\n  task_files_subscription: Subscription = new Subscription();\n\n  /**\n   * Subscription to finish a session of a running task\n   */\n  finish_session_subscription: Subscription = new Subscription();\n\n  /**\n   * Profile of a logged-in user\n   */\n  // @ts-ignore\n  profile: UserProfile;\n\n  /**\n   * Total pages of tasks\n   */\n  max_pages: number = 0;\n\n  /**\n   * Current page\n   */\n  page: number = 0;\n\n  /**\n   * Items per page\n   */\n  items_per_page: number = 5;\n\n  /**\n   * Constructor for a component\n   * @param matDialogRef Angular Material component that uses for opening dialogs\n   * @param _client BackendService instance that sends requests to a server\n   * @param matDialog Angular Material component that uses for opening dialogs\n   * @param _router Router field to route between components\n   */\n  constructor(private matDialogRef: MatDialogRef, private _client: BackendService,\n              private matDialog: MatDialog, private _router: Router) {\n  }\n\n  /**\n   * Method to get user profile from a local storage and load all tasks\n   * that are available for the current user\n   */\n  ngOnInit() {\n    // @ts-ignore\n    this.profile = JSON.parse(localStorage.getItem(\"user-profile\")) as UserProfile;\n    this.tasks_preview_subscription = this._client.getTasksPreview(this.profile.id).subscribe(data => {\n      this.tasks = data as TaskPreview[];\n      this.selectedLanguages = this.tasks.map(t => t.scenario.languages[0])\n      this.max_pages = Math.ceil(this.tasks.length / this.items_per_page);\n      this.currentTasks = this.tasks.slice(0, Math.min(this.tasks.length, this.items_per_page));\n    })\n  }\n\n  ngOnDestroy() {\n    this.tasks_preview_subscription.unsubscribe();\n    this.finish_session_subscription.unsubscribe();\n  }\n\n  /**\n   * While this component is a dialog, this method closes this component\n   */\n  closeDialog() {\n    this.matDialogRef.close();\n  }\n\n  /**\n   * Moves to the next page\n   */\n  prev_sessions() {\n    this.page--;\n    this.currentTasks = this.tasks.slice(this.page * this.items_per_page,\n      Math.min(this.tasks.length, (this.page + 1) * this.items_per_page));\n  }\n\n  /**\n   * Moves to the previous page\n   */\n  next_sessions() {\n    this.page++;\n    this.currentTasks = this.tasks.slice(this.page * this.items_per_page,\n      Math.min(this.tasks.length, (this.page + 1) * this.items_per_page));\n  }\n\n  /**\n   * Opens PreviewScenariosComponent of the chose task scenario\n   * @param i task id\n   */\n  openScenarioPreview(i: number) {\n    this.matDialog.open(PreviewScenariosComponent, {data: JSON.parse(JSON.stringify(this.tasks[i].scenario))});\n  }\n\n  /**\n   * Opens PreviewSceneComponent of the chose task scene\n   * @param i task id\n   */\n  openScenePreview(i: number) {\n    this.matDialog.open(PreviewSceneComponent, {data: JSON.parse(JSON.stringify(this.tasks[i].scene))})\n  }\n\n  /**\n   * Method to start task\n   * @param i id of a task to start\n   */\n  startTask(i: number) {\n    localStorage.removeItem(\"sessionID\")\n    this._router.navigate([`/${this.tasks[i].scene.folderName}/task/${this.tasks[i].id}/${this.selectedLanguages[i]}`]).then(() => {\n      this.matDialogRef.close()\n    });\n  }\n\n  /**\n   * Method executes when the language of the chosen task changes\n   * @param changedLanguage chosen language\n   * @param index id of a task (in preview, not in database)\n   */\n  onLanguageChange(changedLanguage: string, index: number) {\n    this.selectedLanguages[index] = changedLanguage;\n  }\n\n  /**\n   * Method to continue already started task\n   * @param i\n   */\n  continueTask(i: number) {\n    localStorage.removeItem(\"sessionID\");\n    localStorage.setItem(\"sessionID\", this.tasks[i].openSessions[0].toString());\n    this._router.navigate([`/${this.tasks[i].scene.folderName}/task/${this.tasks[i].id}/${this.selectedLanguages[i]}`]).then(() => {\n      this.matDialogRef.close()\n    });\n  }\n\n  /**\n   * Method to cancel already started task\n   * @param i\n   */\n  cancelTask(i: number) {\n    localStorage.removeItem(\"sessionID\");\n    let request: TaskSessionFinishRequest = new TaskSessionFinishRequest({\n      taskSessionId: this.tasks[i].openSessions[0],\n      successful: false,\n      finishTime: new Date()\n    })\n    this.finish_session_subscription = this._client.finishTaskSession(request).subscribe(() => {\n      console.log(request.taskSessionId)\n      this.tasks_preview_subscription = this._client.getTasksPreview(this.profile.id).subscribe(data => {\n        this.tasks = data as TaskPreview[];\n        this.selectedLanguages = this.tasks.map(t => t.scenario.languages[0])\n        this.max_pages = Math.ceil(this.tasks.length / this.items_per_page);\n        this.currentTasks = this.tasks.slice(0, Math.min(this.tasks.length, this.items_per_page));\n      })\n    });\n  }\n}\n\n    \n\n    \n        \n  close\n\nSelect task\n\n\n    \n      \n        {{task.name}}\n        \n          language\n            \n              \n                {{language}}\n              \n            \n        \n      \n      \n        {{task.description}}\n      \n    \n  \n    \n      Start\n    \n     0\" style=\"display: flex; flex-direction: column; gap: 0.3rem; align-items: center\">\n      Finish\n      Continue\n    \n  \n\n\n  \n    navigate_before\n  \n\n  = max_pages - 1\" mat-icon-button>\n    navigate_next\n  \n\n\n    \n\n    \n                \n                    ./preview-tasks.component.css\n                \n                .slide-box {\n  width: 500px;\n  height: 400px;\n  overflow: scroll;\n  text-align: left;\n}\n\n.quizOption{\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  padding: 1rem 1.5rem;\n  align-items: center;\n  gap: 2rem;\n  border-bottom: 0.5px solid rgba(30, 30, 30, 0.1);\n}\n\n.quizOption .secondaryText{\n  text-align: left;\n  width: 70%;\n}\n\n.name{\n  display: flex;\n  gap: 1rem;\n}\n\n.language{\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  gap: 1rem;\n}\n\n.language mat-icon{\n  color: var(--purple-color) !important;\n  font-size: 1.3rem;\n  vertical-align: center;\n}\n\n.colorText{\n  color: var(--purple-color) !important;\n  font-size: 0.7rem;\n  font-weight: 700;\n}\n\n.preview{\n  display: flex;\n  flex-direction: column;\n  gap: 0.5rem;\n}\n\n.helper{\n  display: flex;\n  gap: 0.5rem;\n}\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  closeSelect task                  {{task.name}}                  language                                          {{language}}                                                      {{task.description}}                      Start         0\" style=\"display: flex; flex-direction: column; gap: 0.3rem; align-items: center\">      Finish      Continue            navigate_before    = max_pages - 1\" mat-icon-button>    navigate_next  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'PreviewTasksComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/ProfileSettingsComponent.html":{"url":"components/ProfileSettingsComponent.html","title":"component - ProfileSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  ProfileSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/profile-settings/profile-settings.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that defines a dialog for a profile settings\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-profile-settings\n            \n\n\n\n            \n                styleUrls\n                ./profile-settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./profile-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                form\n                            \n                            \n                                profile_update_subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                closeDialog\n                            \n                            \n                                logout\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openSuccessfulSnackbar\n                            \n                            \n                                openUnsuccessfulSnackbar\n                            \n                            \n                                updateForm\n                            \n                            \n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    nickname\n                                \n                                \n                                    firstname\n                                \n                                \n                                    lastname\n                                \n                                \n                                    currentPassword\n                                \n                                \n                                    newPassword\n                                \n                                \n                                    repeatNewPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialogRef: MatDialogRef, data: UserProfile, router: Router, _transfer: TransferService, _client: BackendService, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/profile-settings/profile-settings.component.ts:32\n                            \n                        \n\n                \n                    \n                            Constructor for a component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matDialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening dialogs\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        UserProfile\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data that was transfer to this component\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router field to route between components\n\n                                                        \n                                                \n                                                \n                                                        _transfer\n                                                  \n                                                        \n                                                                        TransferService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Field to transfer data between components\n\n                                                        \n                                                \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BackendService instance that sends requests to a server\n\n                                                        \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening snack bars\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profile-settings/profile-settings.component.ts:72\n                \n            \n\n\n            \n                \n                    While this component is a dialog, this method closes this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        logout\n                        \n                    \n                \n            \n            \n                \nlogout()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profile-settings/profile-settings.component.ts:79\n                \n            \n\n\n            \n                \n                    Method to logout from a system\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profile-settings/profile-settings.component.ts:148\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profile-settings/profile-settings.component.ts:135\n                \n            \n\n\n            \n                \n                    Method to initialize a form for a profile settings\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSuccessfulSnackbar\n                        \n                    \n                \n            \n            \n                \nopenSuccessfulSnackbar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profile-settings/profile-settings.component.ts:221\n                \n            \n\n\n            \n                \n                    Opens successful snack bar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUnsuccessfulSnackbar\n                        \n                    \n                \n            \n            \n                \nopenUnsuccessfulSnackbar(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profile-settings/profile-settings.component.ts:232\n                \n            \n\n\n            \n                \n                    Opens unsuccessful snack bar\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateForm\n                        \n                    \n                \n            \n            \n                \nupdateForm(profile: UserProfile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profile-settings/profile-settings.component.ts:206\n                \n            \n\n\n            \n                \n                    Method to clear and update settings form\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    profile\n                                    \n                                                UserProfile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        update user profile\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \nupdateProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/profile-settings/profile-settings.component.ts:156\n                \n            \n\n\n            \n                \n                    Method to get all data from a form and update a profile\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserProfile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile-settings/profile-settings.component.ts:44\n                        \n                    \n\n            \n                \n                    data that was transfer to this component\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile-settings/profile-settings.component.ts:27\n                        \n                    \n\n            \n                \n                    Represents a collection of form controls that are logically grouped together. It provides a convenient way to manage and validate multiple form controls as a single unit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile_update_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/profile-settings/profile-settings.component.ts:32\n                        \n                    \n\n            \n                \n                    Subscription to update user profile\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/profile-settings/profile-settings.component.ts:54\n                                \n                            \n                    \n                        \n                                Gets an email field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nickname\n                    \n                \n\n                \n                    \n                        getnickname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/profile-settings/profile-settings.component.ts:63\n                                \n                            \n                    \n                        \n                                Gets a nickname field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        firstname\n                    \n                \n\n                \n                    \n                        getfirstname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/profile-settings/profile-settings.component.ts:90\n                                \n                            \n                    \n                        \n                                Gets a firstname field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastname\n                    \n                \n\n                \n                    \n                        getlastname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/profile-settings/profile-settings.component.ts:99\n                                \n                            \n                    \n                        \n                                Gets a lastname field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        currentPassword\n                    \n                \n\n                \n                    \n                        getcurrentPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/profile-settings/profile-settings.component.ts:108\n                                \n                            \n                    \n                        \n                                Gets a currentPassword field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        newPassword\n                    \n                \n\n                \n                    \n                        getnewPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/profile-settings/profile-settings.component.ts:117\n                                \n                            \n                    \n                        \n                                Gets a newPassword field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        repeatNewPassword\n                    \n                \n\n                \n                    \n                        getrepeatNewPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/profile-settings/profile-settings.component.ts:126\n                                \n                            \n                    \n                        \n                                Gets a repeatPassword field from a form group\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {MAT_DIALOG_DATA, MatDialogRef} from '@angular/material/dialog';\nimport {Router} from '@angular/router';\nimport {TransferService} from \"../../services/transfer.service\";\nimport {UserProfile} from \"../../models/user-profile.model\";\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {ProfileUpdate} from \"../../models/profile-update.model\";\nimport {BackendService} from \"../../services/backend.service\";\nimport {Subscription} from \"rxjs\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\n\n/**\n * Component that defines a dialog for a profile settings\n */\n@Component({\n  selector: 'app-profile-settings',\n  templateUrl: './profile-settings.component.html',\n  styleUrls: ['./profile-settings.component.css']\n})\nexport class ProfileSettingsComponent implements OnInit, OnDestroy {\n\n  /**\n   * Represents a collection of form controls that are logically grouped together. It provides a convenient way to manage and validate multiple form controls as a single unit.\n   */\n  // @ts-ignore\n  form: FormGroup;\n\n  /**\n   * Subscription to update user profile\n   */\n  profile_update_subscription: Subscription = new Subscription();\n\n  /**\n   * Constructor for a component\n   * @param matDialogRef Angular Material component that uses for opening dialogs\n   * @param _client BackendService instance that sends requests to a server\n   * @param _snackBar Angular Material component that uses for opening snack bars\n   * @param data data that was transfer to this component\n   * @param router Router field to route between components\n   * @param _transfer Field to transfer data between components\n   */\n  constructor(private matDialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: UserProfile,\n              private router: Router,\n              private _transfer: TransferService,\n              private _client: BackendService,\n              private _snackBar: MatSnackBar) {\n  }\n\n  /**\n   * Gets an email field from a form group\n   */\n  get email() {\n    if (this.form)\n      return this.form.controls['email'];\n    return null;\n  }\n\n  /**\n   * Gets a nickname field from a form group\n   */\n  get nickname() {\n    if (this.form)\n      return this.form.controls['nickname'];\n    return null;\n  }\n\n  /**\n   * While this component is a dialog, this method closes this component\n   */\n  closeDialog() {\n    this.matDialogRef.close();\n  }\n\n  /**\n   * Method to logout from a system\n   */\n  logout() {\n    localStorage.removeItem(\"jwt-token\");\n    localStorage.removeItem(\"user-profile\");\n    this._transfer.changeStatus(false);\n    this.closeDialog();\n    this.router.navigate([\"/login\"]).then(r => r);\n  }\n\n  /**\n   * Gets a firstname field from a form group\n   */\n  get firstname() {\n    if (this.form)\n      return this.form.controls['firstname'];\n    return null;\n  }\n\n  /**\n   * Gets a lastname field from a form group\n   */\n  get lastname() {\n    if (this.form)\n      return this.form.controls['lastname'];\n    return null;\n  }\n\n  /**\n   * Gets a currentPassword field from a form group\n   */\n  get currentPassword() {\n    if (this.form)\n      return this.form.controls['currentPassword'];\n    return null;\n  }\n\n  /**\n   * Gets a newPassword field from a form group\n   */\n  get newPassword() {\n    if (this.form)\n      return this.form.controls['newPassword'];\n    return null;\n  }\n\n  /**\n   * Gets a repeatPassword field from a form group\n   */\n  get repeatNewPassword() {\n    if (this.form)\n      return this.form.controls['repeatNewPassword'];\n    return null;\n  }\n\n  /**\n   * Method to initialize a form for a profile settings\n   */\n  ngOnInit(): void {\n    let profile: UserProfile = this.data;\n    this.form = new FormGroup({\n      email: new FormControl(profile.email, [Validators.required, Validators.email]),\n      nickname: new FormControl(profile.nickname, [Validators.required]),\n      firstname: new FormControl(profile.firstname, [Validators.required]),\n      lastname: new FormControl(profile.lastname, [Validators.required]),\n      currentPassword: new FormControl('', []),\n      newPassword: new FormControl('', []),\n      repeatNewPassword: new FormControl('', []),\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.matDialogRef.close();\n    this.profile_update_subscription.unsubscribe();\n  }\n\n  /**\n   * Method to get all data from a form and update a profile\n   */\n  updateProfile() {\n    let profile: ProfileUpdate = new ProfileUpdate({\n      id: this.data.id,\n      email: this.email?.value,\n      nickname: this.nickname?.value,\n      firstname: this.firstname?.value,\n      lastname: this.lastname?.value,\n      role: this.data.role,\n      currentPassword: this.currentPassword?.value,\n      newPassword: this.newPassword?.value,\n      repeatNewPassword: this.repeatNewPassword?.value\n    })\n\n    let emailChanged = false;\n    let passwordChanged = false;\n    if (this.data.email != profile.email)\n      emailChanged = true;\n    if (profile.newPassword != '' && profile.repeatNewPassword != '' && profile.currentPassword != '')\n      passwordChanged = true;\n\n    this.profile_update_subscription = this._client.updateProfile(profile).subscribe({\n      next: (profile) => {\n        if (emailChanged || passwordChanged) {\n          if (emailChanged)\n            localStorage.setItem(\"emailChanged\", \"true\");\n          if (passwordChanged)\n            localStorage.setItem(\"passwordChanged\", \"true\");\n          this.logout();\n        } else {\n          this._transfer.changeProfile(profile);\n          this.openSuccessfulSnackbar();\n          localStorage.setItem(\"user-profile\", JSON.stringify(profile));\n          this.updateForm(profile);\n        }\n      },\n      error: (err) => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 400)\n            this.openUnsuccessfulSnackbar(err.error);\n          else\n            this.openUnsuccessfulSnackbar(\"An unexpected error occurred\");\n        }\n      }\n    })\n  }\n\n  /**\n   * Method to clear and update settings form\n   * @param profile update user profile\n   */\n  updateForm(profile: UserProfile) {\n    this.form.setValue({\n      email: profile.email,\n      nickname: profile.nickname,\n      firstname: profile.firstname,\n      lastname: profile.lastname,\n      currentPassword: '',\n      newPassword: '',\n      repeatNewPassword: ''\n    })\n  }\n\n  /**\n   * Opens successful snack bar\n   */\n  openSuccessfulSnackbar() {\n    const snackbarRef = this._snackBar.open('Your profile was successfully updated', '', {\n      duration: 5000,\n      panelClass: ['snackbar-success']\n    });\n\n  }\n\n  /**\n   * Opens unsuccessful snack bar\n   */\n  openUnsuccessfulSnackbar(message: string) {\n    const snackbarRef = this._snackBar.open(message, '', {\n      duration: 5000,\n      panelClass: ['snackbar-unsuccessful']\n    });\n  }\n}\n\n    \n\n    \n        \n  close\n\nProfile Settings\n\n   -->\n  {{data.role}}\n  {{data.firstname}} {{data.lastname}}\n\n\n  \n    \n      nickname\n      change\n    \n    \n  \n  \n    Username is required\n  \n\n  \n    \n      email\n      change\n    \n    \n  \n  \n    Email is required\n    Invalid email address\n  \n\n  \n    \n      firstname\n      change\n    \n    \n  \n  \n    Firstname is required\n  \n\n  \n    \n      lastname\n      change\n    \n    \n  \n  \n    Lastname is required\n  \n\n  \n    \n      current password\n      change\n    \n    \n  \n\n  \n    \n      new password\n      change\n    \n    \n  \n\n  \n    \n      repeat new password\n      change\n    \n    \n  \n\n  Save\n\n\n  Logout\n  logout\n\n\n    \n\n    \n                \n                    ./profile-settings.component.css\n                \n                .profileSettings{\n    display: flex;\n    flex-direction: column;\n    gap: 1.5rem;\n    min-width: 20vw;\n    padding: 0 2rem;\n    justify-content: center;\n    align-items: center;\n}\n\n.label{\n    display: flex;\n    flex-direction: row;\n    width: 100%;\n    justify-content: space-between;\n}\n\n.logout {\n  color: #FF0A0A !important;\n  display: flex;\n  gap: 1rem;\n  margin: 1.5rem 0;\n}\n\n.logout p, .logout mat-icon {\n  opacity: 0.6;\n}\n\n.error-content {\n  color: red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  closeProfile Settings   -->  {{data.role}}  {{data.firstname}} {{data.lastname}}            nickname      change                Username is required              email      change                Email is required    Invalid email address              firstname      change                Firstname is required              lastname      change                Lastname is required              current password      change                      new password      change                      repeat new password      change            Save  Logout  logout'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'ProfileSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfileUpdate.html":{"url":"classes/ProfileUpdate.html","title":"class - ProfileUpdate","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfileUpdate\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/profile-update.model.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                        UserProfile\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                currentPassword\n                            \n                            \n                                newPassword\n                            \n                            \n                                repeatNewPassword\n                            \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                groups\n                            \n                            \n                                id\n                            \n                            \n                                lastname\n                            \n                            \n                                nickname\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(init?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/profile-update.model.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        currentPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/profile-update.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        newPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/profile-update.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        repeatNewPassword\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/profile-update.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                Inherited from         UserProfile\n\n                            \n                        \n                    \n                        \n                                Defined in         UserProfile:6\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                Inherited from         UserProfile\n\n                            \n                        \n                    \n                        \n                                Defined in         UserProfile:8\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                        \n                            \n                                Inherited from         UserProfile\n\n                            \n                        \n                    \n                        \n                                Defined in         UserProfile:10\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                        \n                            \n                                Inherited from         UserProfile\n\n                            \n                        \n                    \n                        \n                                Defined in         UserProfile:4\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                Inherited from         UserProfile\n\n                            \n                        \n                    \n                        \n                                Defined in         UserProfile:9\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                Inherited from         UserProfile\n\n                            \n                        \n                    \n                        \n                                Defined in         UserProfile:5\n\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                        \n                            \n                                Inherited from         UserProfile\n\n                            \n                        \n                    \n                        \n                                Defined in         UserProfile:7\n\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {UserProfile} from \"./user-profile.model\";\n\nexport class ProfileUpdate extends UserProfile {\n  currentPassword: string = \"\";\n  newPassword: string = \"\";\n  repeatNewPassword: string = \"\"\n\n  public constructor(init?: Partial) {\n    super(init);\n    Object.assign(this, init);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/RegistrationComponent.html":{"url":"components/RegistrationComponent.html","title":"component - RegistrationComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  RegistrationComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/registration/registration.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as a registration form\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-registration\n            \n\n\n\n            \n                styleUrls\n                ./registration.component.css\n            \n\n\n\n            \n                templateUrl\n                ./registration.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                form\n                            \n                            \n                                groupsSubscription\n                            \n                            \n                                passwordsMatch\n                            \n                            \n                                registrationUserSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openSuccessfulSnackbar\n                            \n                            \n                                openUnsuccessfulSnackbar\n                            \n                            \n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    username\n                                \n                                \n                                    firstname\n                                \n                                \n                                    lastname\n                                \n                                \n                                    email\n                                \n                                \n                                    password\n                                \n                                \n                                    confirmPassword\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_client: BackendService, _snackBar: MatSnackBar, _router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/registration/registration.component.ts:35\n                            \n                        \n\n                \n                    \n                            Constructor for a component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BackendService instance that sends requests to a server\n\n                                                        \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening snack bars\n\n                                                        \n                                                \n                                                \n                                                        _router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router field to route between components\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/registration/registration.component.ts:115\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/registration/registration.component.ts:104\n                \n            \n\n\n            \n                \n                    Method that inits a registration form\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSuccessfulSnackbar\n                        \n                    \n                \n            \n            \n                \nopenSuccessfulSnackbar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/registration/registration.component.ts:150\n                \n            \n\n\n            \n                \n                    Opens successful snack bar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUnsuccessfulSnackbar\n                        \n                    \n                \n            \n            \n                \nopenUnsuccessfulSnackbar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/registration/registration.component.ts:164\n                \n            \n\n\n            \n                \n                    Opens unsuccessful snack bar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        register\n                        \n                    \n                \n            \n            \n                \nregister()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/registration/registration.component.ts:123\n                \n            \n\n\n            \n                \n                    Method to register a new user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/registration/registration.component.ts:23\n                        \n                    \n\n            \n                \n                    Represents a collection of form controls that are logically grouped together. It provides a convenient way to manage and validate multiple form controls as a single unit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupsSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/registration/registration.component.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        passwordsMatch\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : true\n                    \n                \n                    \n                        \n                                Defined in src/app/components/registration/registration.component.ts:28\n                        \n                    \n\n            \n                \n                    Field to know whether passwords match\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        registrationUserSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/registration/registration.component.ts:35\n                        \n                    \n\n            \n                \n                    Subscription to register a user\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        username\n                    \n                \n\n                \n                    \n                        getusername()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/registration/registration.component.ts:50\n                                \n                            \n                    \n                        \n                                Gets a username field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        firstname\n                    \n                \n\n                \n                    \n                        getfirstname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/registration/registration.component.ts:59\n                                \n                            \n                    \n                        \n                                Gets a firstname field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastname\n                    \n                \n\n                \n                    \n                        getlastname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/registration/registration.component.ts:68\n                                \n                            \n                    \n                        \n                                Gets a lastname field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/registration/registration.component.ts:77\n                                \n                            \n                    \n                        \n                                Gets an email field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        password\n                    \n                \n\n                \n                    \n                        getpassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/registration/registration.component.ts:86\n                                \n                            \n                    \n                        \n                                Gets a password field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        confirmPassword\n                    \n                \n\n                \n                    \n                        getconfirmPassword()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/registration/registration.component.ts:95\n                                \n                            \n                    \n                        \n                                Gets a confirmPassword field from a form group\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {RegistrationRequest} from \"../../models/registration-request.model\";\nimport {Subscription} from \"rxjs\";\nimport {BackendService} from \"../../services/backend.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {Router} from \"@angular/router\";\n\n/**\n * Component that is used as a registration form\n */\n@Component({\n  selector: 'app-registration',\n  templateUrl: './registration.component.html',\n  styleUrls: ['./registration.component.css']\n})\nexport class RegistrationComponent implements OnInit, OnDestroy {\n\n  /**\n   * Represents a collection of form controls that are logically grouped together. It provides a convenient way to manage and validate multiple form controls as a single unit.\n   */\n  // @ts-ignore\n  form: FormGroup;\n\n  /**\n   * Field to know whether passwords match\n   */\n  passwordsMatch: boolean = true;\n\n  groupsSubscription: Subscription = new Subscription();\n\n  /**\n   * Subscription to register a user\n   */\n  registrationUserSubscription: Subscription = new Subscription();\n\n  /**\n   * Constructor for a component\n   * @param _client BackendService instance that sends requests to a server\n   * @param _snackBar Angular Material component that uses for opening snack bars\n   * @param _router Router field to route between components\n   */\n  constructor(private _client: BackendService, private _snackBar: MatSnackBar,\n              private _router: Router) {\n  }\n\n  /**\n   * Gets a username field from a form group\n   */\n  get username() {\n    if (this.form)\n      return this.form.controls['username'];\n    return null;\n  }\n\n  /**\n   * Gets a firstname field from a form group\n   */\n  get firstname() {\n    if (this.form)\n      return this.form.controls['firstname'];\n    return null;\n  }\n\n  /**\n   * Gets a lastname field from a form group\n   */\n  get lastname() {\n    if (this.form)\n      return this.form.controls['lastname'];\n    return null;\n  }\n\n  /**\n   * Gets an email field from a form group\n   */\n  get email() {\n    if (this.form)\n      return this.form.controls['email'];\n    return null;\n  }\n\n  /**\n   * Gets a password field from a form group\n   */\n  get password() {\n    if (this.form)\n      return this.form.controls['password'];\n    return null;\n  }\n\n  /**\n   * Gets a confirmPassword field from a form group\n   */\n  get confirmPassword() {\n    if (this.form)\n      return this.form.controls['confirmPassword'];\n    return null;\n  }\n\n  /**\n   * Method that inits a registration form\n   */\n  ngOnInit(): void {\n    this.form = new FormGroup({\n      username: new FormControl('', [Validators.required]),\n      firstname: new FormControl('', [Validators.required]),\n      lastname: new FormControl('', [Validators.required]),\n      email: new FormControl('', [Validators.required, Validators.email]),\n      password: new FormControl('', [Validators.required]),\n      confirmPassword: new FormControl('', [Validators.required])\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.registrationUserSubscription.unsubscribe();\n    this.groupsSubscription.unsubscribe();\n  }\n\n  /**\n   * Method to register a new user\n   */\n  register() {\n    if (this.password?.value != this.confirmPassword?.value) {\n      this.passwordsMatch = false;\n      return;\n    }\n    let request: RegistrationRequest = new RegistrationRequest(\n      this.username?.value,\n      this.email?.value,\n      this.password?.value,\n      this.firstname?.value,\n      this.lastname?.value,\n    );\n    this.registrationUserSubscription = this._client.register(request).subscribe({\n      complete: () => {\n        this.form.reset({});\n        this.openSuccessfulSnackbar();\n      },\n      error: () => {\n        this.form.reset({});\n        this.openUnsuccessfulSnackbar();\n      }\n    })\n  }\n\n  /**\n   * Opens successful snack bar\n   */\n  openSuccessfulSnackbar() {\n    const snackbarRef = this._snackBar.open('Registration successful. Go to your mailbox to verify mail', 'Go to login', {\n      duration: 5000,\n    });\n\n    snackbarRef.onAction().subscribe(() => {\n      this._router.navigate([\"/login\"]).then(r => r);\n      this._snackBar.dismiss();\n    });\n  }\n\n  /**\n   * Opens unsuccessful snack bar\n   */\n  openUnsuccessfulSnackbar() {\n    this._snackBar.open('User with this email is already registered', '', {\n      duration: 5000,\n    });\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Registration\n        \n\n          \n            \n          \n          \n            Username is required\n          \n\n          \n            \n          \n          \n            Firstname is required\n          \n\n          \n            \n          \n          \n            Lastname is required\n          \n\n          \n            \n          \n          \n            Email is required\n            Invalid email address\n          \n\n          \n            \n          \n          \n            Password is required\n          \n\n          \n            \n          \n          \n            You have to confirm your password\n          \n          \n            Passwords do not match\n          \n\n        \n        Register\n      \n\n      \n        Already have an account ?\n        login\n      \n    \n  \n\n\n    \n\n    \n                \n                    ./registration.component.css\n                \n                .container {\n  width: 80%;\n  display: flex;\n  flex-direction: column;\n  margin: 0rem auto 0;\n}\n\n/* .card {\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.1);\n  border-radius: 2rem;\n  padding: 1.5rem;\n  background-color: white;\n  border: none;\n  min-width: 25vw;\n} */\n\n.center {\n  max-width: max-content;\n  padding: 3rem 3rem !important;\n  display: flex;\n  flex-direction: column;\n  gap: 3rem;\n  justify-content: center;\n  align-items: center;\n  width: 100%;\n  align-self: center;\n  margin: 0rem auto 0;\n}\n\nh3{\n  padding: 2rem 0 !important;\n  font-size: 1.5rem !important;\n}\n\n.boldText {\n  font-weight: 700;\n}\n\n.heading {\n  font-size: 1.3rem;\n\n  /* my changes */\n  /*margin: 1rem 0 !important;*/\n  margin-bottom: 50px;\n  margin-top: 20px;\n}\n\n.flex-col {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 1rem;\n}\n\ninput {\n  border: none;\n  background-color: white;\n  border-radius: 3rem;\n  padding: 0.7rem 1rem;\n  font-size: 0.8rem;\n  font-weight: 400;\n  text-align: left;\n  filter: drop-shadow(0px 10px 20px rgba(0, 0, 0, 0.1));\n\n  /*my changes*/\n  width: 13rem;\n  /*margin-bottom: 15px;*/\n}\n\n.mainButton {\n  max-width: fit-content;\n  border: none;\n  background-color: white;\n  border-radius: 3rem;\n  padding: 0.7rem 3rem;\n  /*color: var(--purple-color);*/\n  color: mediumpurple;\n  font-size: 0.8rem;\n  font-weight: 700;\n  filter: drop-shadow(0px 10px 20px rgba(0, 0, 0, 0.1));\n\n  /* my changes */\n  margin-top: 30px;\n}\n\n.secondaryButton {\n  width: 85%;\n  color: white;\n  /*background-color: var(--purple-color);*/\n  background-color: mediumpurple;\n}\n\n.center-form {\n  display: grid;\n  place-items: center;\n}\n\n.error-content {\n  color: red;\n}\n\n.snackbar-custom {\n  background-color: blue;\n}\n\n.snackbar-dismiss-icon {\n  position: absolute;\n  right: 0;\n  top: 0;\n  cursor: pointer;\n  font-size: 18px;\n}\n\na{\n  color: var(--purple-color) !important;\n  padding: 0;\n}\n\np{\n  margin: 0;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Registration                                                              Username is required                                                                Firstname is required                                                                Lastname is required                                                                Email is required            Invalid email address                                                                Password is required                                                                You have to confirm your password                                Passwords do not match                          Register                    Already have an account ?        login            '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'RegistrationComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegistrationRequest.html":{"url":"classes/RegistrationRequest.html","title":"class - RegistrationRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegistrationRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/registration-request.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                lastname\n                            \n                            \n                                nickname\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(nickname: string, email: string, password: string, firstname: string, lastname: string)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/registration-request.model.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        nickname\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        email\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        password\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        firstname\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        lastname\n                                                  \n                                                        \n                                                                        string\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/registration-request.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/registration-request.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/registration-request.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/registration-request.model.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/registration-request.model.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class RegistrationRequest {\n  nickname: string;\n  email: string;\n  password: string;\n  firstname: string;\n  lastname: string;\n\n  constructor(nickname: string, email: string, password: string, firstname: string, lastname: string) {\n    this.nickname = nickname;\n    this.email = email;\n    this.password = password;\n    this.firstname = firstname;\n    this.lastname = lastname;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"guards/RoleGuard.html":{"url":"guards/RoleGuard.html","title":"guard - RoleGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n    Guards\n    RoleGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n        \n            \n            File\n            \n            \n                src/app/components/auth/role.guard.ts\n            \n\n\n                \n                Description\n                \n                \n                    Guard to validate whether resource is available or not with user role\n\n                \n\n\n\n\n                \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n                \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/auth/role.guard.ts:11\n                            \n                        \n\n                \n                    \n                            Constructor for a guard\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router field to route between components\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n                \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(route: ActivatedRouteSnapshot)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/auth/role.guard.ts:25\n                \n            \n\n\n            \n                \n                    Override method that checks whether the component can be activated or not based on\nuser role\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    route\n                                    \n                                            ActivatedRouteSnapshot\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        ActivatedRouteSnapshot instance\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n        \n\n\n        \n            import {Injectable} from '@angular/core';\nimport {ActivatedRouteSnapshot, CanActivate, Router} from '@angular/router';\nimport {UserProfile} from \"../../models/user-profile.model\";\n\n/**\n * Guard to validate whether resource is available or not with user role\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class RoleGuard implements CanActivate {\n\n  /**\n   * Constructor for a guard\n   * @param router Router field to route between components\n   */\n  constructor(private router: Router) {\n  }\n\n  /**\n   * Override method that checks whether the component can be activated or not based on\n   * user role\n   * @param route ActivatedRouteSnapshot instance\n   */\n  canActivate(route: ActivatedRouteSnapshot): boolean {\n    const expectedRoles = route.data['expectedRoles'];\n    const profile_json = localStorage.getItem('user-profile');\n    if (profile_json === null) {\n      return false;\n    }\n    const userProfile = JSON.parse(profile_json) as UserProfile;\n\n    if (!expectedRoles.includes(userProfile.role)) {\n      this.router.navigate(['/home']).then(r => r);\n      return false;\n    }\n\n    return true;\n  }\n}\n\n        \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScenarioPreview.html":{"url":"classes/ScenarioPreview.html","title":"class - ScenarioPreview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScenarioPreview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/scenario-preview.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                languages\n                            \n                            \n                                name\n                            \n                            \n                                photos\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(init?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/scenario-preview.model.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/scenario-preview.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/scenario-preview.model.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        languages\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/scenario-preview.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/scenario-preview.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photos\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/scenario-preview.model.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ScenarioPreview {\n  id: number = 0;\n  name: string = \"\";\n  description: string = \"\";\n  languages: string[] = [];\n  photos: string[] = [];\n\n  public constructor(init?: Partial) {\n    Object.assign(this, init);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/SceneComponent.html":{"url":"components/SceneComponent.html","title":"component - SceneComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  SceneComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/tasks/scenes/muzeum_extended/scene.component.ts\n\n\n\n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-scene\n            \n\n\n\n            \n                styleUrls\n                ./scene.component.css\n            \n\n\n\n            \n                templateUrl\n                ./scene.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                language\n                            \n                            \n                                    \n                                scene\n                            \n                            \n                                task_files_subscription\n                            \n                            \n                                taskFiles\n                            \n                            \n                                taskId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getTaskFiles\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_route: ActivatedRoute, _client: BackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/tasks/scenes/muzeum_extended/scene.component.ts:35\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getTaskFiles\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTaskFiles()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/tasks/scenes/muzeum_extended/scene.component.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tasks/scenes/muzeum_extended/scene.component.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :     ElementRef\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('scene')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/tasks/scenes/muzeum_extended/scene.component.ts:28\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        task_files_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tasks/scenes/muzeum_extended/scene.component.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskFiles\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskFiles\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tasks/scenes/muzeum_extended/scene.component.ts:34\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/tasks/scenes/muzeum_extended/scene.component.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, ElementRef, ViewChild} from '@angular/core';\n\nimport '../../js/components/collisionDetectorEventHandler.component.js';\nimport '../../js/components/toggleInfo.component.js';\nimport '../../js/components/clkMultiEventHandler.component.js';\nimport '../../js/components/clkSingleEventHandler.component.js';\nimport '../../js/components/petriNetSim.component.js';\nimport '../../js/components/sceneLanguage.component.js';\nimport '../../js/components/label.component.js';\nimport '../../js/components/toggleLabelVisibility.component.js';\nimport '../../js/components/userDashboard.component.js';\nimport {TaskFiles} from \"../../../../models/task-files.model\";\nimport {ActivatedRoute} from \"@angular/router\";\nimport {BackendService} from \"../../../../services/backend.service\";\nimport {Subscription} from \"rxjs\";\nimport {TaskRequest} from \"../../../../models/task-request.model\";\n\nimport {transitions, places} from \"./scripts/sceneScript\";\n\n\n@Component({\n  selector: 'app-scene',\n  templateUrl: './scene.component.html',\n  styleUrls: ['./scene.component.css']\n})\nexport class SceneComponent {\n\n  @ViewChild('scene') scene!: ElementRef;\n\n  // @ts-ignore\n  taskId: number;\n  language: string = \"\";\n  // @ts-ignore\n  taskFiles: TaskFiles\n  task_files_subscription: Subscription = new Subscription();\n\n\n  constructor(private _route: ActivatedRoute, private _client: BackendService) {\n\n    this._route.params.subscribe(params => {\n      this.taskId = params['taskId'];\n      this.language = params['language'];\n\n      this.getTaskFiles();\n    })\n\n    // @ts-ignore\n    window.transitions = transitions;\n    // @ts-ignore\n    window.places = places;\n  }\n\n  private getTaskFiles() {\n    // @ts-ignore\n    let request: TaskRequest = new TaskRequest({\n      taskId: this.taskId,\n      language: this.language\n    })\n    console.log(request);\n    this.task_files_subscription = this._client.getTaskFiles(request).subscribe(data => {\n      this.taskFiles = data as TaskFiles;\n      TaskFiles.decode(this.taskFiles);\n\n      if (this.taskFiles) {\n        // attach petri net sim component to the scene\n        const petriNetSimAttr = {\n          pnmlFile: this.taskFiles.pnmlFile,\n          taskId: this.taskId\n        };\n        this.scene.nativeElement.setAttribute('petri-net-sim', petriNetSimAttr);\n\n        // attach language component to the scene\n        this.scene.nativeElement.setAttribute('language', `languageFile: ${this.taskFiles.languageFile}`)\n      }\n\n    })\n  }\n}\n\n    \n\n    \n        \n  \n  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n\n    \n    \n    \n    \n    \n    \n    \n  \n\n  \n  \n  \n\n  \n  \n    \n      \n      \n    \n    \n    \n  \n\n  \n  \n  \n\n\n  \n  \n    \n    \n    \n    \n    \n    \n    \n    \n    \n    \n  \n\n  \n    \n    \n    \n    \n  \n\n  \n    \n    \n    \n    \n  \n\n\n\n\n\n\n-->\n-->\n  \n  \n\n\n\n\n\n\n-->\n\n\n\n\n\n-->\n\n\n\n\n\n-->\n\n  \n    \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n  \n  \n  \n  \n    \n    \n    \n    \n    \n    \n  \n\n  \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n  \n  \n\n  \n    \n    \n    \n    \n    \n    \n  \n\n  \n    \n    \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n    \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n    \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n    \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n-->\n\n\n\n\n-->\n\n\n\n\n-->\n\n\n\n-->\n\n\n\n\n-->\n\n\n\n\n-->\n\n\n\n\n-->\n-->\n\n  \n  \n\n  \n  \n\n  \n    \n    \n    \n    \n    \n    \n  \n\n  \n  \n  \n\n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n\n  \n    \n    \n    \n    \n    \n    \n  \n\n  \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n\n    \n  \n  \n\n  \n  \n  \n\n  \n  \n  \n\n  \n    \n    \n    \n    \n    \n  \n\n  \n    \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n  \n\n  \n  \n\n  \n  \n\n  \n  \n\n  \n    \n  \n\n  \n    \n      \n        \n        \n        \n        \n      \n    \n  \n\n  \n    \n  \n\n  \n    \n      \n        \n        \n        \n        \n      \n    \n  \n\n  \n    \n  \n\n  \n    \n      \n        \n        \n        \n        \n      \n    \n  \n\n  \n    \n  \n\n  \n    \n      \n        \n        \n        \n        \n      \n    \n  \n\n  \n  \n  \n  \n    \n    \n    \n    \n    \n    \n  \n\n  \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n  \n  \n\n  \n    \n    \n    \n    \n    \n    \n  \n\n  \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n    \n      \n      \n      \n        \n          \n          \n          \n          \n        \n      \n    \n  \n\n  \n  \n  \n\n\n\n\n\n\n\n-->\n\n\n\n\n\n\n\n-->\n-->\n\n\n\n\n\n\n\n-->\n-->\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n-->\n-->\n\n  \n    \n    \n    \n    \n    \n    \n  \n\n  \n    \n      \n      \n      \n        \n      \n    \n    \n      \n      \n      \n        \n      \n    \n    \n      \n      \n      \n        \n      \n    \n\n    \n      \n      \n      \n        \n      \n    \n\n    \n      \n      \n      \n        \n      \n    \n\n    \n      \n      \n      \n        \n      \n    \n  \n\n\n\n    \n\n    \n                \n                    ./scene.component.css\n                \n                \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        varn    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'SceneComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ScenePreview.html":{"url":"classes/ScenePreview.html","title":"class - ScenePreview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ScenePreview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/scene-preview.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                folderName\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                photo\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(init?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/scene-preview.model.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/scene-preview.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        folderName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/scene-preview.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/scene-preview.model.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/scene-preview.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        photo\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/scene-preview.model.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class ScenePreview {\n  id: number = 0;\n  name: string = \"\";\n  description: string = \"\";\n  photo: string = \"\";\n  folderName: string = \"\";\n\n  public constructor(init?: Partial) {\n    Object.assign(this, init);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskCreation.html":{"url":"classes/TaskCreation.html","title":"class - TaskCreation","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskCreation\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/task-creation.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                            \n                                scenarioId\n                            \n                            \n                                sceneId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(init?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/task-creation.model.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-creation.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-creation.model.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scenarioId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-creation.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sceneId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-creation.model.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TaskCreation {\n  name: string = \"\"\n  description: string = \"\";\n  scenarioId: number = 0;\n  sceneId: number = 0;\n\n  public constructor(init?: Partial) {\n    Object.assign(this, init);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskFiles.html":{"url":"classes/TaskFiles.html","title":"class - TaskFiles","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskFiles\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/task-files.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                languageFile\n                            \n                            \n                                pnmlFile\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Static\n                                decode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(init?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/task-files.model.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        languageFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-files.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        pnmlFile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-files.model.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        decode\n                        \n                    \n                \n            \n            \n                \n                    \n                    decode(taskFiles: TaskFiles)\n                \n            \n\n\n            \n                \n                    Defined in src/app/models/task-files.model.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    taskFiles\n                                    \n                                                TaskFiles\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {Buffer} from 'buffer';\n\nexport class TaskFiles {\n  pnmlFile: string = \"\";\n  languageFile: string = \"\";\n\n  public constructor(init?: Partial) {\n    Object.assign(this, init);\n  }\n\n  public static decode(taskFiles: TaskFiles) {\n    taskFiles.pnmlFile = Buffer.from(taskFiles.pnmlFile, 'base64').toString('utf-8')\n    taskFiles.languageFile = Buffer.from(taskFiles.languageFile, 'base64').toString('utf-8')\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskHistoryComponent.html":{"url":"components/TaskHistoryComponent.html","title":"component - TaskHistoryComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskHistoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/task-history/task-history.component.ts\n\n\n\n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-history\n            \n\n\n\n            \n                styleUrls\n                ./task-history.component.css\n            \n\n\n\n            \n                templateUrl\n                ./task-history.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firring_attempts_subscription\n                            \n                            \n                                firringAttempts\n                            \n                            \n                                sessionId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_route: ActivatedRoute, _client: BackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/task-history/task-history.component.ts:25\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        _route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/task-history/task-history.component.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/task-history/task-history.component.ts:40\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firring_attempts_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-history/task-history.component.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firringAttempts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FiringAttempt[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-history/task-history.component.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sessionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-history/task-history.component.ts:25\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {BackendService} from \"../../services/backend.service\";\nimport {Subscription} from \"rxjs\";\nimport {ActivatedRoute} from \"@angular/router\";\n\n// TODO: add get also time when each transition was fired\ninterface FiringAttempt {\n  action: string;\n  actionFound: boolean;\n  successful: boolean;\n  actionTargets: string[];\n}\n\n@Component({\n  selector: 'app-task-history',\n  templateUrl: './task-history.component.html',\n  styleUrls: ['./task-history.component.css']\n})\nexport class TaskHistoryComponent implements OnInit, OnDestroy{\n\n  firring_attempts_subscription: Subscription = new Subscription();\n  // @ts-ignore\n  firringAttempts: FiringAttempt[];\n  // @ts-ignore\n  sessionId: number;\n\n  // TODO: get info about task (task name)\n  // TODO: get session duration and if session was successfull or not\n\n  constructor(private _route: ActivatedRoute, private _client: BackendService,) {\n    this._route.params.subscribe(params => {\n      this.sessionId = params['sessionId'];\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.firring_attempts_subscription.unsubscribe();\n  }\n\n  ngOnInit(): void {\n    this.firring_attempts_subscription = this._client.getFiringAttempts(this.sessionId).subscribe(data => {\n      this.firringAttempts = data as [];\n    })\n  }\n\n\n}\n\n    \n\n    \n        \n  \n    \n      \n        Task history\n        Task history\n      \n    \n\n    \n      \n        TEST DURATION\n        32min 45sec\n      \n\n      \n        \n          \n          TRANSITION NAME\n          FIRED AT\n          SUCCESSFULL\n        \n\n        \n           #{{i + 1}}\n          {{firringAttempt.action}}\n          {{firringAttempt.action}}\n          {{firringAttempt.successful}}\n        \n      \n      close\n    \n  \n\n\n    \n\n    \n                \n                    ./task-history.component.css\n                \n                .results{\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 2rem;\n}\n\ntable{\n  min-width: 100%;\n  table-layout: fixed;\n}\n\ntd, th{\n  vertical-align: middle;\n  text-align: center;\n  border-bottom: 0.5px solid rgba(30, 30, 30, 0.1);\n  padding: 0.5rem;\n}\n\n.welcomeAndProfile {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: 2rem;\n  padding-top: 5rem;\n}\n\n.profile {\n  display: flex;\n  flex-direction: row;\n  gap: 0.5rem;\n  text-align: right;\n  align-items: flex-start;\n  height: 70%;\n}\n\n.container{\n  justify-content: flex-start !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Task history        Task history                            TEST DURATION        32min 45sec                                        TRANSITION NAME          FIRED AT          SUCCESSFULL                           #{{i + 1}}          {{firringAttempt.action}}          {{firringAttempt.action}}          {{firringAttempt.successful}}                    close      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskHistoryComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskHistoryComponent-1.html":{"url":"components/TaskHistoryComponent-1.html","title":"component - TaskHistoryComponent-1","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskHistoryComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/task-his/task-history/task-history.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as a page contains history of a completed task\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-history\n            \n\n\n\n            \n                styleUrls\n                ./task-history.component.css\n            \n\n\n\n            \n                templateUrl\n                ./task-history.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                duration\n                            \n                            \n                                extended_open\n                            \n                            \n                                firring_attempts_subscription\n                            \n                            \n                                firringAttempts\n                            \n                            \n                                from\n                            \n                            \n                                loaded\n                            \n                            \n                                sessionData\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                change_status\n                            \n                            \n                                close\n                            \n                            \n                                countDuration\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, _client: BackendService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/task-his/task-history/task-history.component.ts:63\n                            \n                        \n\n                \n                    \n                            Constructor for a component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router field to route between components\n\n                                                        \n                                                \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BackendService instance that sends requests to a server\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        change_status\n                        \n                    \n                \n            \n            \n                \nchange_status()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/task-his/task-history/task-history.component.ts:116\n                \n            \n\n\n            \n                \n                    Changes status whether extended statistics was opened or not\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        close\n                        \n                    \n                \n            \n            \n                \nclose()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/task-his/task-history/task-history.component.ts:123\n                \n            \n\n\n            \n                \n                    Close current page and redirects to the previous one depends on \"from\" field\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        countDuration\n                        \n                    \n                \n            \n            \n                \ncountDuration()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/task-his/task-history/task-history.component.ts:91\n                \n            \n\n\n            \n                \n                    Method to count duration of a session from milliseconds to a \"hh:MM:ss\" format\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/task-his/task-history/task-history.component.ts:109\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/task-his/task-history/task-history.component.ts:81\n                \n            \n\n\n            \n                \n                    Method that fetch firing attempts of a current session\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        duration\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-his/task-history/task-history.component.ts:48\n                        \n                    \n\n            \n                \n                    Duration of a session\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        extended_open\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-his/task-history/task-history.component.ts:53\n                        \n                    \n\n            \n                \n                    Whether extended page of a session was open\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firring_attempts_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-his/task-history/task-history.component.ts:37\n                        \n                    \n\n            \n                \n                    Subscription to fetch firing attempts of a current task session\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firringAttempts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FiringAttempt[]\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-his/task-history/task-history.component.ts:32\n                        \n                    \n\n            \n                \n                    List of firing attempts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-his/task-history/task-history.component.ts:63\n                        \n                    \n\n            \n                \n                    Contains information from which component this component was opened\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loaded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-his/task-history/task-history.component.ts:58\n                        \n                    \n\n            \n                \n                    Whether data was already loaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sessionData\n                        \n                    \n                \n            \n                \n                    \n                        Type :         TaskSessionInfo\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-his/task-history/task-history.component.ts:43\n                        \n                    \n\n            \n                \n                    Information about completed session\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {BackendService} from \"../../../services/backend.service\";\nimport {Router} from \"@angular/router\";\nimport {TaskSessionInfo} from \"../../../models/task-session-info.model\";\nimport {Subscription} from \"rxjs\";\n\n/**\n * Object that defines actions of user in tasks\n */\ninterface FiringAttempt {\n  action: string;\n  actionFound: boolean;\n  successful: boolean;\n  actionTargets: string[];\n  firedAt: Date;\n}\n\n/**\n * Component that is used as a page contains history of a completed task\n */\n@Component({\n  selector: 'app-task-history',\n  templateUrl: './task-history.component.html',\n  styleUrls: ['./task-history.component.css']\n})\nexport class TaskHistoryComponent implements OnInit, OnDestroy {\n\n  /**\n   * List of firing attempts\n   */\n  // @ts-ignore\n  firringAttempts: FiringAttempt[];\n\n  /**\n   * Subscription to fetch firing attempts of a current task session\n   */\n  firring_attempts_subscription: Subscription = new Subscription();\n  // @ts-ignore\n\n  /**\n   * Information about completed session\n   */\n  sessionData: TaskSessionInfo;\n\n  /**\n   * Duration of a session\n   */\n  duration: string = \"\";\n\n  /**\n   * Whether extended page of a session was open\n   */\n  extended_open: boolean = false;\n\n  /**\n   * Whether data was already loaded\n   */\n  loaded: boolean = false;\n\n  /**\n   * Contains information from which component this component was opened\n   */\n  from: string = \"\";\n\n  /**\n   * Constructor for a component\n   * @param _client BackendService instance that sends requests to a server\n   * @param router Router field to route between components\n   */\n  constructor(private router: Router, private _client: BackendService,) {\n    // @ts-ignore\n    this.sessionData = this.router.getCurrentNavigation().extras.state.data as TaskSessionInfo;\n    // @ts-ignore\n    this.from = this.router.getCurrentNavigation().extras.state.from as string;\n    this.countDuration()\n  }\n\n  /**\n   * Method that fetch firing attempts of a current session\n   */\n  ngOnInit(): void {\n    this.firring_attempts_subscription = this._client.getFiringAttempts(this.sessionData.id).subscribe(data => {\n      this.firringAttempts = data as [];\n      this.loaded = true;\n    })\n  }\n\n  /**\n   * Method to count duration of a session from milliseconds to a \"hh:MM:ss\" format\n   */\n  countDuration(): void {\n    const startedAt = this.sessionData.startedAt;\n    const finishedAt = this.sessionData.finishedAt;\n\n    const durationInMs = new Date(finishedAt).getTime() - new Date(startedAt).getTime();\n    const hours = Math.floor(durationInMs / (1000 * 60 * 60));\n    const minutes = Math.floor((durationInMs % (1000 * 60 * 60)) / (1000 * 60));\n    const seconds = Math.floor((durationInMs % (1000 * 60)) / 1000);\n\n    if (hours > 0) {\n      this.duration += `${hours} h `;\n    }\n    if (minutes > 0 || hours === 0) {\n      this.duration += `${minutes} min `;\n    }\n    this.duration += `${seconds} sec`;\n  }\n\n  ngOnDestroy(): void {\n    this.firring_attempts_subscription.unsubscribe();\n  }\n\n  /**\n   * Changes status whether extended statistics was opened or not\n   */\n  change_status() {\n    this.extended_open = !this.extended_open;\n  }\n\n  /**\n   * Close current page and redirects to the previous one depends on \"from\" field\n   */\n  close() {\n    if (this.from === 'profile') {\n      this.router.navigate([\"/user/profile\"]).then();\n    } else if (this.from === 'dashboard') {\n      this.router.navigate([\"/dashboard/groups-history\"]).then();\n    }\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        USER NAME\n        {{sessionData.userName}}\n        TASK NAME\n        {{sessionData.taskName}}\n        START OF THE TASK\n        {{sessionData.startedAt | date: \"dd/MM/yyyy HH:mm\"}}\n        FINISH OF THE TASK\n        {{sessionData.finishedAt | date: \"dd/MM/yyyy HH:mm\"}}\n        WAS FINISHED SUCCESSFULLY\n        Yes\n        No\n      \n    \n\n    \n      TEST DURATION\n      {{duration}}\n    \n\n    \n    \n\n    \n      View extended\n      View statistics\n      close\n    \n  \n\n\n    \n\n    \n                \n                    ./task-history.component.css\n                \n                .results {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 2rem;\n}\n\n.buttons {\n  width: 100%;\n  margin: 0 2rem;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-content: center;\n  gap: 1rem;\n}\n\n.welcomeAndProfile {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  padding-bottom: 2rem;\n  padding-top: 5rem;\n}\n\n.profile {\n  display: flex;\n  flex-direction: row;\n  gap: 0.5rem;\n  text-align: right;\n  align-items: flex-start;\n  height: 70%;\n}\n\n.container {\n  justify-content: flex-start !important;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    USER NAME        {{sessionData.userName}}        TASK NAME        {{sessionData.taskName}}        START OF THE TASK        {{sessionData.startedAt | date: \"dd/MM/yyyy HH:mm\"}}        FINISH OF THE TASK        {{sessionData.finishedAt | date: \"dd/MM/yyyy HH:mm\"}}        WAS FINISHED SUCCESSFULLY        Yes        No                    TEST DURATION      {{duration}}                      View extended      View statistics      close      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskHistoryComponent-1'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskHistoryExtendedComponent.html":{"url":"components/TaskHistoryExtendedComponent.html","title":"component - TaskHistoryExtendedComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskHistoryExtendedComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/task-his/task-history-extended/task-history-extended.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as extended page with statistics of a task session\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-history-extended\n            \n\n\n\n            \n                styleUrls\n                ./task-history-extended.component.css\n            \n\n\n\n            \n                templateUrl\n                ./task-history-extended.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                current_attempts\n                            \n                            \n                                items_per_page\n                            \n                            \n                                max_pages\n                            \n                            \n                                page\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                next_attempts\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                prev_attempts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                firringAttempts\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        firringAttempts\n                    \n                \n                \n                    \n                        Type :     FiringAttempt[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/task-his/task-history-extended/task-history-extended.component.ts:25\n                            \n                        \n                \n                    \n                        List with a firing attempts of a task session\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        next_attempts\n                        \n                    \n                \n            \n            \n                \nnext_attempts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/task-his/task-history-extended/task-history-extended.component.ts:67\n                \n            \n\n\n            \n                \n                    Moves to the next page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/task-his/task-history-extended/task-history-extended.component.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/task-his/task-history-extended/task-history-extended.component.ts:50\n                \n            \n\n\n            \n                \n                    Method to init max_pages and current_attempts fields\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        prev_attempts\n                        \n                    \n                \n            \n            \n                \nprev_attempts()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/task-his/task-history-extended/task-history-extended.component.ts:58\n                \n            \n\n\n            \n                \n                    Moves to the previous page\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        current_attempts\n                        \n                    \n                \n            \n                \n                    \n                        Type :     FiringAttempt[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-his/task-history-extended/task-history-extended.component.ts:30\n                        \n                    \n\n            \n                \n                    List with a current firing attempts on the current page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        items_per_page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 10\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-his/task-history-extended/task-history-extended.component.ts:45\n                        \n                    \n\n            \n                \n                    Items per page\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        max_pages\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-his/task-history-extended/task-history-extended.component.ts:35\n                        \n                    \n\n            \n                \n                    Total pages of the firing attempts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        page\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-his/task-history-extended/task-history-extended.component.ts:40\n                        \n                    \n\n            \n                \n                    Current page\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnDestroy, OnInit} from '@angular/core';\n\ninterface FiringAttempt {\n  action: string;\n  actionFound: boolean;\n  successful: boolean;\n  actionTargets: string[];\n  firedAt: Date;\n}\n\n/**\n * Component that is used as extended page with statistics of a task session\n */\n@Component({\n  selector: 'app-task-history-extended',\n  templateUrl: './task-history-extended.component.html',\n  styleUrls: ['./task-history-extended.component.css']\n})\nexport class TaskHistoryExtendedComponent implements OnInit, OnDestroy {\n\n  /**\n   * List with a firing attempts of a task session\n   */\n  // @ts-ignore\n  @Input() firringAttempts: FiringAttempt[];\n\n  /**\n   * List with a current firing attempts on the current page\n   */\n  current_attempts: FiringAttempt[] = [];\n\n  /**\n   * Total pages of the firing attempts\n   */\n  max_pages: number = 0;\n\n  /**\n   * Current page\n   */\n  page: number = 0;\n\n  /**\n   * Items per page\n   */\n  items_per_page: number = 10;\n\n  /**\n   * Method to init max_pages and current_attempts fields\n   */\n  ngOnInit(): void {\n    this.max_pages = Math.ceil(this.firringAttempts.length / this.items_per_page);\n    this.current_attempts = this.firringAttempts.slice(0, Math.min(this.firringAttempts.length, this.items_per_page));\n  }\n\n  /**\n   * Moves to the previous page\n   */\n  prev_attempts() {\n    this.page--;\n    this.current_attempts = this.firringAttempts.slice(this.page * this.items_per_page,\n      Math.min(this.firringAttempts.length, (this.page + 1) * this.items_per_page));\n  }\n\n  /**\n   * Moves to the next page\n   */\n  next_attempts() {\n    this.page++;\n    this.current_attempts = this.firringAttempts.slice(this.page * this.items_per_page,\n      Math.min(this.firringAttempts.length, (this.page + 1) * this.items_per_page));\n  }\n\n  ngOnDestroy(): void {\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n      TRANSITION NAME\n      FIRED AT\n      SUCCESSFUL\n    \n\n    \n       #{{i + 1 + page * items_per_page}}\n      {{firringAttempt.action}}\n      {{firringAttempt.firedAt | date:'yyyy-MM-dd HH:mm:ss'}}\n      {{firringAttempt.successful}}\n    \n  \n\n  \n    \n      navigate_before\n    \n\n    = max_pages - 1\" mat-icon-button>\n      navigate_next\n    \n  \n\n\n    \n\n    \n                \n                    ./task-history-extended.component.css\n                \n                .results {\n  width: 100%;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  gap: 2rem;\n}\n\ntable {\n  min-width: 100%;\n  table-layout: fixed;\n}\n\ntd, th {\n  vertical-align: middle;\n  text-align: center;\n  border-bottom: 0.5px solid rgba(30, 30, 30, 0.1);\n  padding: 0.5rem;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                  TRANSITION NAME      FIRED AT      SUCCESSFUL               #{{i + 1 + page * items_per_page}}      {{firringAttempt.action}}      {{firringAttempt.firedAt | date:\\'yyyy-MM-dd HH:mm:ss\\'}}      {{firringAttempt.successful}}                  navigate_before        = max_pages - 1\" mat-icon-button>      navigate_next      '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskHistoryExtendedComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/TaskHistoryStatisticsComponent.html":{"url":"components/TaskHistoryStatisticsComponent.html","title":"component - TaskHistoryStatisticsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  TaskHistoryStatisticsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/task-his/task-history-statistics/task-history-statistics.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as basic page with a task session statistics\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-task-history-statistics\n            \n\n\n\n            \n                styleUrls\n                ./task-history-statistics.component.css\n            \n\n\n\n            \n                templateUrl\n                ./task-history-statistics.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                correctAttempts\n                            \n                            \n                                incorrectAttempts\n                            \n                            \n                                percentage\n                            \n                            \n                                totalAttempts\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n                \n                    \n                        Inputs\n                    \n                \n                \n                    \n                        \n                            \n                                firringAttempts\n                            \n                        \n                    \n                \n\n\n\n\n        \n    \n\n\n\n    \n    Inputs\n        \n            \n                \n                    \n                        \n                        firringAttempts\n                    \n                \n                \n                    \n                        Type :     FiringAttempt[]\n\n                    \n                \n                        \n                            \n                                    Defined in src/app/components/task-his/task-history-statistics/task-history-statistics.component.ts:25\n                            \n                        \n                \n                    \n                        List with a firing attempts of a task session\n\n                    \n                \n            \n        \n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/task-his/task-history-statistics/task-history-statistics.component.ts:50\n                \n            \n\n\n            \n                \n                    Method that counts necessary statistics variables\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        correctAttempts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-his/task-history-statistics/task-history-statistics.component.ts:35\n                        \n                    \n\n            \n                \n                    Amount of correct attempts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        incorrectAttempts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-his/task-history-statistics/task-history-statistics.component.ts:40\n                        \n                    \n\n            \n                \n                    Amount of incorrect attempts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        percentage\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-his/task-history-statistics/task-history-statistics.component.ts:45\n                        \n                    \n\n            \n                \n                    Percentage of correct attempts\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        totalAttempts\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/components/task-his/task-history-statistics/task-history-statistics.component.ts:30\n                        \n                    \n\n            \n                \n                    Total attempts (Amount of firing attempts)\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, Input, OnInit} from '@angular/core';\n\ninterface FiringAttempt {\n  action: string;\n  actionFound: boolean;\n  successful: boolean;\n  actionTargets: string[];\n  firedAt: Date;\n}\n\n/**\n * Component that is used as basic page with a task session statistics\n */\n@Component({\n  selector: 'app-task-history-statistics',\n  templateUrl: './task-history-statistics.component.html',\n  styleUrls: ['./task-history-statistics.component.css']\n})\nexport class TaskHistoryStatisticsComponent implements OnInit {\n\n  /**\n   * List with a firing attempts of a task session\n   */\n  // @ts-ignore\n  @Input() firringAttempts: FiringAttempt[];\n\n  /**\n   * Total attempts (Amount of firing attempts)\n   */\n  totalAttempts: number = 0;\n\n  /**\n   * Amount of correct attempts\n   */\n  correctAttempts: number = 0;\n\n  /**\n   * Amount of incorrect attempts\n   */\n  incorrectAttempts: number = 0;\n\n  /**\n   * Percentage of correct attempts\n   */\n  percentage: number = 0;\n\n  /**\n   * Method that counts necessary statistics variables\n   */\n  ngOnInit() {\n    this.totalAttempts = this.firringAttempts.length;\n    this.firringAttempts.forEach(f => {\n      if (f.successful) {\n        this.correctAttempts++;\n      } else {\n        this.incorrectAttempts++;\n      }\n    })\n    this.percentage = this.correctAttempts / this.totalAttempts * 100;\n  }\n}\n\n    \n\n    \n        \n  \n    TOTAL FIRING ATTEMPTS\n    {{totalAttempts}}\n  \n\n  \n    CORRECT FIRING ATTEMPTS\n    {{correctAttempts}}\n  \n\n  \n    INCORRECT FIRING ATTEMPTS\n    {{incorrectAttempts}}\n  \n\n  \n    PERCENTAGE OF CORRECT ATTEMPTS\n    {{percentage}}%\n  \n\n\n    \n\n    \n                \n                    ./task-history-statistics.component.css\n                \n                .dashboard {\n  margin: 2rem 0;\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: center;\n  flex-wrap: wrap;\n  gap: 1rem;\n}\n\n.dashboard .card {\n  min-width: auto !important;\n  max-width: 20vw;\n  justify-content: space-between;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      TOTAL FIRING ATTEMPTS    {{totalAttempts}}        CORRECT FIRING ATTEMPTS    {{correctAttempts}}        INCORRECT FIRING ATTEMPTS    {{incorrectAttempts}}        PERCENTAGE OF CORRECT ATTEMPTS    {{percentage}}%  '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'TaskHistoryStatisticsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskNames.html":{"url":"classes/TaskNames.html","title":"class - TaskNames","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskNames\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/task-names.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(init?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/task-names.model.ts:4\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-names.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-names.model.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TaskNames {\n\n  id: number = 0;\n  name: string = \"\";\n\n  public constructor(init?: Partial) {\n    Object.assign(this, init);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskPreview.html":{"url":"classes/TaskPreview.html","title":"class - TaskPreview","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskPreview\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/task-preview.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                            \n                                openSessions\n                            \n                            \n                                scenario\n                            \n                            \n                                scene\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(init?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/task-preview.model.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-preview.model.ts:7\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-preview.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-preview.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSessions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     number[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-preview.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scenario\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScenarioPreview\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-preview.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        scene\n                        \n                    \n                \n            \n                \n                    \n                        Type :         ScenePreview\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-preview.model.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {ScenarioPreview} from \"./scenario-preview.model\";\nimport {ScenePreview} from \"./scene-preview.model\";\n\nexport class TaskPreview {\n  id: number = 0;\n  name: string = \"\"\n  description: string = \"\";\n  // @ts-ignore\n  scenario: ScenarioPreview;\n  // @ts-ignore\n  scene: ScenePreview;\n  openSessions: number[] = [];\n\n  public constructor(init?: Partial) {\n    Object.assign(this, init);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskRequest.html":{"url":"classes/TaskRequest.html","title":"class - TaskRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/task-request.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                language\n                            \n                            \n                                taskId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(init?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/task-request.model.ts:3\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        language\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-request.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-request.model.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TaskRequest {\n  taskId: number = 0;\n  language: string = \"\";\n\n  public constructor(init?: Partial) {\n    Object.assign(this, init);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskSessionFinishRequest.html":{"url":"classes/TaskSessionFinishRequest.html","title":"class - TaskSessionFinishRequest","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskSessionFinishRequest\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/task-session-finish-request.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                finishTime\n                            \n                            \n                                successful\n                            \n                            \n                                taskSessionId\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(init?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/task-session-finish-request.model.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        finishTime\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-session-finish-request.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successful\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-session-finish-request.model.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskSessionId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-session-finish-request.model.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TaskSessionFinishRequest {\n  taskSessionId: number = 0;\n  successful: boolean = false;\n  // @ts-ignore\n  finishTime: Date;\n\n  public constructor(init?: Partial) {\n    Object.assign(this, init);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/TaskSessionInfo.html":{"url":"classes/TaskSessionInfo.html","title":"class - TaskSessionInfo","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  TaskSessionInfo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/task-session-info.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                finishedAt\n                            \n                            \n                                id\n                            \n                            \n                                startedAt\n                            \n                            \n                                successful\n                            \n                            \n                                taskName\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(init?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/task-session-info.model.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        finishedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-session-info.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-session-info.model.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        startedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-session-info.model.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        successful\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-session-info.model.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        taskName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-session-info.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/task-session-info.model.ts:4\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class TaskSessionInfo {\n  id: number = 0;\n\n  userName: string = \"\";\n\n  taskName: string = \"\";\n\n  // @ts-ignore\n  finishedAt: Date;\n\n  // @ts-ignore\n  startedAt: Date;\n\n  // @ts-ignore\n  successful: boolean;\n\n  public constructor(init?: Partial) {\n    Object.assign(this, init);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransferService.html":{"url":"injectables/TransferService.html","title":"injectable - TransferService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransferService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/transfer.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service to preform transfer data between components\n\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdGroupStatus$\n                            \n                            \n                                    Private\n                                createdGroupStatusSource\n                            \n                            \n                                loginStatus$\n                            \n                            \n                                    Private\n                                loginStatusSource\n                            \n                            \n                                profileStatus$\n                            \n                            \n                                    Private\n                                profileStatusSource\n                            \n                            \n                                roleStatus$\n                            \n                            \n                                    Private\n                                roleStatusSource\n                            \n                            \n                                updatedGroupStatus$\n                            \n                            \n                                    Private\n                                updatedGroupStatusSource\n                            \n                            \n                                updatedUserStatus$\n                            \n                            \n                                    Private\n                                updatedUserStatusSource\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                changeCreatedGroup\n                            \n                            \n                                    Public\n                                changeProfile\n                            \n                            \n                                    Public\n                                changeRole\n                            \n                            \n                                    Public\n                                changeStatus\n                            \n                            \n                                    Public\n                                changeUpdatedGroup\n                            \n                            \n                                    Public\n                                changeUpdatedUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/transfer.service.ts:30\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeCreatedGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeCreatedGroup(group: GroupTasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/transfer.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                GroupTasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeProfile(profile: UserProfile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/transfer.service.ts:39\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    profile\n                                    \n                                                UserProfile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeRole\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeRole(role: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/transfer.service.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    role\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeStatus\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeStatus(isLogged: boolean)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/transfer.service.ts:35\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    isLogged\n                                    \n                                                boolean\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeUpdatedGroup\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeUpdatedGroup(group: GroupTasks)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/transfer.service.ts:55\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    group\n                                    \n                                                GroupTasks\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        changeUpdatedUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    changeUpdatedUser(user: UserProfile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/transfer.service.ts:47\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                UserProfile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdGroupStatus$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.createdGroupStatusSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/transfer.service.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        createdGroupStatusSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/transfer.service.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        loginStatus$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.loginStatusSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/transfer.service.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        loginStatusSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/transfer.service.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileStatus$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.profileStatusSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/transfer.service.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        profileStatusSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/transfer.service.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roleStatus$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.roleStatusSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/transfer.service.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        roleStatusSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/transfer.service.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedGroupStatus$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updatedGroupStatusSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/transfer.service.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updatedGroupStatusSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/transfer.service.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedUserStatus$\n                        \n                    \n                \n            \n                \n                    \n                        Default value : this.updatedUserStatusSource.asObservable()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/transfer.service.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        updatedUserStatusSource\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Subject()\n                    \n                \n                    \n                        \n                                Defined in src/app/services/transfer.service.ts:23\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport {Subject} from \"rxjs\";\nimport {UserProfile} from \"../models/user-profile.model\";\nimport {GroupTasks} from \"../models/group-tasks.model\";\n\n/**\n * Service to preform transfer data between components\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class TransferService {\n\n  private loginStatusSource = new Subject();\n  loginStatus$ = this.loginStatusSource.asObservable();\n\n  private profileStatusSource = new Subject();\n  profileStatus$ = this.profileStatusSource.asObservable();\n\n  private roleStatusSource = new Subject();\n  roleStatus$ = this.roleStatusSource.asObservable();\n\n  private updatedUserStatusSource = new Subject();\n  updatedUserStatus$ = this.updatedUserStatusSource.asObservable();\n\n  private createdGroupStatusSource = new Subject();\n  createdGroupStatus$ = this.createdGroupStatusSource.asObservable();\n\n  private updatedGroupStatusSource = new Subject();\n  updatedGroupStatus$ = this.updatedGroupStatusSource.asObservable();\n\n  constructor() {\n  }\n\n  public changeStatus(isLogged: boolean) {\n    this.loginStatusSource.next(isLogged);\n  }\n\n  public changeProfile(profile: UserProfile) {\n    this.profileStatusSource.next(profile);\n  }\n\n  public changeRole(role: string) {\n    this.roleStatusSource.next(role);\n  }\n\n  public changeUpdatedUser(user: UserProfile) {\n    this.updatedUserStatusSource.next(user);\n  }\n\n  public changeCreatedGroup(group: GroupTasks) {\n    this.createdGroupStatusSource.next(group);\n  }\n\n  public changeUpdatedGroup(group: GroupTasks) {\n    this.updatedGroupStatusSource.next(group);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserProfile.html":{"url":"classes/UserProfile.html","title":"class - UserProfile","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserProfile\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/models/user-profile.model.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                firstname\n                            \n                            \n                                groups\n                            \n                            \n                                id\n                            \n                            \n                                lastname\n                            \n                            \n                                nickname\n                            \n                            \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(init?: Partial)\n                    \n                \n                        \n                            \n                                Defined in src/app/models/user-profile.model.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        init\n                                                  \n                                                        \n                                                                        Partial\n                                                        \n                                                  \n                                                    \n                                                            Yes\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user-profile.model.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user-profile.model.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user-profile.model.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user-profile.model.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user-profile.model.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nickname\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user-profile.model.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : \"\"\n                    \n                \n                    \n                        \n                                Defined in src/app/models/user-profile.model.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {Group} from \"./group.model\";\n\nexport class UserProfile {\n  id: number = 0;\n  nickname: string = \"\";\n  email: string = \"\";\n  role: string = \"\";\n  firstname: string = \"\";\n  lastname: string = \"\";\n  groups: Group[] = [];\n\n  public constructor(init?: Partial) {\n    Object.assign(this, init);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserProfileComponent.html":{"url":"components/UserProfileComponent.html","title":"component - UserProfileComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserProfileComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user-profile/user-profile.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as a start page after logging in\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-profile\n            \n\n\n\n            \n                styleUrls\n                ./user-profile.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-profile.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                isLoaded\n                            \n                            \n                                profile\n                            \n                            \n                                profileChangesSubscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                HistoryQuizDialogOpen\n                            \n                            \n                                JoinQuizDialogOpen\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                PreviewTasksDialogOpen\n                            \n                            \n                                ProfileSettingsDialogOpen\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_client: BackendService, matDialog: MatDialog, _transfer: TransferService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/user-profile/user-profile.component.ts:36\n                            \n                        \n\n                \n                    \n                            Constructor for a component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BackendService instance that sends requests to a server\n\n                                                        \n                                                \n                                                \n                                                        matDialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening dialogs\n\n                                                        \n                                                \n                                                \n                                                        _transfer\n                                                  \n                                                        \n                                                                        TransferService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Field to transfer data between components\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        HistoryQuizDialogOpen\n                        \n                    \n                \n            \n            \n                \nHistoryQuizDialogOpen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-profile/user-profile.component.ts:74\n                \n            \n\n\n            \n                \n                    Method to open HistoryQuizComponent component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        JoinQuizDialogOpen\n                        \n                    \n                \n            \n            \n                \nJoinQuizDialogOpen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-profile/user-profile.component.ts:67\n                \n            \n\n\n            \n                \n                    Method to open JoinQuizComponent component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-profile/user-profile.component.ts:61\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-profile/user-profile.component.ts:50\n                \n            \n\n\n            \n                \n                    Method to retrieve user profile from a local storage\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        PreviewTasksDialogOpen\n                        \n                    \n                \n            \n            \n                \nPreviewTasksDialogOpen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-profile/user-profile.component.ts:90\n                \n            \n\n\n            \n                \n                    Method to open PreviewTasksComponent component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ProfileSettingsDialogOpen\n                        \n                    \n                \n            \n            \n                \nProfileSettingsDialogOpen()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-profile/user-profile.component.ts:81\n                \n            \n\n\n            \n                \n                    Method to open ProfileSettingsComponent component with user profile as a data\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        isLoaded\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Default value : false\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-profile/user-profile.component.ts:31\n                        \n                    \n\n            \n                \n                    Whether necessary data was loaded\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserProfile\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-profile/user-profile.component.ts:26\n                        \n                    \n\n            \n                \n                    Profile of a logged-in user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profileChangesSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-profile/user-profile.component.ts:36\n                        \n                    \n\n            \n                \n                    Subscription to transfer profile changes\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit} from '@angular/core';\nimport {UserProfile} from \"../../models/user-profile.model\";\nimport {BackendService} from \"../../services/backend.service\";\nimport {MatDialog} from '@angular/material/dialog';\nimport {JoinQuizComponent} from '../join-quiz/join-quiz.component';\nimport {HistoryQuizComponent} from '../history-quiz/history-quiz.component';\nimport {ProfileSettingsComponent} from '../profile-settings/profile-settings.component';\nimport {Subscription} from \"rxjs\";\nimport {TransferService} from \"../../services/transfer.service\";\nimport {PreviewTasksComponent} from \"../preview-tasks/preview-tasks.component\";\n\n/**\n * Component that is used as a start page after logging in\n */\n@Component({\n  selector: 'app-user-profile',\n  templateUrl: './user-profile.component.html',\n  styleUrls: ['./user-profile.component.css']\n})\nexport class UserProfileComponent implements OnInit, OnDestroy {\n\n  /**\n   * Profile of a logged-in user\n   */\n    // @ts-ignore\n  profile: UserProfile;\n\n  /**\n   * Whether necessary data was loaded\n   */\n  isLoaded: boolean = false;\n\n  /**\n   * Subscription to transfer profile changes\n   */\n  profileChangesSubscription: Subscription = new Subscription();\n\n  /**\n   * Constructor for a component\n   * @param _client BackendService instance that sends requests to a server\n   * @param matDialog Angular Material component that uses for opening dialogs\n   * @param _transfer Field to transfer data between components\n   */\n  constructor(private _client: BackendService, private matDialog: MatDialog, private _transfer: TransferService) {\n  }\n\n  /**\n   * Method to retrieve user profile from a local storage\n   */\n  ngOnInit(): void {\n    const parsedProfile = localStorage.getItem(\"user-profile\");\n    if (parsedProfile)\n      this.profile = JSON.parse(parsedProfile) as UserProfile;\n    this.isLoaded = true;\n\n    this.profileChangesSubscription = this._transfer.profileStatus$.subscribe(profile => {\n      this.profile = profile;\n    })\n  }\n\n  ngOnDestroy(): void {\n  }\n\n  /**\n   * Method to open JoinQuizComponent component\n   */\n  JoinQuizDialogOpen(){\n    this.matDialog.open(JoinQuizComponent);\n  }\n\n  /**\n   * Method to open HistoryQuizComponent component\n   */\n  HistoryQuizDialogOpen() {\n    this.matDialog.open(HistoryQuizComponent);\n  }\n\n  /**\n   * Method to open ProfileSettingsComponent component with user profile as a data\n   */\n  ProfileSettingsDialogOpen() {\n    this.matDialog.open(ProfileSettingsComponent, {\n      data: this.profile\n    });\n  }\n\n  /**\n   * Method to open PreviewTasksComponent component\n   */\n  PreviewTasksDialogOpen() {\n    this.matDialog.open(PreviewTasksComponent);\n  }\n}\n\n    \n\n    \n        \n  \n    \n      \n        Hi {{profile.firstname}} {{profile.lastname}},\n        Welcome Back 👋\n      \n      \n        \n          {{profile.role}}\n          {{profile.firstname}} {{profile.lastname}}\n          \n            settings\n            Profile settings\n          \n        \n         -->\n      \n    \n    \n      \n        \n          Webová virtuálna realita pre vzdelávanie\n          Technológie virtuálnej reality (VR) vedia používateľom ponúknuť rôzne zážitky a\n            skúsenosti. Jedným z tých pozoruhodnejších a významnejších je ponorenie do histórie. Vo VR môže človek\n            preskúmať historické prostredie a dozvedieť sa o ňom jedinečným dynamickým spôsobom.\n          see more\n        \n      \n      \n        \n          \n            Join quiz\n            complete quizes assigned to you by your teachers\n          \n          navigate_next\n        \n        \n          \n            Tasks history\n            review quizzes you took in the past \n          \n          navigate_next\n        \n        \n          \n            Tasks\n            Choose your task and start it\n          \n          navigate_next\n        \n      \n    \n  \n\n\n    \n\n    \n                \n                    ./user-profile.component.css\n                \n                .welcomeAndProfile {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding-bottom: 2rem;\n  padding-top: 5rem;\n}\n\n.profile {\n  display: flex;\n  flex-direction: row;\n  gap: 0.5rem;\n  text-align: right;\n  align-items: flex-start;\n  height: 70%;\n}\n\n.settings {\n  font-size: 0.7rem;\n  display: flex;\n  flex-direction: row;\n  gap: 0.3rem;\n  color: var(--purple-color);\n  justify-content: center;\n  align-items: center;\n}\n\n.selectionBoxes {\n  display: flex;\n  flex-direction: row;\n  gap: 4rem;\n}\n\n.about {\n  flex: 2;\n  background: url(\"src/assets/coverPhoto.svg\");\n  background-size: cover;\n  color: white;\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-end;\n}\n\n.content {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n  padding: 3rem;\n  width: 60%;\n}\n\n.quizBoxes {\n  flex: 1;\n  gap: 2rem;\n  display: flex;\n  flex-direction: column;\n}\n\n.quizBoxes .card {\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  gap: 2rem;\n  align-items: center;\n}\n\n@media only screen and (max-width: 900px) {\n  .selectionBoxes {\n    flex-direction: column !important;\n  }\n\n  .content {\n    width: 85%;\n    padding: 1rem;\n  }\n}\n\n@media only screen and (max-width: 800px) {\n  .profile {\n    display: flex;\n    justify-content: center;\n    align-items: flex-end;\n    flex-direction: column !important;\n  }\n\n  .quizOption {\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n    text-align: center;\n  }\n\n  .quizOption .secondaryText {\n    text-align: center;\n  }\n\n  h1 {\n    font-size: 1.6rem !important;\n  }\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                    Hi {{profile.firstname}} {{profile.lastname}},        Welcome Back 👋                              {{profile.role}}          {{profile.firstname}} {{profile.lastname}}                      settings            Profile settings                           -->                                      Webová virtuálna realita pre vzdelávanie          Technológie virtuálnej reality (VR) vedia používateľom ponúknuť rôzne zážitky a            skúsenosti. Jedným z tých pozoruhodnejších a významnejších je ponorenie do histórie. Vo VR môže človek            preskúmať historické prostredie a dozvedieť sa o ňom jedinečným dynamickým spôsobom.          see more                                                  Join quiz            complete quizes assigned to you by your teachers                    navigate_next                                      Tasks history            review quizzes you took in the past                     navigate_next                                      Tasks            Choose your task and start it                    navigate_next                    '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserProfileComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UserSettingsComponent.html":{"url":"components/UserSettingsComponent.html","title":"component - UserSettingsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UserSettingsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/user-settings/user-settings.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that defines a dialog for a user settings (For admins and teacher)\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-user-settings\n            \n\n\n\n            \n                styleUrls\n                ./user-settings.component.css\n            \n\n\n\n            \n                templateUrl\n                ./user-settings.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _groups\n                            \n                            \n                                    \n                                    Public\n                                data\n                            \n                            \n                                form\n                            \n                            \n                                groupsSubscription\n                            \n                            \n                                profile_update_subscription\n                            \n                            \n                                roles\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                autocompleteGroups\n                            \n                            \n                                closeDialog\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openSuccessfulSnackbar\n                            \n                            \n                                openUnsuccessfulSnackbar\n                            \n                            \n                                updateProfile\n                            \n                        \n                    \n                \n\n\n\n\n\n                    \n                        \n                            Accessors\n                        \n                    \n                    \n                        \n                            \n                                \n                                    email\n                                \n                                \n                                    nickname\n                                \n                                \n                                    role\n                                \n                                \n                                    firstname\n                                \n                                \n                                    lastname\n                                \n                                \n                                    groups\n                                \n                            \n                        \n                    \n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(matDialogRef: MatDialogRef, data: UserProfile, router: Router, _transfer: TransferService, _client: BackendService, _snackBar: MatSnackBar)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/user-settings/user-settings.component.ts:48\n                            \n                        \n\n                \n                    \n                            Constructor for a component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        matDialogRef\n                                                  \n                                                        \n                                                                        MatDialogRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening dialogs\n\n                                                        \n                                                \n                                                \n                                                        data\n                                                  \n                                                        \n                                                                        UserProfile\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                data that was transfer to this component\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Router field to route between components\n\n                                                        \n                                                \n                                                \n                                                        _transfer\n                                                  \n                                                        \n                                                                        TransferService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Field to transfer data between components\n\n                                                        \n                                                \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BackendService instance that sends requests to a server\n\n                                                        \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening snack bars\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        autocompleteGroups\n                        \n                    \n                \n            \n            \n                \n                    \n                    autocompleteGroups(profile: UserProfile)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-settings/user-settings.component.ts:191\n                \n            \n\n\n            \n                \n                    Method to autocomplete user groups field with his current groups\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    profile\n                                    \n                                                UserProfile\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        profile of a current user\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        closeDialog\n                        \n                    \n                \n            \n            \n                \ncloseDialog()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-settings/user-settings.component.ts:124\n                \n            \n\n\n            \n                \n                    While this component is a dialog, this method closes this component\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-settings/user-settings.component.ts:151\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-settings/user-settings.component.ts:132\n                \n            \n\n\n            \n                \n                    Method to get user profile, init user profile modification form and fetch all\ngroups from a database\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSuccessfulSnackbar\n                        \n                    \n                \n            \n            \n                \nopenSuccessfulSnackbar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-settings/user-settings.component.ts:206\n                \n            \n\n\n            \n                \n                    Opens successful snack bar\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUnsuccessfulSnackbar\n                        \n                    \n                \n            \n            \n                \nopenUnsuccessfulSnackbar(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-settings/user-settings.component.ts:217\n                \n            \n\n\n            \n                \n                    Opens unsuccessful snack bar\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateProfile\n                        \n                    \n                \n            \n            \n                \nupdateProfile()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/user-settings/user-settings.component.ts:160\n                \n            \n\n\n            \n                \n                    Method to update user profile\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _groups\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Group[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-settings/user-settings.component.ts:48\n                        \n                    \n\n            \n                \n                    List with all groups\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserProfile\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Inject(MAT_DIALOG_DATA)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-settings/user-settings.component.ts:60\n                        \n                    \n\n            \n                \n                    data that was transfer to this component\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        form\n                        \n                    \n                \n            \n                \n                    \n                        Type :         FormGroup\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-settings/user-settings.component.ts:28\n                        \n                    \n\n            \n                \n                    Represents a collection of form controls that are logically grouped together. It provides a convenient way to manage and validate multiple form controls as a single unit.\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        groupsSubscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-settings/user-settings.component.ts:38\n                        \n                    \n\n            \n                \n                    Subscription to fetch all groups from a database\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        profile_update_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-settings/user-settings.component.ts:43\n                        \n                    \n\n            \n                \n                    Subscription to update user profile\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        roles\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : ['STUDENT', 'TEACHER', 'ADMIN']\n                    \n                \n                    \n                        \n                                Defined in src/app/components/user-settings/user-settings.component.ts:33\n                        \n                    \n\n            \n                \n                    List with available roles in the system\n\n                \n            \n\n        \n    \n\n\n    \n    \n        Accessors\n    \n        \n            \n                \n                    \n                        \n                        email\n                    \n                \n\n                \n                    \n                        getemail()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/user-settings/user-settings.component.ts:70\n                                \n                            \n                    \n                        \n                                Gets an email field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        nickname\n                    \n                \n\n                \n                    \n                        getnickname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/user-settings/user-settings.component.ts:79\n                                \n                            \n                    \n                        \n                                Gets a nickname field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        role\n                    \n                \n\n                \n                    \n                        getrole()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/user-settings/user-settings.component.ts:88\n                                \n                            \n                    \n                        \n                                Gets a role field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        firstname\n                    \n                \n\n                \n                    \n                        getfirstname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/user-settings/user-settings.component.ts:97\n                                \n                            \n                    \n                        \n                                Gets a firstname field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        lastname\n                    \n                \n\n                \n                    \n                        getlastname()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/user-settings/user-settings.component.ts:106\n                                \n                            \n                    \n                        \n                                Gets a lastname field from a form group\n\n\n                        \n                    \n\n            \n        \n        \n            \n                \n                    \n                        \n                        groups\n                    \n                \n\n                \n                    \n                        getgroups()\n                    \n                \n                            \n                                \n                                    Defined in src/app/components/user-settings/user-settings.component.ts:115\n                                \n                            \n                    \n                        \n                                Gets a groups field from a form group\n\n\n                        \n                    \n\n            \n        \n\n\n\n\n    \n        import {Component, Inject, OnDestroy, OnInit} from '@angular/core';\nimport {FormControl, FormGroup, Validators} from \"@angular/forms\";\nimport {Subscription} from \"rxjs\";\nimport {MAT_DIALOG_DATA, MatDialogRef} from \"@angular/material/dialog\";\nimport {UserProfile} from \"../../models/user-profile.model\";\nimport {Router} from \"@angular/router\";\nimport {TransferService} from \"../../services/transfer.service\";\nimport {BackendService} from \"../../services/backend.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {ProfileUpdate} from \"../../models/profile-update.model\";\nimport {HttpErrorResponse} from \"@angular/common/http\";\nimport {Group} from 'src/app/models/group.model';\n\n/**\n * Component that defines a dialog for a user settings (For admins and teacher)\n */\n@Component({\n  selector: 'app-user-settings',\n  templateUrl: './user-settings.component.html',\n  styleUrls: ['./user-settings.component.css']\n})\nexport class UserSettingsComponent implements OnInit, OnDestroy {\n\n  /**\n   * Represents a collection of form controls that are logically grouped together. It provides a convenient way to manage and validate multiple form controls as a single unit.\n   */\n  // @ts-ignore\n  form: FormGroup;\n\n  /**\n   * List with available roles in the system\n   */\n  roles: string[] = ['STUDENT', 'TEACHER', 'ADMIN']\n\n  /**\n   * Subscription to fetch all groups from a database\n   */\n  groupsSubscription: Subscription = new Subscription();\n\n  /**\n   * Subscription to update user profile\n   */\n  profile_update_subscription: Subscription = new Subscription();\n\n  /**\n   * List with all groups\n   */\n  _groups: Group[] = [];\n\n  /**\n   * Constructor for a component\n   * @param matDialogRef Angular Material component that uses for opening dialogs\n   * @param _client BackendService instance that sends requests to a server\n   * @param _snackBar Angular Material component that uses for opening snack bars\n   * @param data data that was transfer to this component\n   * @param router Router field to route between components\n   * @param _transfer Field to transfer data between components\n   */\n  constructor(private matDialogRef: MatDialogRef,\n              @Inject(MAT_DIALOG_DATA) public data: UserProfile,\n              private router: Router,\n              private _transfer: TransferService,\n              private _client: BackendService,\n              private _snackBar: MatSnackBar) {\n  }\n\n  /**\n   * Gets an email field from a form group\n   */\n  get email() {\n    if (this.form)\n      return this.form.controls['email'];\n    return null;\n  }\n\n  /**\n   * Gets a nickname field from a form group\n   */\n  get nickname() {\n    if (this.form)\n      return this.form.controls['nickname'];\n    return null;\n  }\n\n  /**\n   * Gets a role field from a form group\n   */\n  get role() {\n    if (this.form)\n      return this.form.controls['role'];\n    return null;\n  }\n\n  /**\n   * Gets a firstname field from a form group\n   */\n  get firstname() {\n    if (this.form)\n      return this.form.controls['firstname'];\n    return null;\n  }\n\n  /**\n   * Gets a lastname field from a form group\n   */\n  get lastname() {\n    if (this.form)\n      return this.form.controls['lastname'];\n    return null;\n  }\n\n  /**\n   * Gets a groups field from a form group\n   */\n  get groups() {\n    if (this.form)\n      return this.form.controls['groups'];\n    return null;\n  }\n\n  /**\n   * While this component is a dialog, this method closes this component\n   */\n  closeDialog() {\n    this.matDialogRef.close();\n  }\n\n  /**\n   * Method to get user profile, init user profile modification form and fetch all\n   * groups from a database\n   */\n  ngOnInit(): void {\n    let profile: UserProfile = this.data;\n    console.log(profile.groups)\n    this.form = new FormGroup({\n      email: new FormControl(profile.email, [Validators.required, Validators.email]),\n      nickname: new FormControl(profile.nickname, [Validators.required]),\n      firstname: new FormControl(profile.firstname, [Validators.required]),\n      lastname: new FormControl(profile.lastname, [Validators.required]),\n      role: new FormControl(profile.role, [Validators.required]),\n      groups: new FormControl('', [])\n    });\n    this.form.controls['email'].disable();\n\n    this.groupsSubscription = this._client.getGroups().subscribe(data => {\n      this._groups = data as Group[]\n      this.autocompleteGroups(profile);\n    })\n  }\n\n  ngOnDestroy(): void {\n    this.matDialogRef.close();\n    this.profile_update_subscription.unsubscribe();\n    this.groupsSubscription.unsubscribe();\n  }\n\n  /**\n   * Method to update user profile\n   */\n  updateProfile() {\n    let profile: ProfileUpdate = new ProfileUpdate({\n      id: this.data.id,\n      email: this.email?.value,\n      nickname: this.nickname?.value,\n      firstname: this.firstname?.value,\n      lastname: this.lastname?.value,\n      role: this.role?.value,\n      groups: this.groups?.value,\n    })\n\n    this.profile_update_subscription = this._client.updateUserFromDashboard(profile).subscribe({\n      next: (profile) => {\n        this.openSuccessfulSnackbar();\n        this._transfer.changeUpdatedUser(profile);\n      },\n      error: (err) => {\n        if (err instanceof HttpErrorResponse) {\n          if (err.status === 400)\n            this.openUnsuccessfulSnackbar(err.error);\n          else\n            this.openUnsuccessfulSnackbar(\"An unexpected error occurred\");\n        }\n      }\n    })\n  }\n\n  /**\n   * Method to autocomplete user groups field with his current groups\n   * @param profile profile of a current user\n   */\n  private autocompleteGroups(profile: UserProfile) {\n    let gr: Group[] = [];\n    this._groups.forEach((group: Group) => {\n      profile.groups.forEach((g: Group) => {\n        if (g.id === group.id) {\n          gr.push(group);\n        }\n      });\n    });\n    this.form.controls['groups'].setValue(gr);\n  }\n\n  /**\n   * Opens successful snack bar\n   */\n  openSuccessfulSnackbar() {\n    this._snackBar.open('Profile was successfully updated', '', {\n      duration: 5000,\n      panelClass: ['snackbar-success']\n    });\n\n  }\n\n  /**\n   * Opens unsuccessful snack bar\n   */\n  openUnsuccessfulSnackbar(message: string) {\n    this._snackBar.open(message, '', {\n      duration: 5000,\n      panelClass: ['snackbar-unsuccessful']\n    });\n  }\n}\n\n    \n\n    \n        \n  close\n\nProfile Settings\n\n\n  \n    \n      lastname\n      change\n    \n    \n  \n  \n    Lastname is required\n  \n\n  \n    \n      firstname\n      change\n    \n    \n  \n  \n    Firstname is required\n  \n\n  \n    \n      email\n    \n    \n  \n\n  \n      \n          nickname\n          change\n      \n      \n  \n    \n        Username is required\n    \n\n    \n        \n            role\n            change\n        \n        \n            {{role}}\n        \n    \n\n    \n        \n            groups\n            change\n        \n        \n            \n                {{group.name}}\n            \n        \n    \n\n    Save\n\n\n    \n\n    \n                \n                    ./user-settings.component.css\n                \n                .profileSettings {\n  display: flex;\n  flex-direction: column;\n  gap: 1.5rem;\n  min-width: 20vw;\n  padding: 0 2rem;\n  justify-content: center;\n  align-items: center;\n}\n\n.label {\n  display: flex;\n  flex-direction: row;\n  width: 100%;\n  justify-content: space-between;\n}\n\n.logout {\n  color: #FF0A0A !important;\n  display: flex;\n  gap: 1rem;\n  margin: 1.5rem 0;\n}\n\n.logout p, .logout mat-icon {\n  opacity: 0.6;\n}\n\n.error-content {\n  color: red;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  closeProfile Settings            lastname      change                Lastname is required              firstname      change                Firstname is required              email                            nickname          change                          Username is required                            role            change                            {{role}}                                    groups            change                                            {{group.name}}                            Save'\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UserSettingsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/UsersDashboardComponent.html":{"url":"components/UsersDashboardComponent.html","title":"component - UsersDashboardComponent","body":"\n                   \n\n\n\n\n\n  Components\n  \n  UsersDashboardComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            Styles\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/app/components/users-dashboard/users-dashboard.component.ts\n\n\n\n    \n        Description\n    \n    \n        Component that is used as a dashboard for users management\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n                OnDestroy\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-users-dashboard\n            \n\n\n\n            \n                styleUrls\n                ./users-dashboard.component.css\n            \n\n\n\n            \n                templateUrl\n                ./users-dashboard.component.html\n            \n\n\n\n\n\n\n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                confirmation_dialog_subscription\n                            \n                            \n                                dataSource\n                            \n                            \n                                delete_user_subscription\n                            \n                            \n                                displayedColumns\n                            \n                            \n                                    \n                                paginator\n                            \n                            \n                                updated_user_subscription\n                            \n                            \n                                users\n                            \n                            \n                                users_subscription\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                deleteUser\n                            \n                            \n                                editUser\n                            \n                            \n                                ngOnDestroy\n                            \n                            \n                                ngOnInit\n                            \n                            \n                                openDeleteDialog\n                            \n                            \n                                openSuccessfulDeleteBar\n                            \n                            \n                                openUnsuccessfulDeleteBar\n                            \n                            \n                                updateDataSource\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(_client: BackendService, _snackBar: MatSnackBar, _dialog: MatDialog, _transfer: TransferService)\n                    \n                \n                        \n                            \n                                Defined in src/app/components/users-dashboard/users-dashboard.component.ts:64\n                            \n                        \n\n                \n                    \n                            Constructor for a component\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        _client\n                                                  \n                                                        \n                                                                        BackendService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                BackendService instance that sends requests to a server\n\n                                                        \n                                                \n                                                \n                                                        _snackBar\n                                                  \n                                                        \n                                                                    MatSnackBar\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening snack bars\n\n                                                        \n                                                \n                                                \n                                                        _dialog\n                                                  \n                                                        \n                                                                    MatDialog\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Angular Material component that uses for opening dialogs\n\n                                                        \n                                                \n                                                \n                                                        _transfer\n                                                  \n                                                        \n                                                                        TransferService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                Field to transfer data between components\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        deleteUser\n                        \n                    \n                \n            \n            \n                \ndeleteUser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-dashboard/users-dashboard.component.ts:131\n                \n            \n\n\n            \n                \n                    Method to delete a user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of a user to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        editUser\n                        \n                    \n                \n            \n            \n                \neditUser(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-dashboard/users-dashboard.component.ts:114\n                \n            \n\n\n            \n                \n                    Method to update user\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        id of a user to update\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnDestroy\n                        \n                    \n                \n            \n            \n                \nngOnDestroy()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-dashboard/users-dashboard.component.ts:103\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        ngOnInit\n                        \n                    \n                \n            \n            \n                \nngOnInit()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-dashboard/users-dashboard.component.ts:83\n                \n            \n\n\n            \n                \n                    Method to fetch all users and subscribe to a modification of any users profile\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openDeleteDialog\n                        \n                    \n                \n            \n            \n                \nopenDeleteDialog(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-dashboard/users-dashboard.component.ts:151\n                \n            \n\n\n            \n                \n                    Opens a delete dialog\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        user id to delete\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openSuccessfulDeleteBar\n                        \n                    \n                \n            \n            \n                \nopenSuccessfulDeleteBar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-dashboard/users-dashboard.component.ts:176\n                \n            \n\n\n            \n                \n                    Opens successful snack bar after deleting a user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        openUnsuccessfulDeleteBar\n                        \n                    \n                \n            \n            \n                \nopenUnsuccessfulDeleteBar()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-dashboard/users-dashboard.component.ts:185\n                \n            \n\n\n            \n                \n                    Opens unsuccessful snack bar after deleting a user\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateDataSource\n                        \n                    \n                \n            \n            \n                \nupdateDataSource()\n                \n            \n\n\n            \n                \n                    Defined in src/app/components/users-dashboard/users-dashboard.component.ts:168\n                \n            \n\n\n            \n                \n                    Method to update/refresh a table\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n    \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        confirmation_dialog_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-dashboard/users-dashboard.component.ts:48\n                        \n                    \n\n            \n                \n                    Subscription for a confirmation dialog\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        dataSource\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatTableDataSource\n\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-dashboard/users-dashboard.component.ts:27\n                        \n                    \n\n            \n                \n                    Field to manage users as a table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        delete_user_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-dashboard/users-dashboard.component.ts:53\n                        \n                    \n\n            \n                \n                    Subscription to delete a user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        displayedColumns\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\"firstname\", \"lastname\", \"email\", \"username\", \"role\", \"groups\", \"actions\"]\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-dashboard/users-dashboard.component.ts:32\n                        \n                    \n\n            \n                \n                    Columns for a table to display\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        paginator\n                        \n                    \n                \n            \n                \n                    \n                        Type :     MatPaginator\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ViewChild('paginator')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-dashboard/users-dashboard.component.ts:64\n                        \n                    \n\n            \n                \n                    Paginator to a table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updated_user_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-dashboard/users-dashboard.component.ts:58\n                        \n                    \n\n            \n                \n                    Subscription to update a user\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserProfile[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-dashboard/users-dashboard.component.ts:37\n                        \n                    \n\n            \n                \n                    List of users profiles to display in a table\n\n                \n            \n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        users_subscription\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Subscription\n\n                    \n                \n                \n                    \n                        Default value : new Subscription()\n                    \n                \n                    \n                        \n                                Defined in src/app/components/users-dashboard/users-dashboard.component.ts:43\n                        \n                    \n\n            \n                \n                    Subscription to fetch all users profiles\n\n                \n            \n\n        \n    \n\n\n\n\n\n    \n        import {Component, OnDestroy, OnInit, ViewChild} from '@angular/core';\nimport {MatPaginator} from \"@angular/material/paginator\";\nimport {BackendService} from \"../../services/backend.service\";\nimport {MatSnackBar} from \"@angular/material/snack-bar\";\nimport {UserProfile} from \"../../models/user-profile.model\";\nimport {Subscription} from \"rxjs\";\nimport {MatTableDataSource} from \"@angular/material/table\";\nimport {MatDialog} from \"@angular/material/dialog\";\nimport {ConfirmationDialog} from \"../dialogs/confirmation-dialog/confirmation-dialog.component\";\nimport {UserSettingsComponent} from \"../user-settings/user-settings.component\";\nimport {TransferService} from \"../../services/transfer.service\";\n\n/**\n * Component that is used as a dashboard for users management\n */\n@Component({\n  selector: 'app-users-dashboard',\n  templateUrl: './users-dashboard.component.html',\n  styleUrls: ['./users-dashboard.component.css']\n})\nexport class UsersDashboardComponent implements OnInit, OnDestroy {\n\n  /**\n   * Field to manage users as a table\n   */\n  // @ts-ignore\n  dataSource: MatTableDataSource;\n\n  /**\n   * Columns for a table to display\n   */\n  displayedColumns = [\"firstname\", \"lastname\", \"email\", \"username\", \"role\", \"groups\", \"actions\"];\n\n  /**\n   * List of users profiles to display in a table\n   */\n  users: UserProfile[] = [];\n  // admin_id: number = 0;\n\n  /**\n   * Subscription to fetch all users profiles\n   */\n  users_subscription: Subscription = new Subscription();\n\n  /**\n   * Subscription for a confirmation dialog\n   */\n  confirmation_dialog_subscription: Subscription = new Subscription();\n\n  /**\n   * Subscription to delete a user\n   */\n  delete_user_subscription: Subscription = new Subscription();\n\n  /**\n   * Subscription to update a user\n   */\n  updated_user_subscription: Subscription = new Subscription();\n\n  /**\n   * Paginator to a table\n   */\n  // @ts-ignore\n  @ViewChild('paginator') paginator: MatPaginator;\n\n  /**\n   * Constructor for a component\n   * @param _dialog Angular Material component that uses for opening dialogs\n   * @param _client BackendService instance that sends requests to a server\n   * @param _snackBar Angular Material component that uses for opening snack bars\n   * @param _transfer Field to transfer data between components\n   */\n  constructor(private _client: BackendService,\n              private _snackBar: MatSnackBar,\n              private _dialog: MatDialog,\n              private _transfer: TransferService) {\n\n  }\n\n  /**\n   * Method to fetch all users and subscribe to a modification of any users profile\n   */\n  ngOnInit(): void {\n    // let profile = localStorage.getItem('user-profile');\n    // if (profile != null)\n    //   this.admin_id = JSON.parse(profile).id;\n    this.users_subscription = this._client.getAllUsers().subscribe(users => {\n      this.users = users as UserProfile[];\n      this.dataSource = new MatTableDataSource(this.users);\n      this.dataSource.paginator = this.paginator;\n    })\n    this.updated_user_subscription = this._transfer.updatedUserStatus$.subscribe(user => {\n      for (let i = 0; i  {\n        for (let i = 0; i  {\n        this.openUnsuccessfulDeleteBar();\n      }\n    })\n  }\n\n  /**\n   * Opens a delete dialog\n   * @param id user id to delete\n   */\n  openDeleteDialog(id: number) {\n    const dialogRef = this._dialog.open(ConfirmationDialog, {\n      data: {\n        message: \"Do you want to delete this user?\"\n      }\n    })\n\n    this.confirmation_dialog_subscription = dialogRef.afterClosed().subscribe((confirmed: boolean) => {\n      if (confirmed) {\n        this.deleteUser(id);\n      }\n    })\n  }\n\n  /**\n   * Method to update/refresh a table\n   */\n  updateDataSource() {\n    this.dataSource.data = this.users;\n    this.dataSource.paginator = this.paginator;\n  }\n\n  /**\n   * Opens successful snack bar after deleting a user\n   */\n  openSuccessfulDeleteBar() {\n    this._snackBar.open('User was successfully deleted', \"OK\", {\n      duration: 3000\n    })\n  }\n\n  /**\n   * Opens unsuccessful snack bar after deleting a user\n   */\n  openUnsuccessfulDeleteBar() {\n    this._snackBar.open('Error occurred when deleting user', \"OK\", {\n      duration: 3000\n    })\n  }\n}\n\n    \n\n    \n        \n  \n    \n      Firstname\n       {{row.firstname}} \n    \n\n    \n      Lastname\n       {{row.lastname}} \n    \n\n    \n      Email\n       {{row.email}} \n    \n\n    \n      Username\n       {{row.nickname}} \n    \n\n    \n      Role\n       {{row.role}} \n    \n\n    \n      Groups\n      \n        \n          {{group.name}}\n        \n      \n    \n\n    \n      Actions\n      \n        \n        \n          edit\n          delete\n        \n      \n    \n\n    \n    \n  \n  \n\n\n    \n\n    \n                \n                    ./users-dashboard.component.css\n                \n                .content {\n  width: 70%;\n}\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '            Firstname       {{row.firstname}}               Lastname       {{row.lastname}}               Email       {{row.email}}               Username       {{row.nickname}}               Role       {{row.role}}               Groups                        {{group.name}}                            Actions                                edit          delete                              '\n    var COMPONENTS = [{'name': 'AboutComponent', 'selector': 'app-about'},{'name': 'AppComponent', 'selector': 'app-root'},{'name': 'ConfirmationDialog', 'selector': ''},{'name': 'CreateQuizComponent', 'selector': 'app-create-quiz'},{'name': 'CreateSceneComponent', 'selector': 'app-create-scene'},{'name': 'CreateTaskComponent', 'selector': 'app-create-task'},{'name': 'DashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'FooterComponent', 'selector': 'app-footer'},{'name': 'GroupsDashboardComponent', 'selector': 'app-groups-dashboard'},{'name': 'GroupSessionsComponent', 'selector': 'app-group-sessions'},{'name': 'GroupSettingsComponent', 'selector': 'app-group-settings'},{'name': 'GroupsModificationComponent', 'selector': 'app-groups-modification'},{'name': 'GroupsPreviewComponent', 'selector': 'app-groups-preview'},{'name': 'HistoryQuizComponent', 'selector': 'app-history-quiz'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'JoinQuizComponent', 'selector': 'app-join-quiz'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'Muzeum_habsbourgComponent', 'selector': 'app-scene'},{'name': 'NavbarComponent', 'selector': 'app-navbar'},{'name': 'PreviewScenariosComponent', 'selector': 'app-preview-scenarios'},{'name': 'PreviewSceneComponent', 'selector': 'app-preview-scene'},{'name': 'PreviewTasksComponent', 'selector': 'app-preview-tasks'},{'name': 'ProfileSettingsComponent', 'selector': 'app-profile-settings'},{'name': 'RegistrationComponent', 'selector': 'app-registration'},{'name': 'SceneComponent', 'selector': 'app-scene'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryComponent', 'selector': 'app-task-history'},{'name': 'TaskHistoryExtendedComponent', 'selector': 'app-task-history-extended'},{'name': 'TaskHistoryStatisticsComponent', 'selector': 'app-task-history-statistics'},{'name': 'UserProfileComponent', 'selector': 'app-user-profile'},{'name': 'UsersDashboardComponent', 'selector': 'app-users-dashboard'},{'name': 'UserSettingsComponent', 'selector': 'app-user-settings'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'UsersDashboardComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UtilsService.html":{"url":"injectables/UtilsService.html","title":"injectable - UtilsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UtilsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app/services/utils.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Service containing some help methods\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getDecodedAccessToken\n                            \n                            \n                                    Public\n                                getToken\n                            \n                            \n                                    Public\n                                isLoggedIn\n                            \n                            \n                                    Public\n                                logOut\n                            \n                            \n                                    Public\n                                saveToken\n                            \n                            \n                                    Private\n                                tokenExpired\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/app/services/utils.service.ts:10\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getDecodedAccessToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getDecodedAccessToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/utils.service.ts:55\n                \n            \n\n\n            \n                \n                    Method to retrieve a decoded JWT token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        token to decode\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        getToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    getToken()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/utils.service.ts:47\n                \n            \n\n\n            \n                \n                    Method to retrieve a token from a local storage\n\n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isLoggedIn\n                        \n                    \n                \n            \n            \n                \n                    \n                    isLoggedIn()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/utils.service.ts:35\n                \n            \n\n\n            \n                \n                    Method to validate whether user is logged in\n\n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        logOut\n                        \n                    \n                \n            \n            \n                \n                    \n                    logOut()\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/utils.service.ts:26\n                \n            \n\n\n            \n                \n                    Method to logout\n\n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        saveToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    saveToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/utils.service.ts:19\n                \n            \n\n\n            \n                \n                    Method to save a token to a local storage\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        JWT token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        tokenExpired\n                        \n                    \n                \n            \n            \n                \n                    \n                    tokenExpired(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/app/services/utils.service.ts:67\n                \n            \n\n\n            \n                \n                    Method to validate whether the JWT token is already expired\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        JWT token\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {Injectable} from '@angular/core';\nimport jwt_decode from 'jwt-decode';\n\n/**\n * Service containing some help methods\n */\n@Injectable({\n  providedIn: 'root'\n})\nexport class UtilsService {\n\n  constructor() {\n  }\n\n  /**\n   * Method to save a token to a local storage\n   * @param token JWT token\n   */\n  public saveToken(token: string) {\n    localStorage.setItem(\"jwt-token\", token);\n  }\n\n  /**\n   * Method to logout\n   */\n  public logOut() {\n    localStorage.removeItem(\"jwt-token\");\n    localStorage.removeItem(\"user-profile\");\n    localStorage.removeItem(\"sessionID\");\n  }\n\n  /**\n   * Method to validate whether user is logged in\n   */\n  public isLoggedIn(): boolean {\n    let token = this.getToken();\n    if (token === null || this.tokenExpired(token)) {\n      this.logOut();\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Method to retrieve a token from a local storage\n   */\n  public getToken(): any {\n    return localStorage.getItem(\"jwt-token\");\n  }\n\n  /**\n   * Method to retrieve a decoded JWT token\n   * @param token token to decode\n   */\n  private getDecodedAccessToken(token: string): any {\n    try {\n      return jwt_decode(token);\n    } catch (Error) {\n      return null;\n    }\n  }\n\n  /**\n   * Method to validate whether the JWT token is already expired\n   * @param token JWT token\n   */\n  private tokenExpired(token: string): boolean {\n    if (token === null)\n      return true;\n    let tokenInfo = this.getDecodedAccessToken(token);\n    console.log(tokenInfo.exp - new Date().getTime() / 1000);\n    return tokenInfo.exp - new Date().getTime() / 1000 \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app/app.component.ts\n            \n            component\n            AppComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/about/about.component.ts\n            \n            component\n            AboutComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/auth/auth.guard.ts\n            \n            guard\n            AuthGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/auth/auth.interceptor.ts\n            \n            interceptor\n            AuthInterceptor\n            \n                25 %\n                (1/4)\n            \n        \n        \n            \n                \n                src/app/components/auth/role.guard.ts\n            \n            guard\n            RoleGuard\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/app/components/create-quiz/create-quiz.component.ts\n            \n            component\n            CreateQuizComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/components/create-scene/create-scene.component.ts\n            \n            component\n            CreateSceneComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/components/create-task/create-task.component.ts\n            \n            component\n            CreateTaskComponent\n            \n                95 %\n                (19/20)\n            \n        \n        \n            \n                \n                src/app/components/dashboard/dashboard.component.ts\n            \n            component\n            DashboardComponent\n            \n                80 %\n                (8/10)\n            \n        \n        \n            \n                \n                src/app/components/dialogs/confirmation-dialog/confirmation-dialog.component.ts\n            \n            component\n            ConfirmationDialog\n            \n                50 %\n                (3/6)\n            \n        \n        \n            \n                \n                src/app/components/footer/footer.component.ts\n            \n            component\n            FooterComponent\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/app/components/group-sessions/group-sessions.component.ts\n            \n            component\n            GroupSessionsComponent\n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                src/app/components/group-settings/group-settings.component.ts\n            \n            component\n            GroupSettingsComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/components/groups-dashboard/groups-dashboard.component.ts\n            \n            component\n            GroupsDashboardComponent\n            \n                94 %\n                (18/19)\n            \n        \n        \n            \n                \n                src/app/components/groups-modification/groups-modification.component.ts\n            \n            component\n            GroupsModificationComponent\n            \n                80 %\n                (12/15)\n            \n        \n        \n            \n                \n                src/app/components/groups-preview/groups-preview.component.ts\n            \n            component\n            GroupsPreviewComponent\n            \n                75 %\n                (6/8)\n            \n        \n        \n            \n                \n                src/app/components/history-quiz/history-quiz.component.ts\n            \n            component\n            HistoryQuizComponent\n            \n                86 %\n                (13/15)\n            \n        \n        \n            \n                \n                src/app/components/home/home.component.ts\n            \n            component\n            HomeComponent\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/components/join-quiz/join-quiz.component.ts\n            \n            component\n            JoinQuizComponent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/app/components/login/login.component.ts\n            \n            component\n            LoginComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/components/navbar/navbar.component.ts\n            \n            component\n            NavbarComponent\n            \n                75 %\n                (9/12)\n            \n        \n        \n            \n                \n                src/app/components/preview-scenarios/preview-scenarios.component.ts\n            \n            component\n            PreviewScenariosComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/components/preview-scene/preview-scene.component.ts\n            \n            component\n            PreviewSceneComponent\n            \n                85 %\n                (6/7)\n            \n        \n        \n            \n                \n                src/app/components/preview-tasks/preview-tasks.component.ts\n            \n            component\n            PreviewTasksComponent\n            \n                95 %\n                (22/23)\n            \n        \n        \n            \n                \n                src/app/components/profile-settings/profile-settings.component.ts\n            \n            component\n            ProfileSettingsComponent\n            \n                92 %\n                (12/13)\n            \n        \n        \n            \n                \n                src/app/components/registration/registration.component.ts\n            \n            component\n            RegistrationComponent\n            \n                81 %\n                (9/11)\n            \n        \n        \n            \n                \n                src/app/components/task-his/task-history-extended/task-history-extended.component.ts\n            \n            component\n            TaskHistoryExtendedComponent\n            \n                90 %\n                (9/10)\n            \n        \n        \n            \n                \n                src/app/components/task-his/task-history-extended/task-history-extended.component.ts\n            \n            interface\n            FiringAttempt\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/task-his/task-history-statistics/task-history-statistics.component.ts\n            \n            component\n            TaskHistoryStatisticsComponent\n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                src/app/components/task-his/task-history-statistics/task-history-statistics.component.ts\n            \n            interface\n            FiringAttempt\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/components/task-his/task-history/task-history.component.ts\n            \n            component\n            TaskHistoryComponent\n            \n                92 %\n                (13/14)\n            \n        \n        \n            \n                \n                src/app/components/task-his/task-history/task-history.component.ts\n            \n            interface\n            FiringAttempt\n            \n                16 %\n                (1/6)\n            \n        \n        \n            \n                \n                src/app/components/task-history/task-history.component.ts\n            \n            component\n            TaskHistoryComponent\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/components/task-history/task-history.component.ts\n            \n            interface\n            FiringAttempt\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_extended/scene.component.ts\n            \n            component\n            SceneComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_extended/scripts/sceneScript.ts\n            \n            variable\n            placeBarrier\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_extended/scripts/sceneScript.ts\n            \n            variable\n            places\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_extended/scripts/sceneScript.ts\n            \n            variable\n            playConfirmationSuccessSound\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_extended/scripts/sceneScript.ts\n            \n            variable\n            playConfirmationUnsuccessSound\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_extended/scripts/sceneScript.ts\n            \n            variable\n            playVictorySound\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_extended/scripts/sceneScript.ts\n            \n            variable\n            showFailMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_extended/scripts/sceneScript.ts\n            \n            variable\n            showFinalMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_extended/scripts/sceneScript.ts\n            \n            variable\n            showTaskPanel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_extended/scripts/sceneScript.ts\n            \n            variable\n            transitions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_extended/scripts/sceneScript.ts\n            \n            variable\n            updateVisualProgres\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_habsbourg/muzeum_habsbourg.component.ts\n            \n            component\n            Muzeum_habsbourgComponent\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_habsbourg/scripts/sceneScript.ts\n            \n            variable\n            placeBarrier\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_habsbourg/scripts/sceneScript.ts\n            \n            variable\n            places\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_habsbourg/scripts/sceneScript.ts\n            \n            variable\n            playConfirmationSuccessSound\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_habsbourg/scripts/sceneScript.ts\n            \n            variable\n            playConfirmationUnsuccessSound\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_habsbourg/scripts/sceneScript.ts\n            \n            variable\n            playVictorySound\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_habsbourg/scripts/sceneScript.ts\n            \n            variable\n            showFailMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_habsbourg/scripts/sceneScript.ts\n            \n            variable\n            showFinalMessage\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_habsbourg/scripts/sceneScript.ts\n            \n            variable\n            showTaskPanel\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_habsbourg/scripts/sceneScript.ts\n            \n            variable\n            transitions\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/tasks/scenes/muzeum_habsbourg/scripts/sceneScript.ts\n            \n            variable\n            updateVisualProgres\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/components/user-profile/user-profile.component.ts\n            \n            component\n            UserProfileComponent\n            \n                90 %\n                (10/11)\n            \n        \n        \n            \n                \n                src/app/components/user-settings/user-settings.component.ts\n            \n            component\n            UserSettingsComponent\n            \n                93 %\n                (14/15)\n            \n        \n        \n            \n                \n                src/app/components/users-dashboard/users-dashboard.component.ts\n            \n            component\n            UsersDashboardComponent\n            \n                94 %\n                (17/18)\n            \n        \n        \n            \n                \n                src/app/constants.ts\n            \n            variable\n            SCENE_URL\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app/models/group-tasks.model.ts\n            \n            class\n            GroupTasks\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/group.model.ts\n            \n            class\n            Group\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/login-request.model.ts\n            \n            class\n            LoginRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/profile-update.model.ts\n            \n            class\n            ProfileUpdate\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/app/models/registration-request.model.ts\n            \n            class\n            RegistrationRequest\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/scenario-preview.model.ts\n            \n            class\n            ScenarioPreview\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/scene-preview.model.ts\n            \n            class\n            ScenePreview\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/app/models/task-creation.model.ts\n            \n            class\n            TaskCreation\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/app/models/task-files.model.ts\n            \n            class\n            TaskFiles\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/task-names.model.ts\n            \n            class\n            TaskNames\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/task-preview.model.ts\n            \n            class\n            TaskPreview\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/task-request.model.ts\n            \n            class\n            TaskRequest\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app/models/task-session-finish-request.model.ts\n            \n            class\n            TaskSessionFinishRequest\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/app/models/task-session-info.model.ts\n            \n            class\n            TaskSessionInfo\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/app/models/user-profile.model.ts\n            \n            class\n            UserProfile\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/app/services/backend.service.ts\n            \n            injectable\n            BackendService\n            \n                100 %\n                (28/28)\n            \n        \n        \n            \n                \n                src/app/services/transfer.service.ts\n            \n            injectable\n            TransferService\n            \n                5 %\n                (1/20)\n            \n        \n        \n            \n                \n                src/app/services/utils.service.ts\n            \n            injectable\n            UtilsService\n            \n                87 %\n                (7/8)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : ^15.0.0\n        \n            @angular/cdk : ^15.1.1\n        \n            @angular/common : ^15.0.0\n        \n            @angular/compiler : ^15.0.0\n        \n            @angular/core : ^15.0.0\n        \n            @angular/forms : ^15.0.0\n        \n            @angular/material : ^15.1.1\n        \n            @angular/platform-browser : ^15.0.0\n        \n            @angular/platform-browser-dynamic : ^15.0.0\n        \n            @angular/router : ^15.0.0\n        \n            @types/aframe : ^0.7.0\n        \n            aframe : ^1.4.1\n        \n            aframe-environment-component : ^1.1.0\n        \n            aframe-event-set-component : 4.1.1\n        \n            aframe-extras : ^6.1.1\n        \n            aframe-physics-extras : ^0.1.3\n        \n            aframe-physics-system : ^4.0.1\n        \n            babel-preset-env : ^1.7.0\n        \n            babelify : ^10.0.0\n        \n            bootstrap : ^5.2.3\n        \n            buffer : ^6.0.3\n        \n            jwt-decode : ^3.1.2\n        \n            parse : ^4.0.1\n        \n            rxjs : ~7.5.0\n        \n            super-hands : ^3.0.4\n        \n            three : ^0.115.0\n        \n            tslib : ^2.3.0\n        \n            webworkify-webpack : ^2.1.5\n        \n            zone.js : ~0.12.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nLirkisEduVePnUI\nThis project was generated with Angular CLI version 15.0.4.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The application will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|guard|interface|enum|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via a platform of your choice. To use this command, you need to first add a package that implements end-to-end testing capabilities.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI Overview and Command Reference page.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AppRoutingModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_bootstrap\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAboutComponent\n\nAboutComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAboutComponent->AppModule\n\n\n\n\n\nAppComponent\n\nAppComponent\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nConfirmationDialog\n\nConfirmationDialog\n\nAppModule -->\n\nConfirmationDialog->AppModule\n\n\n\n\n\nCreateQuizComponent\n\nCreateQuizComponent\n\nAppModule -->\n\nCreateQuizComponent->AppModule\n\n\n\n\n\nCreateSceneComponent\n\nCreateSceneComponent\n\nAppModule -->\n\nCreateSceneComponent->AppModule\n\n\n\n\n\nCreateTaskComponent\n\nCreateTaskComponent\n\nAppModule -->\n\nCreateTaskComponent->AppModule\n\n\n\n\n\nDashboardComponent\n\nDashboardComponent\n\nAppModule -->\n\nDashboardComponent->AppModule\n\n\n\n\n\nFooterComponent\n\nFooterComponent\n\nAppModule -->\n\nFooterComponent->AppModule\n\n\n\n\n\nGroupSessionsComponent\n\nGroupSessionsComponent\n\nAppModule -->\n\nGroupSessionsComponent->AppModule\n\n\n\n\n\nGroupSettingsComponent\n\nGroupSettingsComponent\n\nAppModule -->\n\nGroupSettingsComponent->AppModule\n\n\n\n\n\nGroupsDashboardComponent\n\nGroupsDashboardComponent\n\nAppModule -->\n\nGroupsDashboardComponent->AppModule\n\n\n\n\n\nGroupsModificationComponent\n\nGroupsModificationComponent\n\nAppModule -->\n\nGroupsModificationComponent->AppModule\n\n\n\n\n\nGroupsPreviewComponent\n\nGroupsPreviewComponent\n\nAppModule -->\n\nGroupsPreviewComponent->AppModule\n\n\n\n\n\nHistoryQuizComponent\n\nHistoryQuizComponent\n\nAppModule -->\n\nHistoryQuizComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nJoinQuizComponent\n\nJoinQuizComponent\n\nAppModule -->\n\nJoinQuizComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nMuzeum_habsbourgComponent\n\nMuzeum_habsbourgComponent\n\nAppModule -->\n\nMuzeum_habsbourgComponent->AppModule\n\n\n\n\n\nNavbarComponent\n\nNavbarComponent\n\nAppModule -->\n\nNavbarComponent->AppModule\n\n\n\n\n\nPreviewScenariosComponent\n\nPreviewScenariosComponent\n\nAppModule -->\n\nPreviewScenariosComponent->AppModule\n\n\n\n\n\nPreviewSceneComponent\n\nPreviewSceneComponent\n\nAppModule -->\n\nPreviewSceneComponent->AppModule\n\n\n\n\n\nPreviewTasksComponent\n\nPreviewTasksComponent\n\nAppModule -->\n\nPreviewTasksComponent->AppModule\n\n\n\n\n\nProfileSettingsComponent\n\nProfileSettingsComponent\n\nAppModule -->\n\nProfileSettingsComponent->AppModule\n\n\n\n\n\nRegistrationComponent\n\nRegistrationComponent\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\nAppModule -->\n\nRegistrationComponent->AppModule\n\n\n\n\n\nSceneComponent\n\nSceneComponent\n\nAppModule -->\n\nSceneComponent->AppModule\n\n\n\n\n\nTaskHistoryExtendedComponent\n\nTaskHistoryExtendedComponent\n\nAppModule -->\n\nTaskHistoryExtendedComponent->AppModule\n\n\n\n\n\nTaskHistoryStatisticsComponent\n\nTaskHistoryStatisticsComponent\n\nAppModule -->\n\nTaskHistoryStatisticsComponent->AppModule\n\n\n\n\n\nUserProfileComponent\n\nUserProfileComponent\n\nAppModule -->\n\nUserProfileComponent->AppModule\n\n\n\n\n\nUserSettingsComponent\n\nUserSettingsComponent\n\nAppModule -->\n\nUserSettingsComponent->AppModule\n\n\n\n\n\nUsersDashboardComponent\n\nUsersDashboardComponent\n\nAppModule -->\n\nUsersDashboardComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\nAppRoutingModule\n\nAppRoutingModule\n\nAppModule -->\n\nAppRoutingModule->AppModule\n\n\n\n\n\nAuthInterceptor\n\nAuthInterceptor\n\nAppModule -->\n\nAuthInterceptor->AppModule\n\n\n\n\n\nUtilsService\n\nUtilsService\n\nAppModule -->\n\nUtilsService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        2 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    32 Components\n                \n            \n        \n        \n            \n                \n                    \n                    3 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Guards\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n        \n            \n                \n                    \n                    \n                        15 Routes\n                    \n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.0\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            placeBarrier   (src/.../sceneScript.ts)\n                        \n                        \n                            placeBarrier   (src/.../sceneScript.ts)\n                        \n                        \n                            places   (src/.../sceneScript.ts)\n                        \n                        \n                            places   (src/.../sceneScript.ts)\n                        \n                        \n                            playConfirmationSuccessSound   (src/.../sceneScript.ts)\n                        \n                        \n                            playConfirmationSuccessSound   (src/.../sceneScript.ts)\n                        \n                        \n                            playConfirmationUnsuccessSound   (src/.../sceneScript.ts)\n                        \n                        \n                            playConfirmationUnsuccessSound   (src/.../sceneScript.ts)\n                        \n                        \n                            playVictorySound   (src/.../sceneScript.ts)\n                        \n                        \n                            playVictorySound   (src/.../sceneScript.ts)\n                        \n                        \n                            SCENE_URL   (src/.../constants.ts)\n                        \n                        \n                            showFailMessage   (src/.../sceneScript.ts)\n                        \n                        \n                            showFailMessage   (src/.../sceneScript.ts)\n                        \n                        \n                            showFinalMessage   (src/.../sceneScript.ts)\n                        \n                        \n                            showFinalMessage   (src/.../sceneScript.ts)\n                        \n                        \n                            showTaskPanel   (src/.../sceneScript.ts)\n                        \n                        \n                            showTaskPanel   (src/.../sceneScript.ts)\n                        \n                        \n                            transitions   (src/.../sceneScript.ts)\n                        \n                        \n                            transitions   (src/.../sceneScript.ts)\n                        \n                        \n                            updateVisualProgres   (src/.../sceneScript.ts)\n                        \n                        \n                            updateVisualProgres   (src/.../sceneScript.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/app/components/tasks/scenes/muzeum_habsbourg/scripts/sceneScript.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        placeBarrier\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (position: string) => {\n  const sceneEl = document.getElementById('scene');\n  const entityEl = document.createElement('a-entity');\n  entityEl.setAttribute('gltf-model', '#ropeBarrier');\n  entityEl.setAttribute('position', position);\n  entityEl.setAttribute('scale', '0.012 0.01 0.01');\n  if (sceneEl !== null) sceneEl.appendChild(entityEl);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        places\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    placeName: 'P1',\n    ifPlaceFound: (placeName: string) => showTaskPanel(placeName),\n    ifPlaceNotFound: () => {\n    },\n    ifPlaceNotFoundOnStart: () => {\n      placeBarrier('-3.819 1 5.049');\n      placeBarrier('-7.429 1 5.049');\n    }\n  },\n  {\n    placeName: 'P2',\n    ifPlaceFound: (placeName: string) => showTaskPanel(placeName),\n    ifPlaceNotFound: () => {\n    },\n    ifPlaceNotFoundOnStart: () => {\n      placeBarrier('-3.819 1 -2.71779');\n      placeBarrier('-7.429 1 -2.71779');\n    }\n  },\n  {\n    placeName: 'P3',\n    ifPlaceFound: (placeName: string) => showTaskPanel(placeName),\n    ifPlaceNotFound: () => {\n    },\n    ifPlaceNotFoundOnStart: () => {\n      placeBarrier('20.539 1 5.049');\n      placeBarrier('24.037 1 5.049');\n      placeBarrier('20.539 1 -2.285');\n      placeBarrier('24.037 1 -2.285');\n    }\n  },\n  {\n    placeName: 'Roaming',\n    ifPlaceFound: (placeName: string) => {\n    },\n    ifPlaceNotFound: () => {\n    },\n    ifPlaceNotFoundOnStart: () => {\n    }\n  }\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playConfirmationSuccessSound\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (elementId: string) => {\n  const confirmationEntity = document.getElementById(elementId);\n  if (confirmationEntity !== null) {\n    confirmationEntity.setAttribute('material', 'color: #36c991;');\n    confirmationEntity.setAttribute('text', 'value: Správna odpoveď');\n    // @ts-ignore\n    confirmationEntity.emit('success');\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playConfirmationUnsuccessSound\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (elementId: string) => {\n  const confirmationEntity = document.getElementById(elementId);\n  if (confirmationEntity !== null) { // @ts-ignore\n    confirmationEntity.emit('unsuccess');\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playVictorySound\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const environmentEntity = document.querySelector('#player');\n  setTimeout(() => {\n    if (environmentEntity !== null) { // @ts-ignore\n      environmentEntity.emit('win');\n    }\n  }, 2000);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFailMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const finalMsgEntity = document.querySelector('#failedMsg');\n  if (finalMsgEntity !== null) finalMsgEntity.setAttribute('visible', 'true');\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFinalMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const finalMsgEntity = document.querySelector('#gratulationMsg');\n  if (finalMsgEntity !== null) finalMsgEntity.setAttribute('visible', 'true');\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showTaskPanel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (placeName: string) => {\n  const taskPanel = document.querySelector(`#task${placeName}`);\n  if (taskPanel !== null) {\n    taskPanel.setAttribute('visible', String(!taskPanel.getAttribute('visible')));\n    // @ts-ignore\n    taskPanel.children.item(2).classList.toggle('interactible');\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transitions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    transitionName: 'P3Cplace',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if(element !== null) { // @ts-ignore\n        element.components[\"collision-detector\"].changeBoxColorGreen();\n      }\n      if (replay) {\n        const model = document.getElementById(targets[1]);\n        if (model !== null) model.setAttribute('position', '22.51704 3.933 -5.80505');\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P3Iplace',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"collision-detector\"].changeBoxColorGreen();\n      }\n      if (replay) {\n        const model = document.getElementById(targets[1]);\n        if (model !== null) model.setAttribute('position', '22.51704 3.933 -5.80505');\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P3confirm',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      playConfirmationSuccessSound(targets[0]);\n      updateVisualProgres(targets[1]);\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n      playConfirmationUnsuccessSound(targets[0]);\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P3Cdisplace',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"collision-detector\"].changeBoxColorRed();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P3Idisplace',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"collision-detector\"].changeBoxColorRed();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P2Iselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P2Iunselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P2Cunselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P2Cselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P2confirm',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      playConfirmationSuccessSound(targets[0]);\n      updateVisualProgres(targets[1]);\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n      playConfirmationUnsuccessSound(targets[0]);\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P1Cunselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P1Cselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P1Iselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P1Iunselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P1confirm',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      playConfirmationSuccessSound(targets[0]);\n      updateVisualProgres(targets[1]);\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n      playConfirmationUnsuccessSound(targets[0]);\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'finSucc',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      playVictorySound()\n      showFinalMessage()\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'finFail1',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      showFailMessage();\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'finFail2',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      showFailMessage();\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'finFail3',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      showFailMessage();\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  }\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateVisualProgres\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (elementId: string) => {\n  const progressEntity = document.getElementById(elementId);\n  if (progressEntity !== null) progressEntity.setAttribute('material', 'color: green; side: double; shader: flat');\n}\n                    \n                \n\n\n        \n    \n\n    src/app/components/tasks/scenes/muzeum_extended/scripts/sceneScript.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        placeBarrier\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (position: string) => {\n  const sceneEl = document.getElementById('scene');\n  const entityEl = document.createElement('a-entity');\n  entityEl.setAttribute('gltf-model', '#ropeBarrier');\n  entityEl.setAttribute('position', position);\n  entityEl.setAttribute('scale', '0.012 0.01 0.01');\n  if (sceneEl !== null) sceneEl.appendChild(entityEl);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        places\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    placeName: 'P1',\n    ifPlaceFound: (placeName: string) => showTaskPanel(placeName),\n    ifPlaceNotFound: () => {\n    },\n    ifPlaceNotFoundOnStart: () => {\n      placeBarrier('-3.819 1 5.049');\n      placeBarrier('-7.429 1 5.049');\n    }\n  },\n  {\n    placeName: 'P2',\n    ifPlaceFound: (placeName: string) => showTaskPanel(placeName),\n    ifPlaceNotFound: () => {\n    },\n    ifPlaceNotFoundOnStart: () => {\n      placeBarrier('-3.819 1 -2.71779');\n      placeBarrier('-7.429 1 -2.71779');\n    }\n  },\n  {\n    placeName: 'P3',\n    ifPlaceFound: (placeName: string) => showTaskPanel(placeName),\n    ifPlaceNotFound: () => {\n    },\n    ifPlaceNotFoundOnStart: () => {\n      placeBarrier('20.539 1 5.049');\n      placeBarrier('24.037 1 5.049');\n      placeBarrier('20.539 1 -2.285');\n      placeBarrier('24.037 1 -2.285');\n    }\n  },\n  {\n    placeName: 'P4',\n    ifPlaceFound: (placeName: string) => showTaskPanel(placeName),\n    ifPlaceNotFound: () => {\n    },\n    ifPlaceNotFoundOnStart: () => {\n      placeBarrier('-20.219 1 5.049');\n      placeBarrier('-16.525 1 5.049');\n      placeBarrier('-20.219 1 -2.507');\n      placeBarrier('-16.525 1 -2.507');\n    }\n  },\n  {\n    placeName: 'P5',\n    ifPlaceFound: (placeName: string) => showTaskPanel(placeName),\n    ifPlaceNotFound: () => {\n    },\n    ifPlaceNotFoundOnStart: () => {\n      placeBarrier('-32.698 1 5.049');\n      placeBarrier('-29.025 1 5.049');\n      placeBarrier('-32.698 1 -2.285');\n      placeBarrier('-29.025 1 -2.285');\n    }\n  },\n  {\n    placeName: 'P6',\n    ifPlaceFound: (placeName: string) => showTaskPanel(placeName),\n    ifPlaceNotFound: () => {\n    },\n    ifPlaceNotFoundOnStart: () => {\n      placeBarrier('33.194 1 5.049');\n      placeBarrier('36.678 1 5.049');\n    }\n  },\n  {\n    placeName: 'P7',\n    ifPlaceFound: (placeName: string) => showTaskPanel(placeName),\n    ifPlaceNotFound: () => {\n    },\n    ifPlaceNotFoundOnStart: () => {\n      placeBarrier('33.194 1 -2.285');\n      placeBarrier('36.678 1 -2.285');\n    }\n  },\n  {\n    placeName: 'P8',\n    ifPlaceFound: (placeName: string) => showTaskPanel(placeName),\n    ifPlaceNotFound: () => {\n    },\n    ifPlaceNotFoundOnStart: () => {\n      placeBarrier('45.616 1 5.049');\n      placeBarrier('49.328 1 5.049');\n    }\n  },\n  {\n    placeName: 'Roaming',\n    ifPlaceFound: (placeName: string) => {\n    },\n    ifPlaceNotFound: () => {\n    },\n    ifPlaceNotFoundOnStart: () => {\n    }\n  }\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playConfirmationSuccessSound\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (elementId: string) => {\n  const confirmationEntity = document.getElementById(elementId);\n  if (confirmationEntity !== null) {\n    confirmationEntity.setAttribute('material', 'color: #36c991;');\n    confirmationEntity.setAttribute('text', 'value: Správna odpoveď');\n    // @ts-ignore\n    confirmationEntity.emit('success');\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playConfirmationUnsuccessSound\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (elementId: string) => {\n  const confirmationEntity = document.getElementById(elementId);\n  if (confirmationEntity !== null) { // @ts-ignore\n    confirmationEntity.emit('unsuccess');\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        playVictorySound\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const environmentEntity = document.querySelector('#player');\n  setTimeout(() => {\n    if (environmentEntity !== null) { // @ts-ignore\n      environmentEntity.emit('win');\n    }\n  }, 2000);\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFailMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const finalMsgEntity = document.querySelector('#failedMsg');\n  if (finalMsgEntity !== null) finalMsgEntity.setAttribute('visible', 'true');\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showFinalMessage\n                        \n                    \n                \n            \n                \n                    \n                        Default value : () => {\n  const finalMsgEntity = document.querySelector('#gratulationMsg');\n  if (finalMsgEntity !== null) finalMsgEntity.setAttribute('visible', 'true');\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        showTaskPanel\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (placeName: string) => {\n  const taskPanel = document.querySelector(`#task${placeName}`);\n  if (taskPanel !== null) {\n    taskPanel.setAttribute('visible', String(!taskPanel.getAttribute('visible')));\n    // @ts-ignore\n    taskPanel.children.item(2).classList.toggle('interactible');\n  }\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        transitions\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    transitionName: 'P3Cplace',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if(element !== null) { // @ts-ignore\n        element.components[\"collision-detector\"].changeBoxColorGreen();\n      }\n      if (replay) {\n        const model = document.getElementById(targets[1]);\n        if (model !== null) model.setAttribute('position', '22.51704 3.933 -5.80505');\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P3Iplace',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"collision-detector\"].changeBoxColorGreen();\n      }\n      if (replay) {\n        const model = document.getElementById(targets[1]);\n        if (model !== null) model.setAttribute('position', '22.51704 3.933 -5.80505');\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P3confirm',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      playConfirmationSuccessSound(targets[0]);\n      updateVisualProgres(targets[1]);\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n      playConfirmationUnsuccessSound(targets[0]);\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P3Cdisplace',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"collision-detector\"].changeBoxColorRed();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P3Idisplace',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"collision-detector\"].changeBoxColorRed();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P2Iselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P2Iunselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P2Cunselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P2Cselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P2confirm',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      playConfirmationSuccessSound(targets[0]);\n      updateVisualProgres(targets[1]);\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n      playConfirmationUnsuccessSound(targets[0]);\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P1Cunselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P1Cselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P1Iselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P1Iunselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P1confirm',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      playConfirmationSuccessSound(targets[0]);\n      updateVisualProgres(targets[1]);\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n      playConfirmationUnsuccessSound(targets[0]);\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  }, {\n    transitionName: 'P4Cplace',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"collision-detector\"].changeBoxColorGreen();\n      }\n      if (replay) {\n        const model = document.getElementById(targets[1]);\n        if (model !== null) model.setAttribute('position', '-18.35 3.933 11.5');\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P4Iplace',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"collision-detector\"].changeBoxColorGreen();\n      }\n      if (replay) {\n        const model = document.getElementById(targets[1]);\n        if (model !== null) model.setAttribute('position', '-18.35 3.933 11.5');\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P4confirm',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      playConfirmationSuccessSound(targets[0]);\n      updateVisualProgres(targets[1]);\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n      playConfirmationUnsuccessSound(targets[0]);\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P4Cdisplace',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"collision-detector\"].changeBoxColorRed();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P4Idisplace',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"collision-detector\"].changeBoxColorRed();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P6Cunselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P6Cselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P6Iselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P6Iunselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P6confirm',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      playConfirmationSuccessSound(targets[0]);\n      updateVisualProgres(targets[1]);\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n      playConfirmationUnsuccessSound(targets[0]);\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P7Cunselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P7Cselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P7Iselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P7Iunselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P7confirm',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      playConfirmationSuccessSound(targets[0]);\n      updateVisualProgres(targets[1]);\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n      playConfirmationUnsuccessSound(targets[0]);\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P8Cunselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P8Cselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P8Iselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P8Iunselect',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      const element = document.getElementById(targets[0]);\n      if (element !== null) { // @ts-ignore\n        element.components[\"clk-multi-event-handler\"].toggleButton();\n      }\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'P8confirm',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      playConfirmationSuccessSound(targets[0]);\n      updateVisualProgres(targets[1]);\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n      playConfirmationUnsuccessSound(targets[0]);\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'finSucc',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      playVictorySound()\n      showFinalMessage()\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'finFail1',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      showFailMessage()\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'finFail2',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      showFailMessage()\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'finFail3',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      showFailMessage()\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'finFail4',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      showFailMessage()\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'finFail6',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      showFailMessage()\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'finFail7',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      showFailMessage()\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  },\n  {\n    transitionName: 'finFail8',\n    ifTransitionFound: (targets: string[], replay: boolean) => {\n\n    },\n    ifTransitionEnabled: (targets: string[], replay: boolean) => {\n      showFailMessage()\n    },\n    ifTransitionDisabled: (targets: string[], replay: boolean) => {\n    },\n    ifTransitionNotFound: (targets: string[], replay: boolean) => {\n\n    }\n  }\n]\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updateVisualProgres\n                        \n                    \n                \n            \n                \n                    \n                        Default value : (elementId: string) => {\n  const progressEntity = document.getElementById(elementId);\n  if (progressEntity !== null) progressEntity.setAttribute('material', 'color: green; side: double; shader: flat');\n}\n                    \n                \n\n\n        \n    \n\n    src/app/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        SCENE_URL\n                        \n                    \n                \n            \n                \n                    \n                        Default value : `http://localhost:3000/scene`\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
